{{/* gotype: entgo.io/ent/entc/gen.Graph */}}

{{ define "http/list" }}
    {{- with extend $ "Package" "http" -}}
        {{ template "header" . }}
    {{ end }}
    {{ template "helper/http/import" $ }}

    {{ $pkg := base $.Config.Package }}
    {{ range $n := $.Nodes }}
        // @Summary Fetches {{ $n.Name }}
        // @Description Fetches {{ $n.Name }}
        // @ID Fetches {{ $n.Name }}
        // @Tags [{{ $n.Name }}]
        // @Accept  json
        // @Produce  json
        // @Success 200 {array} {{ $pkg }}.{{ $n.Name }}
        // @Failure 400 {object} main.HTTPError
        // @Failure 404 {object} main.HTTPError
        // @Failure 500 {object} main.HTTPError
        // @Router /{{ $n.Name | lower }} [get]
        // Read fetches the {{ $pkg }}.{{ $n.Name }} identified by a given url-parameter from the
        // database and returns it to the client.
        func (h *{{ $n.Name }}Handler) List(c *fiber.Ctx) error {
            l := h.log.With(zap.String("method", "List"))
            q := h.client.{{ $n.Name }}.Query()
            var r http.Request
	        fasthttpadaptor.ConvertRequest(c.Context(), &r, true)
            {{- with edgesToLoad $n "list" }}
                // Eager load edges that are required on list operation.
                q{{ .EntQuery }}
            {{- end }}
            var err error
            {{- template "helper/http/pagination" $n -}}

            l.Info("{{ $n.Name | kebab | plural }} rendered", zap.Int("amount", len(es)))
            return c.JSON(New{{ (responseView $n $n.Annotations.Elk.ListGroups).ViewName }}s(es))
        }
    {{ end }}
{{ end }}