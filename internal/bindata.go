// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// template/http/create.tmpl
// template/http/delete.tmpl
// template/http/handler.tmpl
// template/http/helpers.tmpl
// template/http/import.tmpl
// template/http/list.tmpl
// template/http/read.tmpl
// template/http/relations.tmpl
// template/http/request.tmpl
// template/http/response.tmpl
// template/http/update.tmpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateHttpCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xdb\x38\x10\xbd\xe7\x57\xcc\x12\x2e\x20\x05\x36\x75\x2f\x90\x43\xd1\x78\xd3\x00\x6d\xb6\xdb\x64\x37\x97\x5e\x18\x73\x24\x71\xc3\x0c\x65\x72\x14\xd7\xab\xfa\xbf\x2f\x28\xc9\x1f\x92\xdd\x6c\x22\x20\x80\xa2\x0c\xdf\xbc\xc7\xf7\x38\x4c\xd3\x64\xe7\x50\x38\x5e\x57\xf8\x1e\x90\xb8\x70\xd2\xb8\x0c\x89\xe3\xcf\x22\x2b\x90\xe4\x95\x57\x55\x09\xe7\xd9\x66\x73\x76\xd6\x34\xa0\x31\x37\x84\x20\x4a\xe6\x2a\x5b\x78\x54\x8c\x02\x36\x9b\x33\x00\x80\xa6\x99\xc1\xca\x70\x09\xf8\x83\x91\x34\x4c\x40\x7c\x55\x8b\x47\x55\xa0\xe8\x16\x08\x98\xf5\xa5\x5d\x39\x30\x3e\x55\x56\x71\xc4\x43\xa5\xd1\x0b\x90\x7b\x30\x88\x18\xfb\xdf\x0e\x6b\x6d\x85\x3e\x6b\x29\x98\xa7\xca\x79\x16\x30\x89\x95\xdb\xd2\x49\xf5\x58\xc0\xfb\x0b\x78\x50\x01\x61\x22\x3f\x3a\xca\x4d\x21\x7b\x2e\x07\x90\x5e\x51\x81\x30\xa1\x58\x3b\x91\x37\x4e\x63\x80\x03\x82\x59\x06\x1f\x5b\x85\xd0\x09\x0d\xa0\x80\x70\xb5\xeb\xb0\xd9\xc8\xf8\x4a\xf2\x46\x3d\x45\x58\x50\xa4\x21\xb0\xf3\x18\xc0\x30\x18\x02\x2e\x11\xb4\x62\x15\x89\xc8\x1d\x6e\x5e\xd3\x02\x92\x12\x06\x8b\x3f\x29\xd2\x16\x7d\xda\xb7\x4c\x56\x10\xf5\xc9\x6f\x18\x2a\x47\x01\xef\xbd\x61\xf4\x53\xf0\x70\xde\x7f\x5f\xd6\x18\x38\x85\x66\x07\x1b\x1f\x1b\xa5\x94\xd2\xba\x42\xde\x1b\x2e\x93\x7f\x55\x25\x6f\xd9\x1b\x2a\x12\xf1\x84\x5c\x3a\x2d\xa6\x20\xba\x16\x22\x4d\x07\x6b\xb3\x0c\xae\x90\x5b\xce\x95\x0b\xdc\x12\x97\x83\x8a\x67\xe5\x41\x0f\x69\x77\x50\x3d\x9b\xb3\x41\x75\x8c\xc3\x69\xd3\x34\x2e\x9c\xc6\x99\x22\x3d\x7b\x56\xd6\x68\xc5\x38\xf3\x1d\x84\x88\x76\xcc\xb6\x5e\x1e\x50\xbb\x55\xcf\xb8\xdb\xcf\x21\xad\x87\x4e\xf4\xc2\x1a\x24\x1e\x5a\x22\xfb\xdd\x4c\x47\xcc\xb6\xd6\xe7\xad\xf5\x24\x7f\x37\x68\x75\x18\xc4\x73\xfb\x98\x1c\x74\x0b\x9a\xc7\x9d\xac\x17\xdc\xd6\x46\xbb\x7f\xbb\x00\x32\x76\xe4\xc0\x8e\x94\xbc\x45\x3e\xb5\x2c\x39\x3f\x0d\x97\x1e\xc1\x6c\xc6\xa4\xe3\x81\x18\x53\xdc\x6b\xc1\x5e\xcb\x5c\x17\xf8\x3f\x52\xf0\x4d\x52\xa2\x91\x26\x8f\xab\xfe\x22\xb3\xac\x11\x4e\x40\xef\x65\x77\xf8\x5f\x6a\x56\x6c\x1c\xdd\x22\x1f\x68\x1e\xf7\x3d\xd6\xbc\xed\x87\x36\xbc\xa9\xcf\x07\xdd\xee\xed\xe9\x36\x52\xca\x17\x3a\xed\xa7\xcc\xe1\xf3\xaa\xcd\xc7\x29\xa0\xf7\xed\xa8\x91\x31\xa0\x89\x8f\xc3\x86\xf1\x07\x27\x69\xfa\xda\xd3\x80\xde\x3b\x3f\x2b\xe3\xf9\x37\x54\x08\xd0\x66\xc1\x20\x2e\x31\x57\xb5\x65\x01\x49\xe5\x0d\x31\x88\x85\xab\xad\x06\x72\xdc\x4f\x23\x10\x90\x6c\x83\xfe\x13\x1e\xf1\x41\x3d\xa4\xe9\xc9\xa3\xf3\x0d\xad\x53\x3a\xce\x77\xbf\x1e\x9e\x9c\xe5\x0b\x27\xe7\xcf\x1a\xfd\x3a\x49\xe5\x7d\x89\x1e\x93\x83\xbf\xfd\x04\xeb\x56\xe8\x63\xcd\xf5\x65\x82\xfd\xb2\xeb\xcb\xb1\xb7\x27\x36\xa0\xbb\x1d\x62\x3e\xef\xdc\xe7\xc8\x69\x42\x20\x46\xb7\xc8\x88\xfc\x5c\x15\xe8\xa1\x13\xd0\x06\x9b\x4b\xc5\xa0\x3c\x42\x9c\x18\xc6\xa3\x06\x47\xdb\x2d\x71\x15\xfa\x36\x0e\xf2\x08\x6a\xd9\x34\x20\xe7\xc4\xad\xac\x71\xaf\x5f\xe4\xa0\xb7\xf7\x02\x96\xf2\x0f\xb2\xeb\x97\xdd\x3d\xea\xf8\x7a\xb7\x8f\x96\x8a\x79\xac\x0a\x02\x12\x6b\x02\x83\x20\xc7\xb3\xdc\xd5\xa4\x45\xf7\x1e\x0c\x15\xb5\x55\x5e\x1c\xc7\x5a\x7c\x76\xc5\x6e\x61\x97\x9d\x1c\x44\xbc\x07\xae\x89\x93\xef\xe2\x5d\xf8\x2e\xa6\x80\xf2\x5d\x48\x45\xef\x5b\xeb\xea\x91\x85\xe9\x09\xec\x17\x42\xe9\x51\xe9\xd3\x91\x14\xa0\x72\x46\x0f\x75\x15\x07\xbd\x18\xa0\x1e\xc5\xd5\xca\x6b\xca\x5d\x22\x06\x79\x6b\x91\xe2\x98\xf2\x48\x1a\x3d\xc6\x4b\x6c\xab\x48\xec\xe2\xd7\x07\xb7\x55\xf7\xeb\x4c\x0e\xfc\x55\x61\xfd\x4f\x70\x24\xbf\x28\x1f\x4a\x65\xef\xdc\xa7\xbb\xbb\xaf\xc3\x2b\x37\xb9\xc1\x55\xd3\x40\xe2\xfb\xaf\x7f\x1b\x5c\xc5\xd8\x4e\x48\x7e\x20\x72\xdd\xf4\x09\x72\x6e\x1f\xfb\xbb\xe6\xca\xbb\xba\x0a\xa9\x8c\x85\x3d\xa5\x04\xd3\x29\xac\xf6\xbd\xc7\xff\xe1\xec\xde\xfe\x0b\x00\x00\xff\xff\x19\x6a\xe4\x9e\x90\x09\x00\x00")

func templateHttpCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpCreateTmpl,
		"template/http/create.tmpl",
	)
}

func templateHttpCreateTmpl() (*asset, error) {
	bytes, err := templateHttpCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/create.tmpl", size: 2448, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\x41\x6b\xdc\x3c\x10\xbd\xef\xaf\x18\x86\xfd\x40\x0e\xb1\x7c\x0f\x7c\xa7\x6e\x48\x16\x4a\x5a\xda\x42\x2e\xb9\x28\xd6\xd8\x16\xd1\x4a\xae\x3c\x6e\x92\xba\xfe\xef\x65\x62\xaf\xb3\x4e\x52\x81\x41\x63\xbd\x79\x33\xf3\x9e\x34\x0c\xc5\x19\xd4\x91\x9f\x5b\xba\x00\x0a\x5c\x47\xed\x62\x41\x81\xe5\x2b\x8b\x9a\x82\xbe\x4a\xa6\x6d\xe0\xac\x18\xc7\xcd\x66\x18\xc0\x52\xe5\x02\x01\x36\xcc\x6d\x61\xc9\x13\x13\xc2\x38\x6e\x00\x00\x86\x21\x87\x47\xc7\x0d\xd0\x13\x53\xb0\xb0\x05\xfc\x6a\xca\x07\x53\x13\x4e\x09\x08\xf9\x0c\x9d\xe0\xc0\x74\x68\xbd\x61\xe1\x23\x63\x29\x21\xe8\x57\x32\x10\x8e\xd7\xe8\x14\xeb\x5b\x4a\xc5\x4b\x0b\xee\xd0\xc6\xc4\x08\x5b\x41\x1e\xa1\xdb\xf6\xa1\x86\x8b\xff\xe1\xde\x74\x04\x5b\xfd\x29\x86\xca\xd5\x7a\xee\xe5\x84\x32\x99\x50\x13\x6c\x83\x60\xb7\xfa\x26\x5a\xea\xe0\xa4\xc1\xa2\x80\xdd\xcb\x84\x90\xe8\x10\x7f\x51\x07\x66\x61\x1f\x47\x2d\xdb\xa0\x6f\xcc\x41\x28\xa1\x4a\xf1\x00\xdc\x10\x58\xc3\x46\x0a\xeb\x85\xa7\xea\x43\x09\xaa\x81\x55\xc2\xb5\x09\xd6\x53\xca\xe6\x12\xea\x11\x64\x1e\xfd\x8d\xba\x36\x86\x8e\x6e\x93\x63\x4a\xe7\x90\xe0\x6c\xfe\xff\xb3\xa7\x8e\x33\x18\x16\x5a\x59\x5e\x5a\x6f\xb4\x8f\xb5\xbe\x75\xdc\xa8\xdf\xa6\xd5\xdf\x39\xb9\x50\x2b\x3c\x10\x37\xd1\xe2\x39\xe0\x54\x02\xb3\x6c\x95\x2b\x76\xfd\x43\x54\x9b\xcb\x38\x79\x9f\x3c\x8a\x3c\xf9\x51\xdb\xe3\xa2\x94\x40\xea\x96\xde\x51\xe0\xb5\x12\x7a\xaa\xf6\x25\xd0\x7e\xa7\x86\x01\x5c\x25\x87\xfb\x9d\xbe\x36\xdd\x55\xfc\xf1\xdc\x0a\x68\xca\xd8\xef\xf4\x1c\x2b\x67\x33\x71\xdc\x77\x12\x39\xbb\xb8\x9f\xe9\xcb\x27\x2a\x55\x12\x13\x99\x9e\x58\x65\xd9\xe6\xed\x14\xab\x58\xd6\xc7\x53\x51\x4a\x31\xe5\x8d\xe8\xee\x42\x8d\x60\x5d\xc9\xef\x52\xf1\x52\x50\x1d\x82\xf2\xae\x63\xc0\x10\x39\xaf\x62\x1f\x2c\x66\xef\xb1\x9f\x63\xbd\x20\x55\x9b\x5c\xe0\x0a\x50\x2c\xd8\x07\x56\x77\xf8\x5f\x77\x87\xe7\xe0\x6c\x86\xf3\xb0\xa2\x50\xf6\x01\xcf\x8e\x2a\xd3\x7b\xc6\x99\x04\xb0\x8c\xbd\xb7\x10\x22\xc3\xf4\xc4\x00\x17\x81\xff\xc0\x03\xdd\x9b\xfb\x35\xcb\x3b\x83\xbc\xde\x87\x2a\x2a\x3c\x71\x66\x4e\x94\xbb\x3a\x91\xca\xd5\x38\x36\x8b\x8b\x21\xb3\x8b\x53\xe3\xeb\x2a\x89\x82\xa5\xa4\x6f\xe2\x8b\x17\x81\xd5\xe3\xeb\xf9\xdb\x47\xbb\xec\xfe\x06\x00\x00\xff\xff\x37\xb6\xe9\xcf\x63\x04\x00\x00")

func templateHttpDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpDeleteTmpl,
		"template/http/delete.tmpl",
	)
}

func templateHttpDeleteTmpl() (*asset, error) {
	bytes, err := templateHttpDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/delete.tmpl", size: 1123, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHandlerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x51\x6f\xe3\x36\x0c\x7e\xef\xaf\xe0\x8c\xe0\x60\x07\xa9\xdc\xdb\xde\x8a\xe6\x65\x5d\x7b\x7d\xb8\x15\x45\xd7\x61\x0f\x87\x7b\x50\x6d\xc6\x16\xea\x48\x86\xc4\xb4\xd9\xb9\xf9\xef\x03\x65\xc5\xb1\x13\x27\xc3\xb5\x40\x61\xcb\x24\xbf\x8f\xa2\xc8\x2f\x6a\x9a\x74\x0a\x85\xa1\x7f\x6b\xbc\x04\xd4\x54\x18\xa1\x4c\x8a\x9a\xf8\x3f\x4b\x0b\xd4\xe2\x8b\x95\x75\x09\xd3\x74\xb3\x39\x3b\x6b\x1a\xc8\x71\xa1\x34\x42\x54\x12\xd5\x69\x29\x75\x5e\xa1\x8d\x60\xb3\x39\x03\x00\x68\x9a\x73\x78\x53\x54\x02\xae\x09\x75\x0e\x13\x88\x1e\x64\xf6\x22\x0b\x8c\xda\x88\x08\xce\x83\x6b\xeb\x0e\x84\xcb\xba\x92\xc4\x80\x28\x73\x86\x12\x3b\x30\x60\x8c\xdd\xaa\xef\x5b\xd5\x68\x53\x9f\x83\x5a\xd6\xc6\x52\x04\x13\xf6\xf4\xae\x69\x0a\x21\x31\x28\xa5\x03\x67\x96\x08\x99\xd1\xaf\xa8\x15\xea\x0c\x61\x89\x54\x9a\xdc\xc1\xca\x61\x0e\x46\x83\x36\x39\x9e\x87\x08\x27\x3c\x04\x17\xa4\x03\x71\x64\x57\x19\x41\xb3\x83\xff\x5d\xd1\x52\xba\x17\x20\xc3\xc0\x0b\x55\xac\x2c\xc2\x5b\xa9\xb2\x12\xac\x59\x11\x3a\xb6\x58\x2c\x94\x23\xb4\x3d\xc4\xc7\xd6\xb8\x52\x9a\x7e\xfb\xb5\x45\x5b\xac\x74\x06\xb1\x75\xc1\x96\x70\xca\xb1\xed\x56\xcf\xc6\x54\xd0\x80\x45\x5a\x59\x0d\xd6\x7d\xb2\xf0\xcb\x1c\x2e\x60\xd3\x8b\xbe\x95\x8e\xee\x88\xea\xbb\x36\xdf\xb8\x04\x2e\x8c\x08\xcb\xdb\x95\xce\x12\x58\xa8\x67\xb4\xdb\x4f\xd0\x74\x47\x10\x80\x19\x27\xce\x60\xda\xba\x5d\xd3\x3a\x01\xb4\xd6\xf4\x3d\xf9\x2f\xa3\x35\x5c\xce\x21\x13\xd7\x46\x13\xae\x29\x4e\x06\xe6\x85\x74\xc4\xd4\x77\xec\xb4\x5d\xc8\x5c\xd6\x64\xac\xb8\xc7\x37\x9f\xe8\xd3\xd3\x43\x2f\xb3\xb8\x3c\x02\x11\x67\xb4\x1e\x9a\x42\xaa\x5a\x55\xdd\xe7\xb6\x35\xba\x06\x99\xd4\x2f\x05\x53\x3f\x4b\x87\x30\xe1\x24\x17\xaa\x10\xa1\x03\x7b\x8d\x64\xa5\x2e\x10\x26\x9a\x7d\x27\xe2\xde\xe4\xe8\xa0\xd7\x96\x99\xd1\x8e\x20\x1e\x90\x33\xba\x16\xf7\x72\xc9\x38\xd7\x16\xb9\x0d\xc3\x69\xce\xe1\x33\x5c\x5d\x81\x32\x24\x8f\x87\x3c\xa2\xcc\x8f\x5b\xff\xae\x73\x49\x78\xdc\xfe\x07\x56\x78\xca\xfe\x55\x39\xda\xb7\x86\x4d\xa2\xdf\xa4\x16\x37\x79\x81\x6e\x30\x7d\xa3\x48\xbc\xc0\x76\xf1\x0e\xb5\x74\x99\xac\x60\x2f\x26\xcc\xe5\x3e\xd4\x70\xbb\x5d\x69\xae\xae\xb8\x30\x70\x0e\x9f\x3b\xef\xe4\xac\x7b\x4d\xd3\x61\xdc\x5d\x37\xb7\xfc\x74\xbe\x91\x21\xb3\xab\x1c\x4c\x8d\x56\x92\x32\xda\xf1\xc8\x6e\x0f\x7b\xb3\x11\x83\x78\xd1\x21\xfb\x79\x1b\xc5\xde\x8e\xf3\x20\xfb\x30\xeb\x67\xc3\x76\xaf\x14\x6a\xe2\xb7\x29\x6a\x12\xd7\x7e\x39\xf0\xa8\x4c\x11\xde\xa6\x3f\x64\x2d\xbe\x9a\xa2\x40\xdb\x6b\xcf\xee\xd5\x0f\xea\x3d\xbe\x8d\x65\xc4\x83\xb7\xc3\x9f\x41\xd5\x07\x4b\x60\x3a\xba\x8b\x66\x6c\x36\x3e\x8d\xb9\x36\x07\x27\xde\xee\xeb\x12\xb2\xd9\x81\xa9\x32\xc5\xa5\x7f\x8a\x7f\x14\x95\x31\xe7\xf1\x17\x59\xa5\x8b\x38\xda\x8a\xfd\x0c\xa2\x31\x9a\x28\x49\x86\x70\x9b\xb1\x3a\xa4\x29\x3c\x06\x5d\x0c\x71\xae\x13\x4a\x07\x54\x22\x14\xa8\xf9\xa4\x31\xdf\x9e\x89\x3f\x70\x6f\x51\xaf\xa8\x21\x2b\x55\x2b\xb2\x56\x0c\xab\x1b\x97\xe3\xa5\x4a\xe0\x4f\xb3\xd2\x14\xdb\x20\x82\xbe\x37\xed\x0c\x7a\x9a\x3b\x2c\x91\x5a\x80\x75\x82\x75\x78\x64\xea\xf7\x9d\x7d\xf5\xc5\x83\x71\x14\x47\x69\x34\x3b\x14\x63\x11\xe2\x92\x23\xc5\x39\xc1\xc8\xa2\x31\xce\xf7\x05\x99\xae\x51\xf9\x66\x94\xd2\x07\x7e\x80\xb0\xd5\xa1\x23\x5b\x94\x94\x95\xa7\x48\x43\xf0\x07\x68\x5b\x79\x1b\xa7\x6d\x6d\xa7\x78\x43\xf4\x07\x78\x59\x36\x4f\xd5\x77\x94\xce\x07\x9d\x22\xfb\x19\xed\x3d\x92\xd8\xb8\x0a\x8f\xa5\x0a\x7b\xed\x90\xf6\x42\x37\xe3\xf5\x3a\x02\x9e\x1c\x60\xff\xaf\xec\xef\xdf\xd3\x76\x57\x12\x47\x56\xd5\x37\x9a\x6e\xf8\x12\x11\xa3\xb5\xed\x75\x22\xf1\x06\x5d\x1c\x5e\x40\xda\xef\x4e\x3c\x59\xb5\x7c\xb0\xb8\x50\x6b\x8e\x12\x6d\x7c\x32\x83\xc8\x0b\x56\x94\x84\x1f\xfc\x1d\xd3\x0f\x59\xdf\x2a\xac\x72\xc7\xfe\x0e\x96\xb2\xfe\xd6\x62\x7d\x6f\x1f\x09\x7c\xfb\xce\x2a\xe6\x9d\x7a\xbc\x6a\x01\x3e\x60\x3e\xe7\x1b\x05\xbc\xbf\x43\x85\xda\x63\x24\xfc\xed\x62\x5c\x60\x0f\x2f\x1f\xde\xc8\xe7\xbc\x94\x2f\x18\xf7\xb8\x66\x70\xb1\x2b\xe9\xc2\x58\x78\x99\xc1\x2b\x3b\xb6\xcd\xe1\xc9\xf7\x38\x60\x0e\xb2\xae\x51\xe7\xb1\x9d\x41\x4f\x7a\x39\xb2\x77\x3e\x9b\xfd\xe2\xd9\x50\x95\xee\x24\xfe\x0b\x00\x00\xff\xff\xb5\xcc\x98\x9e\xd7\x0b\x00\x00")

func templateHttpHandlerTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHandlerTmpl,
		"template/http/handler.tmpl",
	)
}

func templateHttpHandlerTmpl() (*asset, error) {
	bytes, err := templateHttpHandlerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/handler.tmpl", size: 3031, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHelpersTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x6f\x6f\xdb\xb6\x13\x7e\xdf\x4f\x71\x3f\xc1\xf8\x55\x0a\x6c\xaa\xc5\xde\xb9\xc8\x80\x76\x4d\x07\x03\x41\x9b\x25\xcb\xde\x14\x05\xca\x88\x27\x99\x0b\x45\x29\x47\x2a\x9d\xab\xea\xbb\x0f\xa4\x64\x5b\x96\xe5\x24\x4b\xb2\x09\x08\x1c\x8b\xc7\xfb\xf3\x1c\x9f\xe7\xe8\xba\x06\x81\xa9\xd4\x08\xc1\x12\x55\x89\x14\x2f\xad\x2d\x63\x81\x49\x21\x70\xc6\xb5\x98\xdd\x72\x25\x05\xb7\x38\x23\xbc\xa9\xd0\xd8\x00\x66\x4d\xf3\x02\x00\xa0\xae\xe3\x23\xc8\x0a\xbb\x2a\x71\x0e\xa8\x6d\x56\x30\x59\xc4\xa8\xad\xfb\x4b\xe2\x0c\x35\xfb\x7d\x55\x22\x1c\xc5\xdd\x06\x99\x02\x12\xc1\xfc\x18\x90\x9b\xd5\x9f\xa6\xd0\xec\x52\xe7\x9c\xcc\x92\xab\x0f\x54\xe4\xe7\xc8\x05\x52\x48\xec\x5d\x21\x56\x53\xf8\xbf\x88\xde\xf8\x0d\xff\x3b\x06\x2d\x15\xd4\xde\x89\x7b\x14\x3b\x21\x2a\x28\x0c\xd0\x7d\x80\xcf\x56\xea\x0c\x9c\xcb\x60\x0a\xdf\x79\xd9\x19\x20\x51\x14\x6d\xb6\x11\x6a\x81\xc4\xde\x71\x71\xde\xd6\x12\x7e\x9b\x02\x4d\x21\x90\xda\x57\xe9\xf7\x83\xb1\x24\x75\x16\xf4\xb7\xd9\x8a\xb4\xff\xba\x2e\xdc\x95\xa2\x11\x85\xf9\xa3\x45\x47\x16\x1a\x26\x1b\x60\xdc\x13\xc7\xd0\xad\x21\xd8\x25\x82\xe0\x96\xb3\xcd\x2a\x12\x19\x87\x43\xce\xaf\x31\xcc\x79\xf9\xb9\x0d\xfa\xa5\xfd\xd8\x86\xae\xeb\x19\x10\xd7\x19\xc2\x24\x75\xf6\x13\xf6\x41\xa2\x12\x06\x7a\x91\xd6\x76\x93\x64\x89\xc9\xb5\xab\x4c\x12\x0a\x67\xcd\xb5\x80\x50\x17\x16\x26\x29\xfb\x54\xba\x24\xb9\x8a\x20\xd4\xce\x1b\xfb\xc8\x73\x84\x09\x5b\xbc\xf7\xff\x45\x63\x1e\x65\x3a\x74\x3a\x30\xea\x9a\x2a\x58\x5d\x3b\x97\x17\x96\xaa\xc4\xfa\x0c\xa1\x69\xe0\x78\xd8\xb6\xfe\xe3\x10\xf8\x1c\xb4\xfb\x7c\x2a\x4d\x13\x7c\x81\x63\xf8\x9a\x4b\x63\x5c\x2f\x69\x1d\x33\x75\xfe\xe6\x30\xb0\xfd\xba\xe7\x75\x3f\x7f\xd4\x7b\x19\x77\x65\x15\xe4\x7c\x75\x0d\x2a\xc8\xb8\x6f\x0b\x73\xa2\xab\x7c\xac\xc4\x71\x2c\x66\x23\x96\xbe\x32\x65\x70\xb8\xe0\xb3\x51\x06\xc7\xbc\xdf\x0d\xe2\xde\xd9\xbf\xa7\xc0\x9e\xc7\x8e\x6b\xce\x2d\x3b\xe3\xc9\x35\xcf\x5c\xfc\x2e\xcc\xa6\x76\x68\x9a\xb0\xae\x27\x29\x7b\xc7\x8d\x4c\x3c\x61\xc3\x92\xa4\xb6\x10\x1c\x09\x16\x0c\x52\x72\xe7\xe4\x10\x2b\xf7\x80\x38\xd0\x62\x24\xea\xe8\x19\x8d\xee\x1d\x29\xa8\xeb\x80\x3f\xcb\x3b\x5d\x68\x9a\xa6\xae\x0f\x35\x7a\xf0\xfa\xc0\xab\x8e\x5f\xd8\xf2\xeb\x44\x64\x38\x4a\xaf\x75\x78\xdc\x50\xe9\x4e\x36\xe0\x23\xd9\x80\xf7\xb0\x01\x45\x86\x30\xb0\x7c\x04\x17\x46\x5e\xc9\x14\x14\x6a\x27\x99\x26\x82\x9f\xe1\xd5\x20\x55\xc5\x16\x3a\x2d\xc2\xe0\x76\xab\x78\x29\x97\x0a\x45\x2b\xb8\xad\x2e\xb5\xbb\x19\x63\xbb\x9d\x3d\x24\xbc\xde\x7a\x60\xb9\xd1\x5a\xe8\xeb\xad\xcb\xd5\x11\x6e\xdb\xec\x17\x07\x46\x97\x14\xb3\x94\x8a\x7c\x56\x91\x0a\xd6\xe5\xc5\x31\x2c\xde\x83\x34\x70\x79\x7e\x0a\x25\x27\x9e\xa3\x45\x62\x2f\x7a\xbd\xf5\x4a\xb8\x30\x0b\x6d\x77\x30\x11\xd3\x35\x8d\x8c\xa5\xa4\xd0\xb7\xec\xad\x2d\x64\x98\x2c\x25\xbb\x3c\x3f\x3d\x73\xae\x42\x3f\x41\x44\xd0\x1b\x34\x1d\xf9\x46\x19\x32\x98\x5d\x19\x5a\xeb\x1a\x2c\x05\xb8\xb4\xa1\x22\xb5\xcd\xb0\x9b\x65\x17\x7e\x2a\x84\x2e\xc8\x14\xc6\x43\x1f\x1e\x7a\x77\xe1\x1f\x48\x01\x79\x65\x2c\x5c\x21\x70\x0d\x52\x5b\xcc\x90\x20\x23\xe4\x16\x09\xbe\x23\x15\xc1\x03\xfb\x33\x10\x37\xe9\x07\xd0\x68\xae\xff\xbc\xa5\x1e\xa9\xd9\x92\x6b\xa1\xdc\x64\x86\xdd\xeb\xc4\x1e\xca\xe6\x9b\xb4\xc9\xb2\xf7\xa2\xcf\xf2\xb6\x99\x93\x16\xaa\x43\x44\xc7\x9b\xd6\x32\xd0\x85\x9d\xa5\x45\xa5\x45\x30\x46\xf6\x84\x1b\x74\x17\x1f\xb6\x30\x1f\x0b\xfb\xc1\xd9\x79\xf0\xe7\xa3\x1c\xcf\x4d\xd6\x9d\x23\x59\x9e\x68\xbb\xed\xd5\xa8\x75\x47\xb7\xdc\x64\xc3\xd6\xd6\xf5\xba\x18\x76\x5a\x64\xae\x84\xa9\x83\x93\x41\x4f\x0a\xc7\x7d\x76\xc7\x60\x93\x6b\x7b\x08\x72\x93\x45\xfb\x72\xe1\xfa\x39\x44\xc2\x29\x51\xa5\x38\x3d\x00\x8c\x8b\xce\xf4\x19\xf1\x68\x0d\xfe\x0d\x40\xf6\x78\xf1\x30\x48\x4a\x92\xb7\x3c\x59\x8d\xa2\x11\xc7\x70\xd6\x2e\x7b\x60\x1e\x21\xc7\x02\x53\x5e\x29\x3b\x1f\x17\x0f\x3f\xd4\xdf\xb7\x26\x6e\x04\x3c\x1d\x93\x0e\x8b\x85\xb6\x48\x9a\xab\x0b\xa4\x5b\xa4\xd6\x61\x0b\x8a\x96\x2a\x1a\x10\x1f\x86\xb7\xe3\xfb\xb9\x5c\xf2\x4c\x6a\x3f\x3e\x9e\xf0\x43\xa2\x74\x57\x99\xf9\x31\xbc\x5e\xeb\x80\x57\x1b\x72\x5a\xc3\x7e\xab\x90\x56\x61\xc4\x7e\x45\x1b\x06\xce\x30\x88\xde\x80\x70\x2a\x11\x04\x3d\x4d\x70\x2b\xad\xb6\x0f\xa4\x5d\x3c\x54\xc6\xdb\x71\xd8\xaa\x78\xc9\xc9\x8f\xe9\x1b\x17\x7c\xab\xdf\xf0\xd2\x85\x79\x39\x90\x71\x9f\xd4\x14\xc4\x63\x45\xdb\x57\xff\x0c\xb2\xdd\xa9\xa8\xc5\xdc\x9c\x21\x9d\x75\x98\xfe\xf4\xea\x3e\x50\xfb\x3b\xc6\xc1\xed\x5b\xfc\x07\x20\xf7\xc3\x0d\xc1\xde\x49\xf6\x09\xa0\xef\xc0\xf4\x6c\xe0\xa3\xd9\xdc\x2f\x6e\xd8\xa9\xcc\xa5\x0d\xfb\x81\x22\xf6\x29\x4d\x0d\xda\x30\xf4\x3d\x9f\xc1\xeb\x08\x8e\x60\xd7\xe2\xad\x52\x21\xb1\x5f\x0a\x6d\xf1\x2f\x1b\x76\xe5\x1c\x02\x75\x70\xf9\x48\xd1\x26\x4b\x07\xa9\x97\x13\x7f\x9d\xfc\x01\xd7\x78\xc5\xaf\xe0\x07\x94\xaa\x22\xae\x9a\xa6\xbd\x97\x88\xab\xfb\x7f\x58\x3f\x50\x3b\xc6\x15\xe3\xef\x00\x00\x00\xff\xff\xf2\x04\xb6\xab\x8a\x10\x00\x00")

func templateHttpHelpersTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHelpersTmpl,
		"template/http/helpers.tmpl",
	)
}

func templateHttpHelpersTmpl() (*asset, error) {
	bytes, err := templateHttpHelpersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/helpers.tmpl", size: 4234, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpImportTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xcf\x6a\xc3\x30\x0c\xc6\xcf\xcb\x53\x08\xd3\xc3\x56\x58\x04\x83\x5d\x0a\x3b\xef\xb6\x77\x50\x13\xc5\xf6\x70\x2c\x63\xab\x81\x60\xf2\xee\x23\xcd\xca\xc2\x68\x0d\x9f\xf1\x67\x7e\xfa\x5b\x2b\x1e\xc1\x8a\xce\x89\x4f\xc0\x51\xad\xb4\x5e\x90\xa3\xae\xea\xd0\x72\x6c\x3f\x33\x25\x07\x47\x5c\x96\xa6\xa9\x15\x7a\x1e\x7c\x64\x30\x8e\x43\xe2\x8c\x4e\x35\xa1\x1f\x93\x64\x35\xb0\x2c\x0d\x00\xc0\x66\xe1\xf9\x6a\xd6\x53\x2b\x64\x8a\x96\xe1\x10\xe1\xf4\x01\x87\xf6\x4b\x7a\x2e\x37\x7c\x47\x29\x8f\x29\x90\x32\x98\x2d\x07\xae\x8d\x15\xb3\xc6\xed\xe0\x5a\x81\x63\xbf\xff\x31\xd6\xab\xbb\x9c\xdb\x4e\x46\xb4\xf2\xda\x39\x8f\xab\xa6\x77\x73\x17\x19\xa9\x14\xe6\xd0\x39\xcc\x1c\x7b\xce\x8f\x28\x1f\xf2\x05\x99\xca\xfc\x5d\x24\xde\x87\xac\x0c\xfe\xcc\x19\xb7\x7b\x7a\x33\xcd\xd3\x7f\x64\xa2\x30\x53\x20\x1c\xa8\xe8\x75\x5d\xb7\x07\xf5\x94\x54\x7e\xab\xbf\x34\x7f\x63\xfd\x04\x00\x00\xff\xff\x22\xc1\xf8\xe5\x96\x01\x00\x00")

func templateHttpImportTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpImportTmpl,
		"template/http/import.tmpl",
	)
}

func templateHttpImportTmpl() (*asset, error) {
	bytes, err := templateHttpImportTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/import.tmpl", size: 406, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpListTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\x5d\x6f\x02\x37\x10\x7c\xcf\xaf\x18\x59\x3c\x1c\x08\x7c\xef\x91\xfa\x50\x55\x51\x12\x29\x8d\xd2\x14\x35\xcf\x06\x2f\x77\x2e\xc7\xfa\x58\xef\x85\xd2\x0b\xff\xbd\xf2\x85\xf0\x91\x74\x25\x4b\xc6\x9a\x9d\x19\x76\xe7\xfa\xbe\x9c\xa0\x8a\xba\x6f\xe9\x16\xc4\x5a\x45\x1b\x62\x49\xac\xf9\x2c\xcb\x8a\xd8\xde\x8b\x6b\x6b\x4c\xca\xc3\xe1\xe6\xa6\xef\xe1\x69\x15\x98\x60\x6a\xd5\xb6\x6c\x42\x52\x83\xc3\xe1\x06\x00\xfa\x7e\x86\x5d\xd0\x1a\xf4\x8f\x12\x7b\x8c\x60\x5e\xdc\x72\xed\x2a\x32\x9f\x70\x83\xd9\x11\xfa\x09\x87\xd2\xa6\x6d\x9c\x66\x36\x72\x9e\xc4\xc0\x9e\xc9\x90\x39\xce\xbf\x2e\xb1\x4d\x4b\x52\x0e\x06\xc2\xa6\x8d\xa2\x06\xa3\x8c\xfc\x82\x8e\xda\x75\x85\xdb\x5f\xb0\x70\x89\x30\xb2\xbf\x45\x5e\x85\xca\x1e\xbd\x5c\x50\x8a\xe3\x8a\x30\xe2\x8c\x1d\xd9\xe7\xe8\x29\xe1\xc2\x60\x59\xe2\x95\x9c\xc7\x8a\x74\x59\x53\x82\xd6\x74\x62\x3f\x1c\x6c\xbe\xb2\x7d\x76\x9b\x4c\x89\xe0\x89\x35\xac\x02\x79\x2c\xf6\x70\xa8\xc2\x3b\x31\x3a\x69\x66\xad\x13\xb7\x21\x25\xc1\x4a\xe2\x26\xb3\x5c\x2a\x78\xa7\x6e\xf0\xe9\xd8\x43\x48\x3b\xe1\x84\xa0\xd0\x38\xe8\x2d\x9b\x40\xac\xf6\xd4\xb1\xea\x78\x89\xa2\xc6\xe4\x4a\xfd\xc1\xb1\x6f\x48\xc6\x78\x0a\x49\x8b\x1d\xf2\x68\xec\x2b\xa5\x36\x72\xa2\x37\x09\x4a\x32\x85\x60\x72\x7c\xdf\x76\x94\x74\x8c\xfe\xc4\x9a\xab\xc9\x53\xa8\x6d\x13\x2b\xfb\x16\xb4\x2e\xfe\x75\xad\xfd\x53\x25\x70\x55\x98\x0d\x69\x1d\xbd\x99\xc2\x64\x01\x33\x1e\x5f\x75\x6e\x3f\x3b\x8f\x56\xaf\x8c\xd9\x3f\x3a\x92\x7d\x71\x8d\x3f\xe7\xc4\x57\x94\xe6\xf1\x29\x3a\x9f\xb7\x60\xae\xd2\x74\x59\x65\x89\x3b\x57\x91\xa0\xc9\xd0\xa1\x0d\x5a\x3b\x85\x13\x82\xd0\xb6\x0b\x42\x1e\x91\x91\x19\x10\x5b\x12\xa7\x21\xb2\xfd\x41\xb4\xed\x7b\xd8\x3b\xd6\xc1\xd6\x77\xa5\xec\xeb\x22\x73\x5f\xf5\xee\x04\x24\xc3\x89\xf2\xa3\xe1\xff\x63\xd9\xba\x2a\xf0\xe0\xc1\xe4\x7f\x36\xfb\x0a\xe7\x69\xd8\xf6\x91\x57\xb1\x30\x17\xc3\xfa\xc0\x9a\x16\x6e\x81\x0f\xb4\x4d\x27\xae\xc9\xa1\x12\x62\x4f\x42\x79\xf2\x79\x1d\x8f\xac\x85\x71\x9b\xd8\xb1\x9a\x29\x1a\xe2\x82\xd2\xf8\xdb\x32\xc8\xa5\xfd\xdf\x29\xb2\xfd\xdd\x49\xaa\x5d\x33\x8f\x0f\xf3\xf9\xcb\x75\x16\x8a\x67\xda\xf5\x3d\x0a\x39\xbe\xfe\x15\x68\x97\x6d\x8e\xd8\xfe\xca\x1c\x75\x30\x9e\xec\x5d\xb3\xb6\x79\xdf\xf7\x12\xbb\x36\x8d\x6d\x86\x1d\xf7\x9a\xb2\xf2\x14\xbb\xb3\xf6\xf7\xaf\xf6\x74\xfb\x2f\x00\x00\xff\xff\xa4\xcb\x30\x73\x62\x04\x00\x00")

func templateHttpListTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpListTmpl,
		"template/http/list.tmpl",
	)
}

func templateHttpListTmpl() (*asset, error) {
	bytes, err := templateHttpListTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/list.tmpl", size: 1122, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpReadTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x0c\x08\x17\xa0\x02\x9b\xbe\x2f\xd0\x43\xb1\x09\x12\x03\xdb\x74\xbb\x35\x9a\xcb\x5e\x18\x73\x24\xb1\xa1\x49\x79\x38\xaa\xd7\x55\xfd\xdf\x8b\x91\x14\xc5\x1f\xa9\x01\x03\xa2\xf8\xe6\xcd\xcc\x9b\x37\xea\xba\xe5\x2d\x54\x89\x0f\x0d\x7e\x02\x8c\x5c\x25\xe3\xd3\x12\x23\xcb\x7f\xb3\xac\x30\x9a\x07\xb2\x4d\x0d\xb7\xcb\xe3\xf1\xe6\xa6\xeb\xc0\x61\xe9\x23\x82\xaa\x99\x9b\x25\xa1\x75\x0a\x8e\xc7\x1b\x00\x80\xae\x5b\xc0\xde\x73\x0d\xf8\x83\x31\x3a\x98\x81\xfa\x6a\x37\xaf\xb6\x42\x35\xc0\x15\x2c\x46\xe8\x00\x07\xc6\x6d\x13\x2c\x0b\x1b\x5a\x87\xa4\xc0\xbc\x93\x81\x70\xbc\x9f\x4e\xb1\xa1\x41\x5a\xf6\x05\xf8\x6d\x93\x88\x15\xcc\x04\xf9\x06\x9d\x35\xaf\x15\x7c\xfa\x19\x5e\x6c\x46\x98\x99\xcf\x29\x96\xbe\x32\x63\x2d\x27\x94\x64\x63\x85\x30\x8b\x82\x9d\x99\xa7\xe4\x30\xc3\x49\x81\xcb\x25\x7c\x43\xeb\xa0\x44\xde\xd4\x98\x81\x6b\x9c\xd8\x8f\x47\x23\x8f\xd1\x3c\xd9\xad\x50\x82\x77\x18\xd9\x97\x1e\x1d\xbc\x1c\xc0\x42\xe5\xff\xc6\x08\x2d\x85\x45\x63\xc9\x6e\x91\x91\xa0\xa4\xb4\x15\x96\xd3\x0c\xce\xb2\xed\xeb\xb4\xd1\x01\x61\x74\x48\x19\x3c\x03\xa7\x3e\xdf\x26\x78\x8c\x6c\xa6\x88\xb2\x8d\x1b\xd0\x35\xdc\x9e\x65\x7f\xb4\xd1\x05\xa4\xa2\xaf\x57\xef\x41\xa4\x31\xdf\x30\x37\x29\x66\x7c\x26\xcf\x48\x73\x20\xb8\x1d\xdf\xef\x5a\xcc\x5c\x40\x37\xb1\xca\x2f\x88\x0a\xb5\x09\xa9\x32\xcf\x9e\x6b\xfd\x8f\x6d\xcc\x1f\x4c\x3e\x56\x5a\x6d\x91\xeb\xe4\xd4\x1c\x94\x24\x50\x45\x71\x16\x29\x73\xff\x9f\xe9\xb8\x85\xf4\xbc\x68\x29\x28\xd1\x79\xf1\x36\xa4\x13\x01\x3e\x13\x4a\x9c\x34\xbb\x6b\x91\x0e\xd2\x79\xaf\xf8\xa4\xf7\xd4\xe6\x59\xe8\x6e\xa8\x77\x14\xe8\x0c\x67\x7e\x17\x22\x5d\x98\xe7\x1a\x09\xf5\xc9\xdd\xbf\x10\xd2\x1e\x49\x30\xab\x3b\xb9\xf0\xa5\xdc\xad\xee\xcc\xa3\xcd\x0f\x69\x7d\x68\x24\x7e\x08\x58\xdd\x99\xf1\xac\xbd\x2b\xc4\x8f\x21\xcb\xc9\xbb\xc9\x9b\x45\x71\x73\xa5\xc4\xb0\x01\xae\xc2\xbc\x4e\x5f\x92\x75\xd2\xb7\x3a\xdb\x93\x0b\x01\xee\x6d\x85\x04\x41\xa0\x7d\x18\x70\x6d\x19\x2c\x21\x10\xee\x5a\x4f\xe8\x20\x45\x10\x06\x48\x0d\x92\x65\x9f\xa2\xb9\x22\xda\x75\x1d\x98\xfb\xc8\x7d\xeb\x97\x99\xa4\xae\x93\x6d\x7a\xfb\xe1\x1c\x90\x48\x74\xdc\x99\xdf\x62\x38\x68\x92\x5d\x61\xfc\xc1\xfa\x83\xce\xae\x52\x7e\x3c\x73\x24\x4a\xb4\xa8\xc5\x91\x3e\x56\x0a\x9c\xdf\xf0\x55\xa8\xba\x17\x54\x56\xa0\x83\xcf\x0c\x2a\x26\x5e\x94\xa9\x8d\x4e\x0d\xcf\xd9\xc7\xaa\x0d\x96\x54\x71\x1d\xfa\x25\x55\x53\xa0\x6e\xc8\x47\x2e\x41\x89\x5b\x57\x91\xf5\x77\xf5\x53\xfe\xae\xe6\xe0\x5d\xa1\xc6\x21\xca\xe0\x8b\x0f\x78\xee\xb0\xb4\x6d\x60\x35\x92\x80\xda\xa4\x36\x38\x88\x89\x07\xb1\x15\xe8\x77\xdb\xbc\xe2\x8b\x7d\xb9\x60\xb9\x72\x73\x30\xab\x58\x26\xad\xce\x0c\xd7\x47\xca\x17\x62\x58\x6e\x94\x35\x7a\xab\x56\x4d\x4e\x1b\x9d\x3b\x54\x7e\x9e\x06\x6d\x3e\xfc\x95\x53\x34\xbf\x5a\xca\xb5\x0d\xeb\xf4\xb8\x5e\x7f\x3d\xdf\x6e\xfd\x84\xfb\xae\x03\x4d\xe3\xdb\x3f\x3d\xee\xc5\x78\xb3\x68\x7e\x89\x31\x71\x6f\x9a\x6c\xee\xc3\xab\x91\x0d\x7e\xa0\xd4\x36\xb9\x30\x02\x1b\x33\x6b\x2c\xe6\xb0\x7f\xcf\x7c\xf9\x15\x9e\x9e\xfe\x0b\x00\x00\xff\xff\x0e\xd3\x1a\x7e\x32\x06\x00\x00")

func templateHttpReadTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpReadTmpl,
		"template/http/read.tmpl",
	)
}

func templateHttpReadTmpl() (*asset, error) {
	bytes, err := templateHttpReadTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/read.tmpl", size: 1586, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRelationsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\xc1\x8e\xdb\x36\x10\xbd\xe7\x2b\x06\x84\x0b\x48\x0b\x9b\xbe\x07\xe8\xa1\xc8\x6e\x13\x03\xdb\x6d\x9a\xba\xdd\x4b\x2e\x5c\x71\x24\xb1\x4b\x93\xf2\x70\x54\xc7\x55\xf4\xef\x05\x25\xd9\x6b\xad\xa5\x1e\x82\xb6\x04\x0c\x48\xf2\xe3\x9b\xe1\xcc\x7b\x23\x35\xcd\xfa\x06\x0a\xcf\xc7\x0a\xdf\x02\x3a\x2e\xbc\x34\x7e\x8d\x8e\xe3\x2f\x5b\x17\xe8\xe4\x7b\x52\x55\x09\x37\xeb\xb6\x7d\xf3\xa6\x69\x40\x63\x6e\x1c\x82\x28\x99\xab\x35\xa1\x55\x6c\xbc\x0b\x02\xda\xf6\x0d\x00\x40\xd3\xac\xe0\x60\xb8\x04\xfc\xc2\xe8\x34\x2c\x40\x7c\x54\xd9\xb3\x2a\x50\xf4\x7b\x04\xac\x06\x68\x0f\x07\xc6\x5d\x65\x15\x47\x4a\x54\x1a\x49\x80\x7c\x21\x83\xc8\xf1\x72\x77\x89\xb5\x15\xd2\xba\xcb\xc2\xec\x2a\x4f\x2c\x60\x11\x91\x27\xe8\xa2\x7a\x2e\xe0\xed\xf7\xf0\xa4\x02\xc2\x42\xbe\xf3\x2e\x37\x85\x1c\x72\xb9\xa0\x24\xe5\x0a\x84\x85\x8b\xd8\x85\x7c\xf0\x1a\x03\x8c\x13\x1c\x10\xd8\x21\x9c\xbc\xd3\xc5\x18\x12\xd7\x7a\xdd\xc5\x44\xf9\xa0\x76\x08\x5f\xa1\x52\x21\x53\x16\xda\x16\x72\xe4\xac\xc4\x00\x5c\xe2\x39\xad\xb6\x95\x17\xe8\xb6\x05\xc5\xac\xb2\x12\x35\xb0\x9f\x02\xba\x13\xf0\x75\x4c\xa3\xd1\xb1\xc9\x0d\x6a\x78\x3a\x82\x82\xc2\xfc\x89\x0e\x6a\xb2\xab\x4a\x91\xda\x21\x23\x41\x4e\x7e\xd7\x91\x6a\xc5\xaa\xab\x86\x72\x1a\x08\x9d\x46\x0a\x60\xf8\x14\x33\xb3\x06\x1d\xcb\x51\x88\xbc\x76\x19\x24\x25\x8c\x92\xf8\xa0\x9c\xb6\x48\xe9\xcc\x89\x93\x03\xc4\xae\xc8\x4f\x18\x2a\xef\x02\x3e\x92\x61\xa4\x25\x10\xdc\x0c\xcf\xf7\x35\x06\x4e\xa1\x19\x85\x8a\xcb\xc6\x12\x97\xd2\xfa\x42\x3e\x1a\x2e\x93\xbf\x54\x25\x7f\x65\x32\xae\x48\xc4\x0e\xb9\xf4\x5a\x2c\x41\x4c\x87\x15\x69\x7a\xc5\x17\xc5\x38\x23\x19\xbd\x8a\x75\x59\xd5\x64\x45\x6c\xfe\xea\xa4\x9c\x57\x05\x7e\x47\x18\xf7\xc6\xfa\xec\x6b\xa4\x63\x2c\x56\xd7\xd1\x73\x9b\xce\x99\x3c\xe3\x93\x7a\xba\x6e\xa6\x09\x97\xd5\x7b\x81\x5d\x45\xdb\xf7\x87\x1f\xda\x30\xaa\xb8\xfc\x25\xc6\x4e\x52\xf9\x58\x22\x61\x32\xe2\xb3\xfe\x80\x14\x31\x9b\xdb\xc4\xe8\x34\xed\xb1\x33\xad\x99\x2e\x91\xc9\x23\xf8\x37\x67\xf6\xf5\x95\xc8\x2e\x71\xbd\xaf\xa3\xfc\xb7\xfe\xde\x2b\x1d\x77\x6d\x8f\x15\x82\x20\x54\x5a\xcc\x6d\x1d\x4a\x79\xa7\x0a\x24\xb0\x71\x5f\xc7\x01\x5c\x2a\x06\x45\x08\x84\xfb\xda\x10\x6a\xf0\x0e\x22\x13\xf8\x0a\xa9\x9b\x2b\x72\x96\x70\xdf\x34\x20\xef\x1c\x77\xa7\xfd\xa7\xa4\x2f\x06\xc8\xeb\x85\x4b\x40\xa2\x58\xf6\xbd\xfc\xd9\xd9\x63\x42\x71\x4c\x30\x7e\xe1\x24\x4d\xaf\xe5\x30\x30\xce\xa6\x34\xad\x34\x24\xf2\xb4\x2a\xa3\x67\x8c\x2b\x04\x68\x93\xf1\x2c\x85\xb8\x8b\xe8\x20\x20\xb1\x26\x30\x08\xe7\x79\x95\xfb\xda\x69\xd1\x5f\x07\xe3\x8a\xda\x2a\x12\xd7\x8d\x3c\x53\xdc\xfb\xe2\x4c\x90\x54\x64\x1c\xe7\x20\xa2\x93\x36\x8e\x93\xcf\xe2\xbb\xf0\x59\x2c\xc1\xe8\x34\xea\x5e\x6e\x6e\x3b\x91\x4c\x78\xe7\xcc\x77\x8b\xb9\xaa\x2d\x8b\x81\x0c\x44\xe6\x6b\xab\xc1\x79\xee\x9b\x25\x5e\x8b\x7b\x9a\x6b\xd2\x61\x71\x59\xb9\x71\xb9\x4f\x06\x5b\x47\x3d\x5d\x39\xaa\x1f\x56\x18\xdd\x7f\x3a\x88\xe8\x4d\x30\xe4\x1f\xfd\xbf\x04\x94\x17\x1c\x9b\xdb\x38\x3a\xea\x8c\x7f\x34\x68\xa3\x04\x66\xce\x88\x2a\x1c\xff\x08\xde\xc9\x9f\x14\x85\x52\xd9\xad\xff\xb0\xdd\x7e\x1c\x0f\xaf\xe4\x01\x0f\x4d\x03\x09\x0d\x4f\x7f\x37\x78\x38\x8b\xff\x14\xf0\x07\xe7\x3c\xf7\x6f\x43\x79\x67\x9f\xe5\x27\x54\xfa\x3d\xf9\xba\x0a\xa9\x8c\x1b\x86\x3c\x13\x4c\x97\x70\x98\x36\x22\xda\xf0\x8d\x06\x8c\xdd\xfe\x77\x0c\xd8\xe9\xe6\x3f\x30\xe0\xec\xff\xd3\xb6\xa9\x54\x61\x5c\x97\x82\x38\x9f\xf2\x9b\x25\xf4\x15\x2a\x5b\x53\xff\x3e\x9e\xd2\x92\xda\xf9\xda\xb1\x58\x82\x45\x97\x60\x48\xff\x6f\xa9\xdc\x9b\xc0\x13\x52\x09\x31\x97\x79\xb1\x5c\x0f\xb6\xd1\x67\xcb\xf8\xcb\x69\xb8\x3b\x5f\xfd\x1d\x00\x00\xff\xff\xc3\x70\x79\xb7\xf9\x09\x00\x00")

func templateHttpRelationsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRelationsTmpl,
		"template/http/relations.tmpl",
	)
}

func templateHttpRelationsTmpl() (*asset, error) {
	bytes, err := templateHttpRelationsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/relations.tmpl", size: 2553, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRequestTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x4f\x6f\xd4\x30\x10\xc5\xef\xfd\x14\x4f\x56\x0e\xbb\x2b\xea\x70\x5e\x89\x03\xa2\xfc\xa9\x04\xb4\xa2\xe5\x84\x90\xea\x4d\x26\x89\x69\x62\xbb\xf6\x84\x76\x15\xf2\xdd\x91\x93\xdd\x4d\xd8\x16\xa9\x88\x43\xa4\x78\x34\xf3\x3c\xbf\x37\xe3\xae\x43\x4e\x85\x36\x04\x51\x31\xbb\xd4\xd3\x5d\x4b\x81\x05\x4e\xfb\xfe\x04\x00\xba\x2e\x5d\xa1\xb4\xbc\x75\xb4\x06\x19\x2e\xad\xd4\x36\x25\xc3\xf1\xcb\xd2\x92\x8c\x7c\xef\x95\xab\xb0\x4a\x0f\x15\xa7\xb8\xd7\x5c\x81\x1e\x98\x4c\x8e\x04\xe2\x52\x65\xb7\xaa\x24\x31\x5e\x32\x89\x8f\xe9\x60\x6a\x5c\xad\x38\xf6\x40\x2a\x27\x2f\x20\x71\x10\x43\xd4\x98\x4e\xf3\xdc\xda\x91\x4f\x87\xb6\x75\xe3\xac\x67\x81\x24\x66\xee\x53\xbd\x32\x25\x21\x31\x58\xbf\x42\x22\x3f\xdb\x9c\x02\xfe\x7e\xf1\x24\x76\xf0\x60\x0f\x60\x20\x5e\x67\xac\xad\x11\x10\x99\x27\xc5\x24\xfe\x5f\xa8\x75\xf9\x5c\x28\xba\xb6\x23\x9d\x98\x4f\xe6\xe3\x79\x4a\xf8\xf9\x43\xba\xde\x3a\x9a\x66\x94\xa6\xb8\x54\xdb\xda\xaa\x1c\xb6\x80\x8a\x08\x1b\x15\x08\x89\x7c\x63\x4d\xa1\x4b\xb9\x9b\x18\xfa\x5e\x76\x5d\x74\x4f\x35\xf1\x80\xe1\x70\x95\x59\x47\x72\x24\x89\xc1\x5d\x3b\x72\x90\x8e\x4d\x60\x5e\xf3\xb8\xe4\x17\x9c\x0a\x99\xaa\xd1\xf7\x5f\xc6\x52\x04\xf6\x6d\xc6\xe8\x66\xa6\xa6\x2b\x5c\x5f\x9c\x5d\xac\xf1\x41\xfd\xd4\xa6\x84\xaa\x6b\x38\xab\x0d\x93\x0f\xa8\xc8\x13\x02\x51\x13\x60\x2c\xc3\xeb\xb2\x62\x89\x4f\x6a\xbb\x21\x70\xa5\x03\x32\x65\xb0\x21\xe4\xd6\x10\xb4\x81\x32\x96\x2b\xf2\xb8\x57\x5b\x48\x29\x27\x27\xf6\xde\xef\x96\xa5\x18\x97\xe5\x9d\xa6\x3a\xff\x63\x5b\xf6\x79\xba\x80\xf5\x58\x18\x3a\x86\xda\x0f\x74\x89\x45\xec\x28\x29\xe4\x79\xd3\xb4\xac\x36\x35\x2d\x8f\x85\x76\x5b\x93\x14\xf2\x6a\xe0\x1e\xae\x8b\x4e\xae\xc6\xe8\x30\xac\xbe\xc7\xcd\x8f\x60\xcd\x5a\x74\x1d\xb4\xc9\xe9\x01\x8b\xe0\x6a\xcd\x58\xb0\x2a\x3f\x5a\x7b\xdb\xba\x49\xe2\x5a\x95\x10\x31\x5d\x2c\x21\x5e\x88\x25\x5e\xa2\xef\xc5\xcd\xa3\xfe\x67\xaf\x69\x1e\x3a\x7d\xda\x0e\x1a\xed\x78\x9b\x97\xf4\x84\x1b\x48\xe8\x08\x20\x76\x5a\xc4\xf0\x57\xa3\xef\xda\xc8\x10\x89\xa8\x0e\xf1\xf7\xdb\xf7\xc3\x66\x8f\xb5\x11\x53\x9e\x9f\xfd\x0b\x2e\x3d\x13\xf7\x08\x75\xfe\xa8\x7e\x07\x00\x00\xff\xff\xf1\x8b\x38\x6b\xf3\x04\x00\x00")

func templateHttpRequestTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRequestTmpl,
		"template/http/request.tmpl",
	)
}

func templateHttpRequestTmpl() (*asset, error) {
	bytes, err := templateHttpRequestTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/request.tmpl", size: 1267, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpResponseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x8b\xdb\x30\x14\xbc\xe7\x57\x0c\xc6\x14\x3b\x64\xe5\x9e\x03\x39\x95\xb6\x97\x12\x0a\xdd\xee\x65\x59\x58\x6d\xfc\xec\xa8\x71\x24\x57\x92\x93\x16\xe3\xff\x5e\xe4\x6f\x07\x27\x6c\x0f\xbb\x87\x80\x65\xbd\x37\xf3\x66\xde\x38\x65\x89\x98\x12\x21\x09\xde\xde\xda\x3c\xd2\x64\x72\x25\x0d\x79\xb8\xab\xaa\x05\x00\x94\x65\xb4\x44\xaa\xec\xdf\x9c\xd6\x20\x69\x53\xc5\x84\x8a\x48\x5a\xf7\xdb\x45\x29\x49\xf6\x55\xf3\x7c\x8f\x65\xd4\x77\xdc\xe1\x2c\xec\x1e\xf4\xc7\x92\x8c\xe1\xc3\xfb\xce\x77\x07\x9e\x92\xd7\xb0\x0c\xe0\x4d\x39\x2c\x1d\xf3\x8c\x5b\x37\x04\xf1\x98\xb4\x07\x86\x1e\x0c\x0e\x63\x38\x8d\x6b\xb3\x9c\x74\x54\xcf\x2d\x8e\xb9\xd2\xd6\x83\xef\x2a\xfb\x29\x34\x97\x29\xc1\x97\x2b\xf8\x27\xac\x37\xe8\xd4\x3d\x08\x3a\x9b\xa6\xb6\x9b\xc2\xe9\x43\xd0\x1f\x5b\x32\x5f\xa2\xaa\x60\xac\x2e\x76\x16\xe5\xe4\xf6\x82\x23\x71\xf8\xfe\x89\x7d\x11\x94\xc5\x66\x8c\x7c\x09\x99\xb0\x1f\x35\x5e\x5d\xe9\xe0\xcb\x12\x22\x71\xef\xb7\x22\xcb\xf8\x4b\x46\x0f\x3c\x2b\x08\x55\xb5\xec\xc5\x37\x7d\xf7\x6e\xc6\xab\xc8\xad\xe9\x96\xa7\xdf\x94\x3a\x14\xf9\xc0\x74\xcf\x53\x78\xbf\x8c\x92\x9e\xa3\x7b\x76\x4f\x6b\xaf\x2c\x6b\x93\xbd\x9e\xe3\x79\x56\xde\xc8\xfc\x2b\xca\xa9\x55\xfe\x39\x4e\xe9\xa6\x70\xba\x22\x9c\xd8\x4f\x29\x7e\xcf\x28\x26\xe6\x16\xb5\xe5\x47\x6a\x5e\x88\x04\x52\xd9\x49\x83\x99\xe6\xe3\x35\xae\xd0\xdb\xb8\x52\xcd\x66\xc7\xe0\xf1\x69\xd9\x1d\xfa\x8a\x70\xb1\x18\xa3\xf9\xf9\x21\x75\x26\xbe\x70\x43\xf0\xd9\x27\x25\x13\x91\xb2\xf6\x9b\x19\xf7\x25\x85\xdc\x61\x4b\xe7\x0e\x30\x20\xd4\xe0\xae\xbf\xaa\x98\x7b\x3c\xb1\xad\x8a\x89\xb5\xa6\x85\xe8\xc9\x2f\xe2\xab\xc9\x16\x5a\xe2\x43\x77\xfd\x46\xe1\x5e\x83\xd8\xdc\xfb\xd5\x7b\x87\x6d\xdd\xf9\xf6\x5f\xa1\x0a\xa8\x61\x62\x73\x90\xe1\xab\x45\x0c\xa7\x6a\x71\x75\x99\x26\xa0\x3e\x2d\x37\x16\x3a\x24\x6b\xba\x32\x91\x20\x23\x19\x90\x09\xb1\xd9\xe0\xe3\xcc\xbf\x55\xbb\x72\x29\xb2\x1b\xc1\xd5\xce\xe0\x23\x3f\x50\xd0\x13\xad\x3a\xe0\x70\x52\x99\x28\x0d\xb1\x42\xbd\x91\x66\x3b\x74\x39\x53\x0d\xf8\x28\x9e\xb0\x99\xa6\x36\xbc\x35\x40\x33\xa5\x5e\x4c\xaf\x47\xce\x0e\x9f\xfc\xbf\x00\x00\x00\xff\xff\xdb\x60\xe7\xd1\xbe\x06\x00\x00")

func templateHttpResponseTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpResponseTmpl,
		"template/http/response.tmpl",
	)
}

func templateHttpResponseTmpl() (*asset, error) {
	bytes, err := templateHttpResponseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/response.tmpl", size: 1726, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\x4d\x6f\xdb\x38\x10\xbd\xe7\x57\xcc\x12\x5e\x40\x0a\x6c\xfa\x5e\xa0\x58\x14\x4d\x36\x35\xd0\xaf\x6d\xd2\xed\xa5\x17\x5a\x1c\x49\xdc\xd0\xa4\x42\x8e\xe2\x7a\x55\xff\xf7\xc5\x48\x8a\x6a\xd9\x72\xd0\xde\x57\x80\x01\x4b\x1a\xce\xbc\x79\xf3\xf8\xc4\xa6\x59\x5e\x42\xe1\x69\x57\xe1\x0b\x40\x47\x85\x97\xc6\x2f\xd1\x11\xff\xb2\x65\x81\x4e\xde\x04\x55\x95\x70\xb9\xdc\xef\x2f\x2e\x9a\x06\x34\xe6\xc6\x21\x88\x92\xa8\x5a\xd6\x95\x56\x84\x02\xf6\xfb\x0b\x00\x80\xa6\x59\xc0\xd6\x50\x09\xf8\x8d\xd0\x69\x98\x81\xf8\xa8\xb2\x7b\x55\xa0\xe8\x16\x08\x58\xf4\xa1\x5d\x38\x10\x6e\x2a\xab\x88\xf3\xa1\xd2\x18\x04\xc8\x1f\xc9\x80\x73\xfc\xb8\x3b\x8c\xb5\x15\x86\x65\x0b\xc1\x6c\x2a\x1f\x48\xc0\x8c\x23\x9f\x42\x67\xd5\x7d\x01\x2f\x5e\xc2\x5a\x45\x84\x99\x7c\xed\x5d\x6e\x0a\xd9\x63\x39\x48\x19\x94\x2b\x10\x66\x8e\x63\x67\xf2\xbd\xd7\x18\xe1\x00\xe0\x72\x09\x9f\xdb\x0e\xa1\x6b\x34\x82\x82\xc2\x3c\xa2\x1b\x6a\xec\xf7\x92\xff\x3a\xf9\x5e\x6d\x38\x31\x28\xa7\x21\xaa\x47\x8c\x40\x25\x42\x56\x72\x81\x08\xe4\xdb\x5b\xad\x48\x31\x24\x39\x54\xc8\x6b\x97\x41\x52\xc2\x28\xc9\x1b\xe5\xb4\xc5\x90\xf6\xc5\x93\x2d\x70\xa7\xf2\x13\xc6\xca\xbb\x88\x5f\x82\x21\x0c\x73\x08\x70\xd9\x3f\x7f\xa8\x31\x52\x0a\xcd\x90\x96\x2f\xcb\x4d\x95\xd2\xfa\x42\x7e\x31\x54\x26\xff\xaa\x4a\xde\x52\x30\xae\x48\xc4\x06\xa9\xf4\x5a\xcc\x41\x74\x25\x44\x9a\x8e\xd6\xf2\x20\xcf\xd0\xad\x17\x79\xf0\x9b\x45\x1d\xac\x60\xe2\x0e\xe7\xd9\x53\x76\x83\xd4\x76\x5b\xf9\x48\x6d\xcb\x72\x14\xf1\xa8\x02\xe8\x71\xc3\x1d\x88\xbe\x8f\x8b\x9f\x44\xa2\x31\xf3\x1a\x17\xca\xe9\xc5\xa3\xb2\x86\x33\x2c\x42\x97\x62\x40\x76\x0c\xed\x56\x3d\xe2\x30\x89\x31\xac\x75\x47\x57\x66\x0d\x3a\x1a\x0f\x55\x76\xf8\x3e\x38\x5c\x5d\x25\x4d\x03\x26\xe7\x97\xab\x2b\xf9\x46\xc5\x1b\x7f\xb7\xab\x38\xa8\x5b\xb1\xba\x92\xfd\x7d\x62\x74\xca\x12\xb6\x91\xef\x8c\x1e\xe4\x7c\xcc\xf4\x93\x08\xf3\x56\x84\x4e\xfe\x69\xd0\xea\x78\x42\x6c\x1f\x6c\x72\x70\x9e\x60\x96\xcb\xd5\x66\x53\x93\x5a\x5b\x9c\x0c\xe5\xcb\xe4\xa0\xdb\x4e\x72\x1e\x7c\x9d\x51\x9b\x9a\x55\xfa\xdb\x4b\x70\xc6\x1e\x09\x66\xc4\x86\xbc\x45\x9a\x5a\x9a\x5c\x4e\xa7\x4c\xa1\xb5\x12\xf2\xda\xc3\x02\xb6\xa5\x22\x50\x6b\x5f\x13\x44\x6b\x32\x84\xbc\x6b\x8a\xf8\x79\xc9\x43\xc8\xea\x48\x7e\x03\x1b\x15\x62\xa9\xac\xc5\x10\xff\xe8\x3c\x66\x0a\xcd\x24\x13\xcc\xe6\x71\xe7\xe7\x1f\xf7\x24\x63\x4f\xf2\xb5\xe6\x6d\x39\x45\xdc\x40\x1a\xfe\x12\x69\xbd\x2c\x50\x7e\x76\xe6\xa1\x3e\x3f\x93\x8e\xdc\x2e\xff\xbb\x9a\x14\x19\xef\x6e\x91\x0e\x98\x3d\xae\x9b\x9e\xab\xd7\x4a\xeb\x57\xea\xbc\xb6\xa8\x02\x57\x4a\x8f\x5e\xbc\xd2\xed\x68\xa7\xeb\x4b\x29\xcf\x41\x58\x1c\x3a\xf4\xe1\xf5\x53\x53\xe1\xfd\x48\x3e\x20\x18\x37\xe1\x8c\x7c\xe1\x1c\x30\x84\xd6\xc8\x25\x6f\xdd\x24\xb0\x95\x13\x7e\xa3\x24\x4d\x4f\x7c\xe2\x04\xc5\xb4\x6f\x60\x08\x3e\x2c\x4a\xf6\x58\xe3\x0a\x01\xda\x64\x74\xb2\x54\x5c\x73\x54\x14\x90\x58\x13\x09\x84\xf3\xb4\xc8\x7d\xed\xb4\xe8\xfe\x47\xe3\x8a\xda\xaa\x20\x4e\xa9\x11\x6f\x7d\x31\x2c\x4c\xaa\x60\x1c\xe5\x20\xd8\x7d\x57\x8e\x92\xaf\xe2\xf7\xf8\x55\xcc\xc1\xe8\x54\xf4\x86\xc1\x2e\x93\x4e\xe4\xb9\xc2\x5c\xd5\x96\x44\x9f\x04\x44\xe6\x6b\xab\xdb\xed\xdf\x7d\x8e\x40\x0c\x26\xf5\x1d\xee\x71\xad\xd6\xe3\x2c\x53\x0e\xf8\x09\xad\x57\x9a\x3f\xf5\x61\x37\x26\xfb\xe1\x19\x03\xfc\xab\xc6\xb0\x4b\x52\xf9\xa5\xc4\x80\xc9\xc1\xbb\xef\x60\xfd\x16\x59\x54\x72\x75\x95\xa0\x1c\x5c\xf0\x48\xc3\xa7\xd3\xea\x0f\x0a\xbc\x0f\xef\xfc\x5b\xc6\x34\x73\x20\xb2\x80\x87\x07\x8a\x23\xf0\xd7\xaa\xc0\x00\x5d\x03\xed\x06\x6e\xfd\x44\x05\x04\x36\x7e\x13\x50\x83\x77\x4f\xe4\xf8\x0a\x43\xab\x6e\x79\x92\xea\xa1\x69\x40\x5e\x3b\x6a\xdb\x3a\xae\x75\x46\xd6\xbd\x16\x5f\xc2\x83\xfc\xe0\xec\xee\x7f\x29\xf6\x52\x0c\xa8\xf4\x84\x10\x41\x80\xca\x09\x43\x3f\x0d\xf1\xbc\x30\xad\x5c\xb9\xdc\x27\x62\xa4\xac\x36\x11\x1b\x6f\x40\xa7\x31\x20\x9f\x57\x9e\xb0\x8b\x41\x68\xbd\x44\xc5\x1c\x9e\x53\xdf\x68\x92\x2a\xee\xfe\x89\xde\xc9\x77\xdd\xc7\xe7\xce\xbf\xb9\xbb\xfb\x38\x3e\x5d\x25\xef\x71\xdb\x34\x90\x84\xfe\xe9\xdf\x06\xb7\x2c\xd0\x99\x93\xaf\x9c\xf3\x9d\x6d\x46\x79\x6d\xef\xfb\xc3\xc1\x4d\xf0\x75\x15\x53\xc9\x81\x3d\xa4\x04\xd3\x39\x6c\x7f\xd4\x3e\x3e\xd6\x0e\xff\xfe\x0b\x00\x00\xff\xff\x2c\xce\x2f\x1b\x85\x0b\x00\x00")

func templateHttpUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpUpdateTmpl,
		"template/http/update.tmpl",
	)
}

func templateHttpUpdateTmpl() (*asset, error) {
	bytes, err := templateHttpUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/update.tmpl", size: 2949, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/http/create.tmpl":    templateHttpCreateTmpl,
	"template/http/delete.tmpl":    templateHttpDeleteTmpl,
	"template/http/handler.tmpl":   templateHttpHandlerTmpl,
	"template/http/helpers.tmpl":   templateHttpHelpersTmpl,
	"template/http/import.tmpl":    templateHttpImportTmpl,
	"template/http/list.tmpl":      templateHttpListTmpl,
	"template/http/read.tmpl":      templateHttpReadTmpl,
	"template/http/relations.tmpl": templateHttpRelationsTmpl,
	"template/http/request.tmpl":   templateHttpRequestTmpl,
	"template/http/response.tmpl":  templateHttpResponseTmpl,
	"template/http/update.tmpl":    templateHttpUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"http": &bintree{nil, map[string]*bintree{
			"create.tmpl":    &bintree{templateHttpCreateTmpl, map[string]*bintree{}},
			"delete.tmpl":    &bintree{templateHttpDeleteTmpl, map[string]*bintree{}},
			"handler.tmpl":   &bintree{templateHttpHandlerTmpl, map[string]*bintree{}},
			"helpers.tmpl":   &bintree{templateHttpHelpersTmpl, map[string]*bintree{}},
			"import.tmpl":    &bintree{templateHttpImportTmpl, map[string]*bintree{}},
			"list.tmpl":      &bintree{templateHttpListTmpl, map[string]*bintree{}},
			"read.tmpl":      &bintree{templateHttpReadTmpl, map[string]*bintree{}},
			"relations.tmpl": &bintree{templateHttpRelationsTmpl, map[string]*bintree{}},
			"request.tmpl":   &bintree{templateHttpRequestTmpl, map[string]*bintree{}},
			"response.tmpl":  &bintree{templateHttpResponseTmpl, map[string]*bintree{}},
			"update.tmpl":    &bintree{templateHttpUpdateTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
