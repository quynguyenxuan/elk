// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// template/http/create.tmpl
// template/http/delete.tmpl
// template/http/handler.tmpl
// template/http/helpers.tmpl
// template/http/import.tmpl
// template/http/list.tmpl
// template/http/read.tmpl
// template/http/relations.tmpl
// template/http/request.tmpl
// template/http/response.tmpl
// template/http/update.tmpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateHttpCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4f\x6f\xdc\xc6\x0f\x3d\xff\xfc\x29\xf8\x1b\x6c\x0a\xc9\xf0\x8e\xee\x01\x7c\x08\x6c\xd7\x75\x91\x3a\x6d\xb6\x6d\x2e\xb9\xcc\x6a\x28\x69\x60\x99\xa3\xa5\x28\xaf\x5d\x65\xbf\x7b\x31\x92\xf6\x8f\xb4\x1b\xd7\x11\x60\x40\xb6\xc8\x47\xbe\x79\x8f\x1c\xb7\x6d\x72\x0e\xb9\x97\x97\x0a\xdf\x03\x92\xe4\x5e\x3b\x9f\x20\x49\xf8\x49\x93\x1c\x49\xdf\xb2\xa9\x0a\x38\x4f\x36\x9b\xb3\xb3\xb6\x05\x8b\x99\x23\x04\x55\x88\x54\x49\xca\x68\x04\x15\x6c\x36\x67\x00\x00\x6d\x3b\x87\xb5\x93\x02\xf0\x59\x90\x2c\xcc\x40\xfd\x6e\xd2\x07\x93\xa3\xea\x13\x14\xcc\x87\xd0\x3e\x1c\x04\x1f\xab\xd2\x48\xc0\x43\x63\x91\x15\xe8\x3d\x18\x04\x8c\xfd\x6f\x87\xb1\x65\x85\x9c\x74\x2d\xb8\xc7\xca\xb3\x28\x98\x85\xc8\x6d\xe8\xac\x7a\xc8\xe1\xfd\x25\x2c\x4d\x8d\x30\xd3\x57\x9e\x32\x97\xeb\xa1\x97\x03\x48\x36\x94\x23\xcc\x28\xc4\xce\xf4\xbd\xb7\x58\xc3\x41\x83\x49\x02\x57\x1d\x43\xe8\x89\xd6\x60\x80\x70\xbd\xab\xb0\xd9\xe8\xf0\x4a\xfa\xde\x3c\x06\x58\x30\x64\xa1\x16\xcf\x58\x83\x13\x70\x04\x52\x20\x58\x23\x26\x34\xa2\x77\xb8\x59\x43\x29\x44\x05\x8c\x92\x7f\x31\x64\x4b\xe4\x78\x28\x19\xa5\x70\x9e\xb9\x25\xb2\xbe\x92\xe7\x18\x90\xd9\x33\xb4\x3b\x88\xf0\x94\xa1\xed\x42\x97\x3e\xd7\x5f\x9c\x14\xd1\x3f\xa6\xd2\x0b\x61\x47\x79\xa4\x1e\x51\x0a\x6f\xd5\x05\xa8\x1e\x4e\xc5\xf1\x28\x37\x49\xe0\x16\xa5\xeb\xaf\xf2\xb5\x74\x4d\xea\x51\x84\x0d\xe8\x84\xeb\x68\xd4\x65\x8f\xf6\x19\x57\x0d\xd6\x32\x86\x7c\x32\x0c\x0c\x41\x14\x3d\x7c\x3f\xfb\xdf\x8e\xb1\xa9\x25\x7c\x31\xd6\x54\xe2\x39\x28\xf2\x84\x2c\x43\x5c\x94\x86\x3f\x08\x3e\x4b\x14\x5f\xc0\x4f\x7c\x01\xc2\x0d\x8e\xd1\x83\xb7\x4e\x3b\xc0\x62\xea\x2d\xce\x0d\xd9\xf9\x93\x29\x9d\x35\x82\x73\xee\x81\x55\xd0\x76\xbe\x35\xc6\x01\xf7\x85\x79\xc2\x9d\x38\x63\xde\xcb\xfe\x54\xd3\xd2\x21\xc9\x58\x5f\x3d\x48\x33\xed\x6c\xeb\xa3\xac\xf3\x11\xe9\x9f\x1d\x96\xb6\x1e\x79\x7d\xfb\xb8\x0c\x6c\x07\x9a\x05\xa9\x9a\x54\xba\xd8\xe0\x9d\xff\x5f\x02\xb9\x72\x22\xf1\xae\x29\xbd\x40\x39\x95\x16\x9d\x9f\x86\x8b\x8f\x60\x36\xd3\xa6\xc3\x74\x4d\x5b\xdc\x73\xc1\x81\xcb\x8d\xcd\xf1\x3f\xa8\xe0\x0f\x51\x09\x42\xba\x2c\x64\xfd\x45\x6e\xd5\x20\x9c\x80\xde\xd3\xee\xf1\x7f\x6b\xc4\x88\xf3\xb4\x40\x39\xe0\x3c\xad\x7b\xcc\x79\x5b\x0f\xcb\xfa\x87\xea\x7c\xb0\xdd\xd9\x9e\x2e\xa3\xb5\x7e\xa5\xd2\x7e\x65\x1d\x3e\x6f\x3a\x7c\xbc\x08\x63\xde\xed\x2d\x1d\x0c\x1a\xf1\x7e\x2c\xe2\xb3\x37\x4e\x43\xb7\x28\xe6\x45\x58\x26\x8e\x72\x05\xd6\xa5\x02\xea\x1a\x33\xd3\x94\xa2\x20\xaa\xd8\x91\x80\x4a\x7d\x53\x5a\x20\x2f\xc3\x6a\x03\x05\xd1\xd6\xe8\xdf\xe0\x01\x97\x66\x19\xc7\x27\x47\xe7\x33\x96\xde\xd8\x70\x59\xf0\xcb\x78\x72\x56\xaf\x4c\xce\x1f\x0d\xf2\x4b\x14\xeb\x2f\x05\x32\x1e\xae\x94\x6f\x50\xfa\x35\x72\x88\xb9\xbb\x8e\x70\x48\xbb\xbb\x9e\x6a\x7b\xe2\x00\xfa\xab\x26\xf8\xf3\x4f\xff\x31\xf4\x34\x23\x50\x93\x2b\x69\xd2\xfc\x8d\xc9\x91\xa1\x27\xd0\x19\x5b\x0a\x23\x60\x18\x21\x6c\x0c\xc7\x68\xc1\xd3\xf6\x48\x7c\x85\xdc\xd9\x41\x1f\x41\xad\xda\x16\xf4\x0d\x49\x47\x6b\x5a\xeb\x3b\x3e\x18\xe4\xbd\x84\x95\xfe\x44\xe5\xcb\xeb\xea\x1e\x55\x7c\xbb\xda\x47\xa9\xea\x26\x44\xd5\x0a\xa2\xd2\xd5\x02\x8a\xbc\xcc\x33\xdf\x90\x55\xfd\x7b\xed\x28\x6f\x4a\xc3\xea\xd8\xd6\xea\xa3\xcf\x77\x89\xbd\x77\x32\x50\xe1\xa2\xb9\x23\x89\xbe\xaa\x77\xf5\x57\x75\x01\xa8\xdf\xd5\xb1\x1a\x74\xeb\x54\x3d\x92\x30\x3e\x81\xfd\x8a\x29\x19\x8d\x3d\x6d\x49\x05\x26\x13\x64\x68\xaa\xb0\xe8\xd5\x08\xf5\xc8\xae\xa5\xbe\xa3\xcc\x47\x6a\xe4\xb7\x0e\x29\xac\x29\x46\xb2\xc8\x18\x6e\xc9\x2d\x23\xb5\xb3\xdf\x60\xdc\x8e\xdd\xf7\x3d\x79\x58\x8c\x51\x1a\x26\x48\xf5\xaf\x8b\x4f\xf7\xd1\x3d\xae\xdb\x16\x22\xc6\xba\xf2\x54\xe3\xdf\x0e\xd7\xc1\x9f\x33\xd2\x1f\x88\x7c\xbf\x66\x6a\x7d\x53\x3e\x0c\x97\xca\x2d\xfb\xa6\xaa\x63\x1d\x02\x87\xda\x11\x1e\x54\x98\xfe\x53\xb4\x7b\xfb\x37\x00\x00\xff\xff\x0a\x5e\x2f\xeb\xc3\x09\x00\x00")

func templateHttpCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpCreateTmpl,
		"template/http/create.tmpl",
	)
}

func templateHttpCreateTmpl() (*asset, error) {
	bytes, err := templateHttpCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/create.tmpl", size: 2499, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\xc1\x6e\xdb\x30\x0c\x3d\x2f\x5f\x41\x08\xd9\x60\x17\xb1\x7c\x2f\xb0\x53\x53\xb4\x01\x86\x6e\x58\x07\xec\xd2\x8b\x62\xd1\xb6\x50\x45\xf2\x68\xba\x4b\xe7\xe5\xdf\x07\xd6\x8e\x13\xb7\x9d\x80\x00\x56\xfc\xf8\xf4\xf8\x1e\xe5\xbe\xcf\x2f\xa0\x8a\xfc\xdc\xe0\x25\x60\xe0\x2a\x6a\x17\x73\x0c\x2c\xbf\x22\xaf\x30\xe8\x1b\x32\x4d\x0d\x17\xf9\xe1\xb0\x58\xf4\x3d\x58\x2c\x5d\x40\x50\x35\x73\x93\x5b\xf4\xc8\xa8\xe0\x70\x58\x00\x00\xf4\x7d\x06\xbf\x1d\xd7\x80\x7b\xc6\x60\x61\x09\xea\x9b\x29\x1e\x4d\x85\x6a\x28\x50\x90\x8d\xd0\x01\x0e\x8c\xbb\xc6\x1b\x16\x3e\x34\x16\x49\x81\x3e\x91\x81\x70\x9c\x76\xe7\x58\xdf\x20\xe5\x2f\x12\xdc\xae\x89\xc4\x0a\x96\x82\x3c\x42\x97\xcd\x63\x05\x97\x9f\x61\x6b\x5a\x84\xa5\xbe\x8a\xa1\x74\x95\x1e\xb5\x9c\x51\x92\x09\x15\xc2\x32\x08\x76\xa9\xef\xa2\xc5\x16\xce\x04\xe6\x39\xac\x5f\x3a\x04\xc2\x5d\x7c\xc2\x16\xcc\xc4\x7e\x38\x68\x79\x0c\xfa\xce\xec\x84\x12\x4a\x8a\x3b\xe0\x1a\xc1\x1a\x36\x72\xb0\x9e\x78\xca\x2e\x14\x90\xd4\x30\x2b\xb8\x35\xc1\x7a\xa4\x74\x3c\x22\x29\xe0\xa2\x74\x5b\x24\x7d\xc5\xfb\x14\x90\x28\x12\xf4\x13\x85\x2c\x2f\x32\x6b\xed\x63\xa5\x7f\x3a\xae\x93\x3f\xa6\xd1\xf7\x4c\x2e\x54\x89\xda\x21\xd7\xd1\xaa\x15\xa8\x81\x4e\xa5\xe9\xac\x56\xa2\xf9\x8f\x81\x36\x13\xe9\x59\x47\x5e\x89\x15\xe7\x09\xc9\x7a\x32\x04\x04\x02\xd5\xdf\xf1\x57\x87\x2d\x2f\x3e\x4c\x8d\x99\x96\xe5\x8d\xb1\xa6\xe1\x48\x62\xf4\x13\x12\x8f\xb8\xa4\x90\x3f\x18\xf7\x9c\xa4\x2b\xf8\x44\x2b\x60\xea\x70\xae\x0b\x89\x40\x9a\x2a\xbc\xc3\xc0\x73\x4b\xf5\xd0\xca\xd7\x80\x9b\x75\xd2\xf7\xe0\x4a\x79\xb9\x59\xeb\x5b\xd3\xde\xc4\x1f\xcf\x8d\x80\x86\x8a\xcd\x5a\x8f\xfb\xc4\xd9\x54\x46\xc7\xb7\xb2\x73\x76\x1a\xa3\x54\x5f\xef\xb1\x48\xe8\xa4\x29\x5d\xbc\xb6\x68\xb6\x97\xf5\xbe\x65\x2f\xe1\x64\xb5\x04\xe8\x42\xa5\xc0\xba\x82\xdf\x94\xaa\x6b\x41\xb5\x0a\x12\xef\x5a\x06\x15\x22\x67\x65\xec\x82\x55\xe9\x5b\xec\x97\x58\x4d\xc8\xa4\x21\x17\xb8\x04\x25\xf9\x6e\x02\x27\x0f\xea\x63\xfb\xa0\x56\xe0\x6c\xaa\xc6\x66\xc5\xa1\xf4\x1d\x9e\x35\x96\xa6\xf3\xac\x46\x12\x50\x45\xec\xbc\x85\x10\x19\x86\xbb\x0a\x6a\x32\xf8\x2f\x3c\xe2\xd6\x6c\xe7\x2c\xd9\xf1\x16\x4d\x43\xa7\x37\xa1\x8c\x89\x3a\x4b\x66\x2c\x94\xa1\x1f\x48\x65\xee\x8e\x62\xd5\x14\xc8\x98\xe2\x20\x7c\x7e\x0a\x21\x77\x14\xa0\xd0\xf7\x18\xec\x71\x84\xc7\xab\xd6\x76\x45\x81\x6d\x5b\x76\xde\x3f\x9f\x59\xf5\xfa\xa3\x30\x3d\xfd\x0b\x00\x00\xff\xff\x6e\xa3\x5d\x64\xc3\x04\x00\x00")

func templateHttpDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpDeleteTmpl,
		"template/http/delete.tmpl",
	)
}

func templateHttpDeleteTmpl() (*asset, error) {
	bytes, err := templateHttpDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/delete.tmpl", size: 1219, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHandlerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xc1\x6e\xe3\x36\x10\xbd\xfb\x2b\x5e\x05\x63\x21\x05\x0e\x95\x6d\x6f\x46\x7c\x69\x9a\x6e\x0f\xdb\x20\x48\x5b\xf4\xb0\xd8\x03\x23\x8d\x25\xc2\x32\x29\x90\x54\xb2\x5d\x45\xff\x5e\x90\xa2\x65\xc9\x91\xb3\xc8\x21\xb0\xa8\x79\xf3\x66\xf8\x66\xfc\xe2\xb6\x4d\x2f\x50\x28\xfb\x5f\x4d\x6b\x90\xb4\x85\x62\x42\xa5\x24\xad\xfb\xcb\xd2\x82\x24\xfb\xa4\x79\x5d\xe2\x22\xed\xba\xc5\xa2\x6d\x91\xd3\x56\x48\x42\x54\x5a\x5b\xa7\x25\x97\x79\x45\x3a\x42\xd7\x2d\x00\xa0\x6d\x2f\xf1\x2c\x6c\x09\xfa\x66\x49\xe6\x58\x22\xba\xe7\xd9\x8e\x17\x14\xf5\x19\x11\x2e\x03\xb4\x87\xc3\xd2\xbe\xae\xb8\x75\x84\xc4\x73\x47\xc5\x8e\x64\x70\x1c\xc7\xd3\x18\x5b\xd5\xa4\x53\xdf\x83\xd8\xd7\x4a\xdb\x08\x4b\x87\xf4\xd0\x34\x45\x68\x0c\x25\x37\x30\x6a\x4f\xc8\x94\x7c\x22\x29\x48\x66\x84\x3d\xd9\x52\xe5\x06\x8d\xa1\x1c\x4a\x42\xaa\x9c\x2e\x43\x86\x61\x9e\xc2\x09\x32\x90\x18\xab\x9b\xcc\xa2\x3d\xd2\xff\x2a\xec\x9e\x9b\x1d\xac\x72\xc4\x5b\x51\x34\x9a\xf0\x5c\x8a\xac\x84\x56\x8d\x25\xe3\x22\x9a\x0a\x61\x2c\xe9\x11\xe3\x43\x1f\x6c\x84\xb4\xbf\xfc\xdc\xb3\x6d\x1b\x99\x21\xd6\x26\xc4\x12\xd7\x72\xac\x87\xd3\xa3\x52\x15\x5a\x68\xb2\x8d\x96\xd0\xe6\x83\xc6\x4f\x1b\x5c\x21\xf4\xd2\xb6\x58\xd6\xbb\x02\xeb\x0d\x1e\xb9\x21\x2c\xd9\x8d\xef\x87\x05\xd9\x47\xea\x69\x2e\x0b\xc2\x52\x3a\xec\x92\xdd\xa9\x9c\x0c\x46\xb3\xc8\x94\x34\x16\xf1\x70\x3e\xb0\x4b\x76\xc7\xf7\x8e\xe7\x46\x93\xd3\x3e\x5c\x61\x83\x8f\xb8\xbe\x86\x50\x96\x9f\x4f\x79\x20\x9e\x9f\x8f\xfe\x53\xe7\xdc\xd2\xf9\xf8\x6f\x54\xd1\x5b\xf1\xcf\xc2\xd8\xd3\x68\xb8\x24\xf9\x4b\x4a\x76\x9b\x17\x64\x26\x2b\x37\xcb\xe4\x0e\xd4\x1f\x5e\x50\x73\x93\xf1\x0a\x27\x39\x61\x19\x4f\xa9\xa6\xd7\x1d\xa4\xb9\xbe\x76\xc2\xe0\x12\x1f\x07\x74\xb2\x18\x1e\xd3\x74\x9a\xf7\xc7\xb0\xac\xee\xd3\xc0\xad\x35\x32\xdd\xe4\x50\x35\x69\x6e\x85\x92\xc6\xed\xe9\x61\xd8\x5d\xc7\x26\xf9\x6c\x60\xf6\x4b\x36\xcb\x7d\xd8\xe1\x49\xf7\x61\xc1\x17\x93\x97\x59\x25\x48\x5a\xf7\x74\x41\xd2\xb2\x1b\x7f\x9c\x20\x2a\x55\x84\xa7\x8b\xef\xbc\x66\x9f\x55\x51\x90\x1e\x10\xdd\x91\xce\xef\xf6\x1d\x3d\xcf\x75\x14\x67\x63\xfe\x15\xaa\x31\x59\x82\x8b\xd9\x5b\x4c\xdb\x0f\x5f\x8a\x0f\x73\xd0\xf6\xd5\xc4\xfb\x7b\xad\x91\xad\x5e\x85\x2a\x55\xac\xfd\x27\xfb\x57\xd8\x32\x76\x7d\xfc\x65\xb5\x90\x45\x1c\x1d\x1c\x6e\x85\x68\xae\x4c\x94\x24\x53\xba\x6e\x4e\x87\x34\xc5\x43\x30\x83\x90\x67\x06\x77\x30\xb0\x25\xa1\x20\xe9\x26\x4d\xf9\x61\x26\x7e\xe0\x3e\x22\x9e\x48\x22\x2b\x45\xef\x2c\x9a\x4d\xd5\x8d\xcb\x79\xa9\x12\xfc\xa9\x1a\x69\x63\x8d\xad\x78\x24\xcd\xfc\x6e\xea\x15\x46\x46\x33\x95\x48\x6c\xa1\x0d\x73\xe6\x33\xf3\xad\x3f\x05\x7b\xf5\xd9\xbd\x32\x36\x8e\xd2\x68\x85\x92\x05\xdc\x19\x2d\xde\x28\xe0\x3c\x62\x9e\xfe\x13\x39\xf6\xb5\xc8\x7d\x01\x8f\x7b\x3f\x7d\x6f\x32\x67\xfa\xe7\x36\x2b\xe3\x28\x0d\x15\x02\xf4\xfd\x35\x7a\xa3\x9a\xaf\xd1\xc7\x8e\x45\x02\xf6\xfd\x45\x9c\xdb\xbd\xa5\x93\x67\xf7\xa0\x37\xb8\xdf\xe3\x90\x67\xfa\x98\xf7\xca\xb9\xce\x30\x9d\x62\x3a\xca\xec\x3a\xdf\xee\x19\xae\x57\x4c\x3f\xb4\xe2\xd3\x1f\x0c\xc7\xff\xac\xc6\x6a\x51\xdf\x4a\x7b\xab\xb5\xd2\x31\x69\x0d\x72\x4f\x89\x0f\xc8\x62\xd4\x76\x70\x93\xfe\xbd\x61\x7f\x6b\xb1\xbf\xd7\xb4\x15\xdf\x5c\x16\xeb\xf3\x93\x15\x22\x6f\x22\x51\xdf\xe4\xb8\xd2\x77\x5e\xff\x2e\xa8\xca\x8d\xc3\x1b\xec\x79\xfd\xa5\xe7\xfa\xda\x7f\x24\xf8\xf2\xd5\x39\x8b\x07\x8d\xea\x8a\x2d\x7c\xc2\x66\x03\x29\x2a\xbc\xbc\xa0\x22\xe9\x39\x12\xf7\xee\x6a\xde\xf4\xa4\xa8\x16\xaf\xe5\xd1\x6e\xaa\x7b\xbe\xa3\x78\x54\x6b\x85\xab\xa3\xa4\x5b\xa5\xb1\x5b\xe1\xc9\x01\xfb\x55\xf0\xc5\x4f\x6a\x60\x03\x5e\xd7\x24\xf3\x58\xaf\x30\xb2\x43\x97\x99\x24\x73\x85\xc3\xef\x93\xa0\xca\x30\x89\xff\x03\x00\x00\xff\xff\xa9\x1b\x27\xcd\x60\x0a\x00\x00")

func templateHttpHandlerTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHandlerTmpl,
		"template/http/handler.tmpl",
	)
}

func templateHttpHandlerTmpl() (*asset, error) {
	bytes, err := templateHttpHandlerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/handler.tmpl", size: 2656, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHelpersTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x61\x6f\xdb\x36\x10\xfd\x3c\xff\x8a\x9b\x60\xa0\x52\x10\x53\x29\xd6\x4f\x2e\x32\xa0\x5d\x52\xc0\x43\x90\x78\xf5\xb6\x2f\x45\x81\x32\xe2\x49\xe6\x22\x51\xca\x91\xca\x96\xaa\xfa\xef\x03\x29\xd9\x96\x64\xb9\x69\x92\x6e\x02\x5a\xc7\xe2\xe9\x78\xf7\x9e\xde\x3b\xba\xaa\x40\x60\x2c\x15\x82\xb7\xc6\xb4\x40\x0a\xd7\xc6\x14\xa1\xc0\x28\x17\x38\xe3\x4a\xcc\xee\x78\x2a\x05\x37\x38\x23\xbc\x2d\x51\x1b\x0f\x66\x75\x3d\x01\x00\xa8\xaa\xf0\x08\x92\xdc\xdc\x17\x38\x07\x54\x26\xc9\x99\xcc\x43\x54\xc6\xfe\x8b\xc2\x04\x15\xfb\xfd\xbe\x40\x38\x0a\xdb\x07\xdc\x7f\x32\x06\x24\x82\xf9\x29\x44\xec\x6d\x2e\xee\x97\x9c\x34\x92\x2f\x82\xd7\xee\xfe\x8f\xa7\xa0\x64\x0a\x95\x8b\xb5\x57\xca\xce\x89\x72\xf2\x3d\xb4\x1f\xe0\x2a\x93\x2a\x81\xbf\x74\xae\xbc\x63\xf8\xcc\x8b\x36\x00\x89\x82\x60\xfb\x18\xa1\x29\x49\x41\xc4\x56\x86\x9b\x52\xfb\xaf\x4e\x4e\x02\xb6\x42\x25\x56\x86\xa4\x4a\x7c\x4f\x2a\xd7\x99\xcb\x03\xda\xdd\xf4\x82\xc9\x0f\x9b\xd6\x6c\x9d\x0a\x51\xe8\x3f\x9b\xfe\x65\xae\x60\xba\x6d\xdd\x5e\x61\x08\xed\x1a\x82\x59\x23\x08\x6e\x38\xdb\xae\x22\x91\xb6\x4d\x66\xfc\x06\xfd\x8c\x17\x1f\x9a\x2d\x3e\x36\x1f\xbb\x3a\xab\x6a\x06\xc4\x55\x82\x30\x8d\x6d\xfc\x94\xbd\x93\x98\x0a\x0d\x9d\x9d\x36\x71\xd3\x68\x8d\xd1\xcd\x7b\xbc\x2d\x25\xa1\xb0\xd1\x5c\x09\xf0\x55\x6e\x60\x1a\xb3\xab\xc2\x16\xc9\xd3\x00\x7c\x65\xb3\xb1\x4b\x9e\x21\x4c\xd9\xe2\xcc\xfd\x15\x8c\x65\x94\xf1\x30\xe9\x20\xa8\x65\x4c\xb0\xaa\xb2\x29\x57\x86\xca\xc8\xb8\x0a\xa1\xae\xe1\x74\x48\x56\xf7\xb2\x08\x7c\xf0\x9a\xe7\x5c\x29\x75\xed\x7d\x84\x53\xf8\x94\x49\xad\x2d\x83\xb4\xd9\x33\xb6\xf9\xe6\x30\x88\xfd\xb4\x97\x75\xbf\x7e\x54\x7b\x15\xb7\x6d\xe5\x64\x73\xb5\x04\xe5\xa4\xed\xb7\x85\x3e\x57\x65\x36\xd6\xe2\x38\x16\xb3\x91\x48\xd7\x59\xaa\x71\xb8\xe0\xaa\x49\x35\x8e\x65\xff\x3a\x88\x7b\x6f\xfc\x03\x0d\x76\x32\xb6\x42\xb2\x69\xd9\x92\x47\x37\x3c\xb1\xfb\xb7\xdb\x6c\x7b\x87\xba\xf6\xab\x6a\x1a\xb3\xb7\x5c\xcb\xc8\x49\xd2\x2f\x48\x2a\x03\xde\x91\x60\xde\xa0\x24\xfb\x9e\x1c\xd2\xe2\x1e\x10\x07\x28\x46\xa2\x56\x94\xc1\xe8\xb3\x23\x0d\xb5\x0c\xb8\x77\xb9\xc7\x42\x5d\xd7\x55\x75\x88\xe8\xc1\xed\x03\xb7\x5a\x7d\x61\xa3\xaf\x73\x91\xe0\xa8\xbc\x36\xdb\xe3\x56\x4a\x5f\x55\x03\x3e\x51\x0d\xf8\x80\x1a\x50\x24\x08\x83\xc8\x27\x68\x61\xe4\x96\x8c\x21\x45\x65\x8d\x52\x07\xf0\x33\x9c\x0c\x4a\x4d\xd9\x42\xc5\xb9\xef\xdd\xed\x1c\x2f\xe6\x32\x45\xd1\xd8\x6c\xe3\x4b\xcd\xd3\x8c\xb1\x3e\xb3\xa3\x76\xfb\xeb\xea\xea\xb2\x89\xef\xc5\x4e\xfa\x3d\xb4\xec\x5a\xb1\xed\x88\x9e\x1c\x18\x4c\x52\xcc\x62\xca\xb3\x59\x49\xa9\xb7\x69\x2d\x0c\x61\x71\x06\x52\xc3\x1f\xef\x2f\xa0\xe0\xc4\x33\x34\x48\x6c\xd2\xe1\xd5\xb9\xe0\x42\x2f\x94\xe9\xe1\x21\x8e\x37\x12\xd2\x86\xa2\x5c\xdd\xb1\x37\x26\x97\x7e\xc4\x96\x36\x8b\xf6\x3d\x29\xbc\xce\x4c\x69\x15\x37\x2a\x8b\xc1\x98\x4a\xd0\x18\xcb\xaa\x14\x60\xeb\x85\x92\xd2\x5d\x69\xed\xd8\xda\x4e\x22\x0b\xf0\x60\xcf\xc3\x83\xed\x20\xda\xbd\xe1\x26\x20\x2b\xb5\x81\x6b\x04\xae\x40\x2a\x83\x09\x12\x24\x84\xdc\x20\xc1\x67\xa4\xdc\x0b\x46\x68\x18\xf8\x97\x14\xcd\x98\xee\x56\xf6\x78\xca\x1c\x20\xb3\x35\x57\x22\xb5\x33\x76\xb3\xc1\x21\x30\xf5\xdf\xd2\x44\xeb\xce\x8d\xae\x82\x1b\xb2\xa6\x0d\x30\x87\x44\x8c\xb7\x4d\xa4\xa7\x72\x33\x8b\xf3\x52\x09\x6f\x4c\xc8\x11\xd7\x68\x8f\x2d\x6c\xa1\x2f\x73\xf3\xce\xc6\x39\xa8\xe7\xa3\xfa\xcd\x74\xd2\xbe\x27\xb2\x38\x57\x66\xc7\xcc\x68\x74\x2b\xa5\x4c\x27\x43\x22\xab\x6a\xd3\x0c\xbb\xc8\x13\xdb\xc2\xb1\x85\x93\x41\xc7\xe6\xc6\x73\x76\xd8\x7e\xd5\x63\x3b\xd3\x49\xb0\xef\x06\x96\xcb\x21\x18\xd6\x68\xca\x94\xd3\x37\xe0\xb1\x6a\x43\xbf\x23\x24\x4d\xc0\x7f\x85\xc9\xc9\x13\x30\x29\x48\xde\xf1\xe8\x7e\x14\x8e\x30\x84\x65\xb3\xec\x90\x79\x82\xdd\x0a\x8c\x79\x99\x9a\xf9\xb8\x4f\xb8\xa1\x7d\xd6\x84\x58\x8b\x7f\x3e\x28\x5b\x30\x62\x79\x8d\xd4\x7e\x59\x28\x83\xa4\x78\xba\x42\xba\x43\x72\xe9\xfb\x56\xe1\x16\xc0\x2d\xec\x79\x02\xec\xbc\x46\xc9\x74\xd2\x2c\x3c\xac\xf8\x82\x27\x52\xb9\x01\xf2\x8c\x1f\x0b\x85\x3d\xcc\xcc\x4f\xe1\xe5\xc6\x2d\x5a\x33\xfa\xad\x44\xba\xf7\x3d\xbb\xec\x05\xaf\x41\x58\x07\xf1\xbc\x8e\x5f\xd8\x95\xc6\xd7\x07\xb6\x2e\xbe\xd5\xc9\x9b\x31\xd8\x18\x79\xc1\xc9\x8d\xe7\x5b\xbb\xed\xce\xc2\xe1\x85\xdd\xe6\xc5\xc0\xc9\x5d\x51\xc7\x20\x9e\x6b\xdf\xae\xf7\xc7\x1a\x78\x6b\xab\x06\x33\xbd\x44\x5a\xb6\xf0\xfd\x74\x32\x8e\x5f\x37\x6e\x1c\xc7\x6e\xc4\xff\x80\x67\x77\xbb\x21\xae\xbd\x62\xbf\x03\xbe\x3d\x90\x9e\x86\x33\xea\xed\xd9\xe1\x96\x5d\xc8\x4c\x1a\xbf\x9b\x35\x60\x57\x71\xac\xd1\xf8\xbe\xe3\x72\x06\x2f\x03\x38\x82\x7e\xc4\x9b\x34\xf5\x89\xfd\x92\x2b\x83\xff\x18\xbf\xed\xe1\x10\x92\x83\xf3\x45\x8c\x26\x5a\x5b\x1c\x9d\x8d\xb8\x63\xe2\x17\xb8\xc1\x6b\x7e\x0d\x5f\xa0\x48\x4b\xe2\x69\x5d\x37\x47\x0f\x71\xfd\x88\x9f\xc9\xcf\xb4\x8e\x8e\x3b\xfc\x1b\x00\x00\xff\xff\x7b\xa1\x8f\xa7\x5a\x10\x00\x00")

func templateHttpHelpersTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHelpersTmpl,
		"template/http/helpers.tmpl",
	)
}

func templateHttpHelpersTmpl() (*asset, error) {
	bytes, err := templateHttpHelpersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/helpers.tmpl", size: 4186, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpImportTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xcf\x6a\xc3\x30\x0c\xc6\xcf\xcb\x53\x08\xd3\xc3\x56\x58\x04\x83\x5d\x0a\x3b\xef\xb6\x77\x50\x13\xc5\xf6\x70\x2c\x63\xab\x81\x60\xf2\xee\x23\xcd\xca\xc2\x68\x0d\x9f\xf1\x67\x7e\xfa\x5b\x2b\x1e\xc1\x8a\xce\x89\x4f\xc0\x51\xad\xb4\x5e\x90\xa3\xae\xea\xd0\x72\x6c\x3f\x33\x25\x07\x47\x5c\x96\xa6\xa9\x15\x7a\x1e\x7c\x64\x30\x8e\x43\xe2\x8c\x4e\x35\xa1\x1f\x93\x64\x35\xb0\x2c\x0d\x00\xc0\x66\xe1\xf9\x6a\xd6\x53\x2b\x64\x8a\x96\xe1\x10\xe1\xf4\x01\x87\xf6\x4b\x7a\x2e\x37\x7c\x47\x29\x8f\x29\x90\x32\x98\x2d\x07\xae\x8d\x15\xb3\xc6\xed\xe0\x5a\x81\x63\xbf\xff\x31\xd6\xab\xbb\x9c\xdb\x4e\x46\xb4\xf2\xda\x39\x8f\xab\xa6\x77\x73\x17\x19\xa9\x14\xe6\xd0\x39\xcc\x1c\x7b\xce\x8f\x28\x1f\xf2\x05\x99\xca\xfc\x5d\x24\xde\x87\xac\x0c\xfe\xcc\x19\xb7\x7b\x7a\x33\xcd\xd3\x7f\x64\xa2\x30\x53\x20\x1c\xa8\xe8\x75\x5d\xb7\x07\xf5\x94\x54\x7e\xab\xbf\x34\x7f\x63\xfd\x04\x00\x00\xff\xff\x22\xc1\xf8\xe5\x96\x01\x00\x00")

func templateHttpImportTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpImportTmpl,
		"template/http/import.tmpl",
	)
}

func templateHttpImportTmpl() (*asset, error) {
	bytes, err := templateHttpImportTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/import.tmpl", size: 406, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpListTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\x5f\x6f\xda\x4e\x10\x7c\xfe\xf1\x29\x46\x27\xf4\x93\x41\x70\x7e\x8f\xd4\x87\x2a\x8a\xd2\x54\x11\x6d\x93\xaa\x7d\x3e\x7c\x6b\xfb\x84\xb9\x33\x7b\xeb\xfc\xa9\xc3\x77\xaf\xce\x10\x62\x92\x9e\x84\x74\xc0\xec\xcc\xac\x67\xdc\xf7\xf9\x1c\x55\x90\xe7\x96\x2e\x40\x5e\xaa\xa0\x5d\xc8\xc9\x4b\xfa\x14\x79\x45\x5e\x5f\xb3\x69\x6b\xcc\xf3\xfd\x7e\x32\xe9\x7b\x58\x2a\x9d\x27\xa8\x5a\xa4\xcd\x1b\x17\x45\x61\xbf\x9f\x00\x40\xdf\x2f\xf1\xe8\xa4\x06\x3d\x09\x79\x8b\x29\xd4\x77\x53\x6c\x4c\x45\xea\x00\x57\x58\x1e\xa1\x07\x38\x84\xb6\x6d\x63\x24\xb1\x91\xb1\xc4\x0a\xfa\x8d\x0c\x89\xe3\xed\xdb\x18\xdb\xb4\xc4\xf9\x60\xc0\x6d\xdb\xc0\xa2\x30\x4d\xc8\x57\xe8\xb4\xdd\x54\xb8\xf8\x84\xb5\x89\x84\xa9\xbe\x0c\xbe\x74\x95\x3e\x7a\x19\x51\xb2\xf1\x15\x61\xea\x13\x76\xaa\x57\xc1\x52\xc4\xc8\x60\x9e\xe3\x8e\x8c\x45\x49\x52\xd4\x14\x21\x35\x9d\xd8\xf7\x7b\x9d\xae\x5e\xaf\xcc\x36\x51\xc2\x59\xf2\xe2\x4a\x47\x16\xeb\x67\x18\x54\xee\x81\x3c\x3a\x6e\x96\xad\x61\xb3\x25\x21\x46\xc9\x61\x9b\x58\xc6\x0a\xd6\x88\x19\x7c\x1a\x6f\xc1\x24\x1d\xfb\x08\x27\x90\x30\xe8\x15\x8d\x23\x2f\xfa\x34\x51\x76\xbe\x40\x56\x63\x7e\xa6\xfe\xc5\x78\xdb\x10\xcf\x70\xeb\xa2\x64\x05\xe6\xa5\x5b\x13\xeb\x4b\x79\x9a\x81\x98\x03\xa3\x3f\x31\xa4\xd3\xa4\x8d\x6b\xdd\x84\x4a\xff\x76\x52\x67\x7f\x4c\xab\xef\x85\x9d\xaf\x32\xb5\x25\xa9\x83\x55\x0b\xa8\x44\xa6\x66\xb3\xb3\xc9\xdd\x61\xf2\x68\xeb\xcc\x84\xfe\xd1\x11\x3f\x67\xe7\xf8\x07\xc3\x60\xa4\xa8\xf4\x1d\xed\x3a\x8a\x32\xf9\xef\xb4\x8b\x89\x92\xfe\x31\xd6\xb4\x12\x38\xe5\xf4\x40\x2c\x47\x5c\x56\xa4\x1f\x84\x9e\x24\x9b\x2d\xf0\x3f\x2f\x20\xdc\xd1\x39\xfb\x5b\xe3\x6c\x45\xf1\x67\xb8\x0d\xc6\xa6\x3c\xd5\x59\x2f\xc7\x27\xcf\x71\x65\x2a\x62\x34\x09\x3a\x8c\x41\x6a\x23\x30\x4c\x60\xda\x75\x8e\xc9\x22\x78\x24\x06\x84\x96\xd8\x88\x0b\x5e\x7f\x20\xda\xf5\x3d\xf4\x95\x97\x61\xe9\xf7\x4a\xc9\xd7\xa8\xbd\xe3\x87\x41\xcc\x87\x48\x3e\x0c\xfc\xbb\xe0\xad\xa9\x9c\x1f\x3c\xa8\xb4\xd9\xf2\xb5\xe6\xa7\x28\xf5\x8d\x2f\x43\xa6\x46\x51\xbc\x60\x43\x6b\xb3\xc6\x0b\xda\xa6\x63\xd3\xa4\x7a\x32\x79\x4b\x4c\x29\xd7\x14\xf6\x8d\x97\x4c\x99\x6d\xe8\xbc\xa8\x05\x1a\xf2\x19\xc5\xd9\xbb\xa8\x0f\x65\x44\xa1\xbf\xde\x7f\x5b\x65\x2b\x7a\xec\x7b\x64\x4c\xb1\x0d\x3e\xd2\x2f\x47\x8f\xc9\xcf\xd4\xeb\xcf\xde\x07\x19\x1c\x46\x7d\xd5\x6c\x74\xaa\xcd\x35\x87\xae\x8d\x33\x9d\x60\xc7\x7a\xc4\x41\xe2\xa4\xf0\xfe\x2d\x3f\xdd\xfe\x06\x00\x00\xff\xff\xd5\x01\x0a\x95\x92\x04\x00\x00")

func templateHttpListTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpListTmpl,
		"template/http/list.tmpl",
	)
}

func templateHttpListTmpl() (*asset, error) {
	bytes, err := templateHttpListTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/list.tmpl", size: 1170, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpReadTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x41\x6f\xe3\x36\x13\x3d\x7f\xfe\x15\x03\xc2\x5f\x41\x05\x36\x75\x5f\xa0\x87\x22\x09\xb2\x2e\x16\xd9\x76\x77\xd1\xbd\xec\x85\x16\x47\x12\x11\x9a\x94\x47\xa3\x24\xae\xea\xff\x5e\x8c\x24\x2b\x76\xbc\x25\x60\x40\x34\xdf\xbc\x19\xbe\x79\x9c\xbe\xcf\x6f\xa0\x4a\x7c\x68\xf0\x03\x60\xe4\x2a\x19\x9f\x72\x8c\x2c\xbf\x22\xaf\x30\x9a\x07\xb2\x4d\x0d\x37\xf9\xf1\xb8\x58\xf4\x3d\x38\x2c\x7d\x44\x50\x35\x73\x93\x13\x5a\xa7\xe0\x78\x5c\x00\x00\xf4\xfd\x1a\x5e\x3c\xd7\x80\xaf\x8c\xd1\xc1\x12\xd4\x1f\xb6\x78\xb2\x15\xaa\x11\xae\x60\x3d\x41\x47\x38\x30\xee\x9a\x60\x59\xd8\xd0\x3a\x24\x05\xe6\x8d\x0c\x84\xe3\x6d\x77\x8e\x0d\x0d\x52\x3e\x14\xe0\x77\x4d\x22\x56\xb0\x14\xe4\x09\xba\x6c\x9e\x2a\xf8\xf0\x2b\x6c\x6d\x8b\xb0\x34\xb7\x29\x96\xbe\x32\x53\x2d\x67\x94\x64\x63\x85\xb0\x8c\x82\x5d\x9a\xc7\xe4\xb0\x85\xb3\x02\xf3\x1c\xbe\xa0\x75\x50\x22\x17\x35\xb6\xc0\x35\xce\xec\xc7\xa3\x91\xcf\x68\x1e\xed\x4e\x28\xc1\x3b\x8c\xec\x4b\x8f\x0e\xb6\x07\xb0\x50\xf9\x67\x8c\xd0\x51\x58\x37\x96\xec\x0e\x19\x09\x4a\x4a\x3b\x61\x39\xcf\xe0\x2c\xdb\xa1\x4e\x1b\x1d\x10\x46\x87\xd4\x82\x67\xe0\x34\xe4\x2b\x82\xc7\xc8\x66\x8e\x28\xbb\x58\x80\xae\xe1\xe6\x22\xfb\x47\x1b\x5d\x40\xca\x86\x7a\x75\x01\x37\xa5\xdf\x22\x99\x5b\x7e\xcd\x00\x89\x12\x41\x3f\x33\xc8\x0a\x72\xe3\xda\x84\x54\x99\xef\x9e\x6b\xfd\xb7\x6d\xcc\x57\x26\x1f\x2b\xad\x76\xc8\x75\x72\x6a\x05\x4a\xc8\x54\x96\x5d\x44\x4a\x8f\xff\xa3\x13\x6e\x2d\xf7\x5b\x77\x14\x94\x68\x7a\xde\x6a\x59\xcf\x96\x80\x40\xa0\xe6\x0b\xee\x3b\x6c\x79\xf1\xbf\xf9\x56\xb6\x65\x39\xb1\xce\x36\x9c\x48\x3a\xf6\x8c\xc4\x13\x4e\x17\xf2\x07\xe3\x2b\xeb\x6c\x05\xbf\xd0\x0a\x98\x3a\xbc\xac\x2b\xcf\xe1\x96\x50\x8a\x12\xd5\xf6\x1d\xd2\x41\x24\x1c\x5a\x37\x37\x6e\xd6\xeb\x22\x74\x3f\x8a\x31\x29\x7d\x81\x33\x7f\x0a\x91\xce\xcc\xf7\x1a\x09\xf5\xd9\xd9\x3f\x10\xd2\x0b\x92\x60\x36\x77\x72\xe0\x4b\x39\xdb\xdc\x99\x8f\xb6\x7d\x48\xdf\x0e\x8d\xc4\x8f\x01\x9b\x3b\x33\xed\xb5\x77\x99\x18\x3b\xb4\xb2\xf3\x6e\x36\x79\x96\x2d\xae\x64\x1e\x9f\x92\xab\xb0\xfd\x96\x3e\x25\xeb\x44\x54\x75\xf1\xe0\xde\x09\x70\x6f\x2b\x24\x08\x02\x1d\xc2\x80\x6b\xcb\x60\x09\x81\x70\xdf\x79\x42\x07\x29\x82\x30\x40\x6a\x90\x2c\xfb\x14\xcd\x15\xd1\xbe\xef\xc1\xdc\x47\x1e\xae\xfe\x3e\x93\xd4\x75\xf6\x2c\x4f\x0b\x57\x62\x33\xd1\x71\x6f\x3e\xc7\x70\xd0\xf4\xd6\xb1\xeb\x9b\x5d\xa5\xfc\xb9\xa1\x06\xe3\xae\x6b\xb1\xb6\x8f\x95\x02\xe7\x0b\xbe\x0a\x55\xf7\x82\x6a\x15\xe8\xe0\x5b\x06\x15\x13\xaf\xcb\xd4\x45\xa7\xc6\xef\xd6\xc7\xaa\x0b\x96\x54\x76\x1d\xfa\x29\x55\x73\xa0\x6e\xc8\x47\x2e\x41\xc9\x53\xd8\x44\xd6\x3f\xd4\xff\xdb\x1f\x6a\x05\xde\x65\x6a\x6a\xa2\x34\x3e\xfb\x09\xcf\x1d\x96\xb6\x0b\xac\x26\x12\x50\x45\xea\x82\x83\x98\x78\x14\x5b\x81\x7e\xb3\xcd\x13\x6e\xed\xf6\x1d\xcb\xfa\x34\xbb\x4e\x2b\x98\x4d\x2c\x93\x56\x17\x86\x1b\x22\x65\xd4\x8c\x53\x02\xe5\x8d\x9e\xaa\x55\xb3\xd3\x26\xe7\x8e\x95\x5f\xa6\x21\xe4\x8e\x22\x14\xe6\xf7\xaf\x9f\x1f\xf5\x23\xbe\xf4\x3d\x68\xc2\xb6\x49\xb1\xc5\xbf\x3c\xbe\x88\xc3\x96\xd1\xfc\x16\x63\xe2\xc1\x1d\xad\xb9\x0f\x4f\x46\xe6\xc0\x03\xa5\xae\x69\x33\x23\xb0\x29\x85\x3e\x17\xe3\xfd\xd0\x9e\xbf\xfe\x0d\x00\x00\xff\xff\x0b\xee\x44\xc0\x61\x06\x00\x00")

func templateHttpReadTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpReadTmpl,
		"template/http/read.tmpl",
	)
}

func templateHttpReadTmpl() (*asset, error) {
	bytes, err := templateHttpReadTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/read.tmpl", size: 1633, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRelationsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x4d\x8f\xa4\x36\x10\x3d\x67\x7e\x45\xc9\xea\x44\xb0\xea\x36\xf7\x95\x72\x88\x66\x26\x9b\x89\x46\xb3\xc9\xee\x26\x7b\xd9\x8b\x07\x17\x60\x8d\xdb\xa6\xcb\xc5\x7c\x84\xe5\xbf\x47\x06\xfa\x83\x69\xc8\x61\x95\xc4\x52\x4b\xd0\x3c\xbf\x7a\xae\x7a\x55\xd0\xb6\xd9\x1b\x28\x3d\xbf\xd4\xf8\x16\xd0\x71\xe9\xa5\xf1\x19\x3a\x8e\xbf\x3c\x2b\xd1\xc9\x77\xa4\xea\x0a\xde\x64\x5d\x77\x71\xd1\xb6\xa0\xb1\x30\x0e\x41\x54\xcc\x75\x46\x68\x15\x1b\xef\x82\x80\xae\xbb\x00\x00\x68\xdb\x0d\x3c\x19\xae\x00\x9f\x19\x9d\x86\x15\x88\xdf\x54\xfe\xa0\x4a\x14\xc3\x1e\x01\x9b\x11\x3a\xc0\x81\x71\x5b\x5b\xc5\x91\x12\x95\x46\x12\x20\x8f\x64\x10\x39\x8e\x77\xa7\x58\x5b\x23\x65\xbd\x0a\xb3\xad\x3d\xb1\x80\x55\x44\xee\xa1\xab\xfa\xa1\x84\xb7\x3f\xc2\xbd\x0a\x08\x2b\x79\xe9\x5d\x61\x4a\x39\x6a\x39\xa1\x24\xe5\x4a\x84\x95\x8b\xd8\x95\xbc\xf3\x1a\x03\x4c\x05\x8e\x08\xec\x11\x4e\x5e\xeb\x72\x0a\x89\x2b\xcb\xfa\x98\x28\xef\xd4\x16\xe1\x2b\xd4\x2a\xe4\xca\x42\xd7\x41\x81\x9c\x57\x18\x80\x2b\x3c\xc8\xea\x3a\x79\x82\xee\x3a\x50\xcc\x2a\xaf\x50\x03\xfb\x39\xa0\xdb\x03\x5f\xc7\x34\x1a\x1d\x9b\xc2\xa0\x86\xfb\x17\x50\x50\x9a\x47\x74\xd0\x90\xdd\xd4\x8a\xd4\x16\x19\x09\x0a\xf2\xdb\x9e\x54\x2b\x56\x7d\x36\x94\xd3\x40\xe8\x34\x52\x00\xc3\xfb\x98\xb9\x35\xe8\x58\x4e\x42\x14\x8d\xcb\x21\xa9\x60\x22\xe2\x17\xe5\xb4\x45\x4a\x17\x4e\x9c\xe4\xf0\xa6\x30\xf7\x48\xf2\x92\x9f\x53\x40\x22\x4f\xd0\x4e\x68\xe3\xb2\x31\x9d\x95\xb4\xbe\x94\x9f\x0d\x57\xc9\x5f\xaa\x96\x1f\x99\x8c\x2b\x13\xb1\x45\xae\xbc\x16\x6b\x10\xf3\x21\x44\x9a\x9e\xf1\x45\xe3\x2d\xd8\x43\x6f\x62\x0e\x36\x0d\x59\x11\x0b\xbd\x79\x95\xc7\xb8\x1e\x15\x01\x41\x84\xcb\x0f\xb8\x6b\x30\xf0\xc5\x77\x93\x44\xa8\xc0\xf1\xa9\xd2\xaa\x66\x4f\xd1\x4e\x8f\x48\x3c\x62\x93\x3c\xfe\xc1\xf8\xcc\x49\xba\x86\x1f\x68\x0d\x4c\x0d\x9e\x6b\xcc\x32\xb8\x24\x8c\x02\x63\xc2\x77\x0d\xd2\x4b\xcc\x7e\x6f\x91\x43\xdd\x0f\xc7\x7d\xc0\x7b\x75\x7f\xee\x0e\x13\x4e\xcb\x71\x84\x9d\x45\xdb\x0d\x19\x1e\xeb\x3a\x29\xa1\xfc\x3d\xc6\x4e\x52\xf9\xb9\x42\xc2\x64\xc2\x67\xfd\x13\x52\xc4\xdc\x5c\x25\x46\xa7\xe9\x80\x5d\xa8\xf5\x7c\x1d\x4c\x11\xc1\x7f\x38\xb3\x6b\xce\x5c\x7b\x8a\x1b\x06\x45\xec\xa7\x4f\xfe\xd6\x2b\x1d\x77\x7d\x7a\xa9\x11\x04\xa1\xd2\x62\x69\xeb\x98\xca\x6b\x55\x22\x81\x8d\xfb\x7a\x0e\xe0\x4a\x31\x28\x42\x20\xdc\x35\x86\x50\x83\x77\x10\x99\xc0\xd7\x48\xfd\xa0\x92\x8b\x84\xbb\xb6\x05\x79\xed\xb8\x3f\xed\x3f\x89\x1e\x27\xd2\xec\x73\x5c\x47\xbf\xc7\xbc\xef\xe4\x7b\x67\x5f\x12\x3a\x1a\x23\x9d\xdf\xd2\xb6\x9b\x45\x4d\xf3\x7e\xee\x3b\x6a\x53\xc5\x2e\x34\xae\x14\xa0\x4d\xce\x8b\x14\xe2\x3a\xa2\x83\x80\xc4\x9a\xc0\x20\x9c\xe7\x4d\xe1\x1b\xa7\xc5\x70\x1d\x8c\x2b\x1b\xab\x48\x9c\x57\xf2\x40\x71\xeb\xcb\x03\x41\x52\x93\x71\x5c\x80\x88\xfd\x7a\xe3\x38\xf9\x22\xbe\x0f\x5f\xc4\x1a\x8c\x4e\x63\x77\xc9\x9b\xab\xde\x25\x33\x1d\x7a\xe0\xbb\xc2\x42\x35\x96\xc5\x48\x06\x22\xf7\x8d\xd5\xe0\x3c\x0f\xd5\x12\xaf\xdd\x3d\xcf\xb5\x59\xaa\x82\x95\x37\xae\xf0\xc9\x38\x3c\xa2\xa1\xce\x5a\x6a\x18\x7f\x18\x67\xcc\xfe\x20\x62\xe8\x82\x51\x7f\x9c\x32\x6b\x40\x79\xc2\x71\x73\x15\x07\x54\x93\xf3\xcf\x06\x6d\xf4\xc0\xc2\x19\x09\xb9\x21\x07\xb9\xfc\xf5\xe3\xfb\xbb\xe4\x0e\x9f\xda\x16\x12\xc2\x50\x7b\x17\xf0\x4f\x83\x4f\x07\x9b\xef\x99\x7f\x72\xce\xf3\xf0\x22\x95\xd7\xf6\x41\x7e\x40\xa5\xdf\x91\x6f\xea\x90\xca\xb8\x61\x14\x94\xcc\x65\xb5\xb7\xa4\x0d\xdf\xd8\x67\xb1\xa6\xff\x4e\x9f\xf5\xee\xf8\xbf\xfa\x6c\x79\xd8\xd7\xaa\x34\xae\x97\x20\x0e\xa7\xfc\x66\xa3\x7c\x85\xda\x36\x34\xbc\xc7\xe7\x1c\xa3\xb6\xbe\x71\x2c\xd6\x60\xd1\x25\x18\xd2\xff\xcc\x10\xb7\x26\xf0\x8c\x21\x42\x1f\x74\xde\x12\xc7\xef\xa6\xfd\x9a\x7c\xd4\x4c\xbf\xab\xc6\xbb\xc3\xd5\xdf\x01\x00\x00\xff\xff\x22\x34\xe3\x0b\x17\x0a\x00\x00")

func templateHttpRelationsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRelationsTmpl,
		"template/http/relations.tmpl",
	)
}

func templateHttpRelationsTmpl() (*asset, error) {
	bytes, err := templateHttpRelationsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/relations.tmpl", size: 2583, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRequestTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x4f\x6f\xd4\x30\x10\xc5\xef\xfd\x14\x4f\x56\x0e\xbb\x2b\xea\x70\x5e\x89\x03\xa2\xfc\xa9\x04\xb4\xa2\xe5\x84\x90\xea\x4d\x26\x89\x69\x62\xbb\xf6\x84\x76\x15\xf2\xdd\x91\x93\xdd\x4d\xd8\x16\xa9\x88\x43\xa4\x78\x34\xf3\x3c\xbf\x37\xe3\xae\x43\x4e\x85\x36\x04\x51\x31\xbb\xd4\xd3\x5d\x4b\x81\x05\x4e\xfb\xfe\x04\x00\xba\x2e\x5d\xa1\xb4\xbc\x75\xb4\x06\x19\x2e\xad\xd4\x36\x25\xc3\xf1\xcb\xd2\x92\x8c\x7c\xef\x95\xab\xb0\x4a\x0f\x15\xa7\xb8\xd7\x5c\x81\x1e\x98\x4c\x8e\x04\xe2\x52\x65\xb7\xaa\x24\x31\x5e\x32\x89\x8f\xe9\x60\x6a\x5c\xad\x38\xf6\x40\x2a\x27\x2f\x20\x71\x10\x43\xd4\x98\x4e\xf3\xdc\xda\x91\x4f\x87\xb6\x75\xe3\xac\x67\x81\x24\x66\xee\x53\xbd\x32\x25\x21\x31\x58\xbf\x42\x22\x3f\xdb\x9c\x02\xfe\x7e\xf1\x24\x76\xf0\x60\x0f\x60\x20\x5e\x67\xac\xad\x11\x10\x99\x27\xc5\x24\xfe\x5f\xa8\x75\xf9\x5c\x28\xba\xb6\x23\x9d\x98\x4f\xe6\xe3\x79\x4a\xf8\xf9\x43\xba\xde\x3a\x9a\x66\x94\xa6\xb8\x54\xdb\xda\xaa\x1c\xb6\x80\x8a\x08\x1b\x15\x08\x89\x7c\x63\x4d\xa1\x4b\xb9\x9b\x18\xfa\x5e\x76\x5d\x74\x4f\x35\xf1\x80\xe1\x70\x95\x59\x47\x72\x24\x89\xc1\x5d\x3b\x72\x90\x8e\x4d\x60\x5e\xf3\xb8\xe4\x17\x9c\x0a\x99\xaa\xd1\xf7\x5f\xc6\x52\x04\xf6\x6d\xc6\xe8\x66\xa6\xa6\x2b\x5c\x5f\x9c\x5d\xac\xf1\x41\xfd\xd4\xa6\x84\xaa\x6b\x38\xab\x0d\x93\x0f\xa8\xc8\x13\x02\x51\x13\x60\x2c\xc3\xeb\xb2\x62\x89\x4f\x6a\xbb\x21\x70\xa5\x03\x32\x65\xb0\x21\xe4\xd6\x10\xb4\x81\x32\x96\x2b\xf2\xb8\x57\x5b\x48\x29\x27\x27\xf6\xde\xef\x96\xa5\x18\x97\xe5\x9d\xa6\x3a\xff\x63\x5b\xf6\x79\xba\x80\xf5\x58\x18\x3a\x86\xda\x0f\x74\x89\x45\xec\x28\x29\xe4\x79\xd3\xb4\xac\x36\x35\x2d\x8f\x85\x76\x5b\x93\x14\xf2\x6a\xe0\x1e\xae\x8b\x4e\xae\xc6\xe8\x30\xac\xbe\xc7\xcd\x8f\x60\xcd\x5a\x74\x1d\xb4\xc9\xe9\x01\x8b\xe0\x6a\xcd\x58\xb0\x2a\x3f\x5a\x7b\xdb\xba\x49\xe2\x5a\x95\x10\x31\x5d\x2c\x21\x5e\x88\x25\x5e\xa2\xef\xc5\xcd\xa3\xfe\x67\xaf\x69\x1e\x3a\x7d\xda\x0e\x1a\xed\x78\x9b\x97\xf4\x84\x1b\x48\xe8\x08\x20\x76\x5a\xc4\xf0\x57\xa3\xef\xda\xc8\x10\x89\xa8\x0e\xf1\xf7\xdb\xf7\xc3\x66\x8f\xb5\x11\x53\x9e\x9f\xfd\x0b\x2e\x3d\x13\xf7\x08\x75\xfe\xa8\x7e\x07\x00\x00\xff\xff\xf1\x8b\x38\x6b\xf3\x04\x00\x00")

func templateHttpRequestTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRequestTmpl,
		"template/http/request.tmpl",
	)
}

func templateHttpRequestTmpl() (*asset, error) {
	bytes, err := templateHttpRequestTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/request.tmpl", size: 1267, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpResponseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x8b\xdb\x30\x14\xbc\xe7\x57\x0c\xc6\x14\x3b\x64\xe5\x9e\x03\x39\x95\xb6\x97\x12\x0a\xdd\xee\x65\x59\x58\x6d\xfc\xec\xa8\x71\x24\x57\x92\x93\x16\xe3\xff\x5e\xe4\x6f\x07\x27\x6c\x0f\xbb\x87\x80\x65\xbd\x37\xf3\x66\xde\x38\x65\x89\x98\x12\x21\x09\xde\xde\xda\x3c\xd2\x64\x72\x25\x0d\x79\xb8\xab\xaa\x05\x00\x94\x65\xb4\x44\xaa\xec\xdf\x9c\xd6\x20\x69\x53\xc5\x84\x8a\x48\x5a\xf7\xdb\x45\x29\x49\xf6\x55\xf3\x7c\x8f\x65\xd4\x77\xdc\xe1\x2c\xec\x1e\xf4\xc7\x92\x8c\xe1\xc3\xfb\xce\x77\x07\x9e\x92\xd7\xb0\x0c\xe0\x4d\x39\x2c\x1d\xf3\x8c\x5b\x37\x04\xf1\x98\xb4\x07\x86\x1e\x0c\x0e\x63\x38\x8d\x6b\xb3\x9c\x74\x54\xcf\x2d\x8e\xb9\xd2\xd6\x83\xef\x2a\xfb\x29\x34\x97\x29\xc1\x97\x2b\xf8\x27\xac\x37\xe8\xd4\x3d\x08\x3a\x9b\xa6\xb6\x9b\xc2\xe9\x43\xd0\x1f\x5b\x32\x5f\xa2\xaa\x60\xac\x2e\x76\x16\xe5\xe4\xf6\x82\x23\x71\xf8\xfe\x89\x7d\x11\x94\xc5\x66\x8c\x7c\x09\x99\xb0\x1f\x35\x5e\x5d\xe9\xe0\xcb\x12\x22\x71\xef\xb7\x22\xcb\xf8\x4b\x46\x0f\x3c\x2b\x08\x55\xb5\xec\xc5\x37\x7d\xf7\x6e\xc6\xab\xc8\xad\xe9\x96\xa7\xdf\x94\x3a\x14\xf9\xc0\x74\xcf\x53\x78\xbf\x8c\x92\x9e\xa3\x7b\x76\x4f\x6b\xaf\x2c\x6b\x93\xbd\x9e\xe3\x79\x56\xde\xc8\xfc\x2b\xca\xa9\x55\xfe\x39\x4e\xe9\xa6\x70\xba\x22\x9c\xd8\x4f\x29\x7e\xcf\x28\x26\xe6\x16\xb5\xe5\x47\x6a\x5e\x88\x04\x52\xd9\x49\x83\x99\xe6\xe3\x35\xae\xd0\xdb\xb8\x52\xcd\x66\xc7\xe0\xf1\x69\xd9\x1d\xfa\x8a\x70\xb1\x18\xa3\xf9\xf9\x21\x75\x26\xbe\x70\x43\xf0\xd9\x27\x25\x13\x91\xb2\xf6\x9b\x19\xf7\x25\x85\xdc\x61\x4b\xe7\x0e\x30\x20\xd4\xe0\xae\xbf\xaa\x98\x7b\x3c\xb1\xad\x8a\x89\xb5\xa6\x85\xe8\xc9\x2f\xe2\xab\xc9\x16\x5a\xe2\x43\x77\xfd\x46\xe1\x5e\x83\xd8\xdc\xfb\xd5\x7b\x87\x6d\xdd\xf9\xf6\x5f\xa1\x0a\xa8\x61\x62\x73\x90\xe1\xab\x45\x0c\xa7\x6a\x71\x75\x99\x26\xa0\x3e\x2d\x37\x16\x3a\x24\x6b\xba\x32\x91\x20\x23\x19\x90\x09\xb1\xd9\xe0\xe3\xcc\xbf\x55\xbb\x72\x29\xb2\x1b\xc1\xd5\xce\xe0\x23\x3f\x50\xd0\x13\xad\x3a\xe0\x70\x52\x99\x28\x0d\xb1\x42\xbd\x91\x66\x3b\x74\x39\x53\x0d\xf8\x28\x9e\xb0\x99\xa6\x36\xbc\x35\x40\x33\xa5\x5e\x4c\xaf\x47\xce\x0e\x9f\xfc\xbf\x00\x00\x00\xff\xff\xdb\x60\xe7\xd1\xbe\x06\x00\x00")

func templateHttpResponseTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpResponseTmpl,
		"template/http/response.tmpl",
	)
}

func templateHttpResponseTmpl() (*asset, error) {
	bytes, err := templateHttpResponseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/response.tmpl", size: 1726, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\x51\x6f\xdb\x36\x10\x7e\x5e\x7e\xc5\x8d\xf0\x06\x29\xb0\xe9\xf7\x02\xc5\x50\x24\x59\xea\xa1\x4b\xb6\xa6\x5d\x5f\xfa\x42\x8b\x27\x89\x08\x4d\x2a\xe4\xc9\x4e\xe6\xfa\xbf\x0f\x27\x29\x8a\x65\xcb\x41\xfb\x3e\x01\x06\x2c\xe9\xf8\xdd\xdd\x77\x1f\x3f\x71\xbb\x9d\x9f\x43\xe1\xe9\xa9\xc2\x37\x80\x8e\x0a\x2f\x8d\x9f\xa3\x23\xfe\x65\xf3\x02\x9d\xbc\x0e\xaa\x2a\xe1\x7c\xbe\xdb\x9d\x9d\x6d\xb7\xa0\x31\x37\x0e\x41\x94\x44\xd5\xbc\xae\xb4\x22\x14\xb0\xdb\x9d\x01\x00\x6c\xb7\x33\xd8\x18\x2a\x01\x1f\x09\x9d\x86\x09\x88\xbf\x54\x76\xaf\x0a\x14\xed\x02\x01\xb3\x2e\xb4\x0d\x07\xc2\x55\x65\x15\x31\x1e\x2a\x8d\x41\x80\x7c\x01\x03\xc6\x78\xb9\xdb\x8f\xb5\x15\x86\x79\x53\x82\x59\x55\x3e\x90\x80\x09\x47\x3e\x87\x4e\xaa\xfb\x02\xde\xbc\x85\xa5\x8a\x08\x13\x79\xe1\x5d\x6e\x0a\xd9\xd5\xb2\x07\x19\x94\x2b\x10\x26\x8e\x63\x27\xf2\xc6\x6b\x8c\xb0\x57\xe0\x7c\x0e\x9f\x9b\x0e\xa1\x6d\x34\x82\x82\xc2\xac\xd1\xf5\x39\x76\x3b\xc9\x7f\x9d\xbc\x51\x2b\x06\x06\xe5\x34\x44\xb5\xc6\x08\x54\x22\x64\x25\x27\x88\x40\xbe\xb9\xd5\x8a\x14\x97\x24\xfb\x0c\x79\xed\x32\x48\x4a\x18\x80\xbc\x57\x4e\x5b\x0c\x69\x97\x3c\xc9\xe0\x3c\x37\x4b\x0c\xf2\x82\x1e\x53\xc0\x10\x7c\x80\x6d\x0f\xc1\x97\xe5\x06\x4a\x69\x7d\x21\xbf\x18\x2a\x93\x7f\x55\x25\xef\x28\x18\x57\x24\x62\x85\x54\x7a\x2d\xa6\x20\x5a\x38\x91\xa6\x83\xb5\x3c\xb4\x13\xd4\xea\x59\x1e\xfc\x6a\x56\x07\x2b\x98\xa4\xfd\xd9\x75\xf4\x5c\x23\x35\x9d\x55\x3e\x52\xd3\x9e\x1c\x44\x68\xae\xcb\xe1\x26\x19\xf4\xd7\xd6\xf1\x11\x1f\x6a\x8c\x34\x2c\x66\xad\x02\x04\xe0\xec\xb2\x7b\x7f\xf6\x53\xcf\x95\x8a\xc4\x6f\x94\x56\x15\xf9\xc0\x53\x5d\x63\xa0\x2e\x2e\xc9\xf8\x01\xe1\x23\x25\xe9\x14\x7e\x0d\x53\xa0\x50\xe3\x10\xfd\x3b\xfb\xd6\x98\x79\x8d\x33\xe5\xf4\x6c\xad\xac\xe1\x62\x67\xa1\xcd\xd2\xf3\x70\x48\xc4\x9d\x5a\x63\x3f\xe3\x21\x09\xcb\x76\x38\x99\x35\xe8\x68\x28\x17\xd9\x52\x71\xeb\x70\x71\xc9\x1c\x99\x9c\x5f\x2e\x2e\xe5\x7b\x15\xaf\xfd\xa7\xa7\x8a\x83\xda\x15\x8b\x4b\xd9\xdd\x27\x46\xa7\xbc\x39\x6c\xe4\x3b\xa3\xfb\x8d\x72\x38\xd7\x67\x79\xe7\x8d\xbc\x9d\xfc\xdd\xa0\xd5\xf1\x68\x8c\x5d\xb0\xc9\xc1\x79\x82\x49\x2e\x17\xab\x55\x4d\x6a\x69\x71\x34\x94\x2f\x93\x83\x6e\x3a\xc9\x59\x66\x75\x46\x0d\x34\xeb\xff\xe7\xb7\xe0\x8c\x3d\x90\xe7\x80\x0d\x79\x87\x34\xb6\x34\x39\x1f\x87\x4c\xa1\x31\x29\xf2\xda\xc3\x0c\x36\xa5\x22\x50\x4b\x5f\x13\x44\x6b\x32\x84\xbc\x6d\x8a\xf8\x79\xc9\x43\xc8\xea\x48\x7e\x05\x2b\x15\x62\xa9\xac\xc5\x10\x7f\x6b\xdd\x6b\xac\x9a\x51\x26\x98\xcd\xc3\xce\x4f\x3f\xee\x48\xc6\x8e\xe4\x2b\xcd\x1b\x7e\x8c\xb8\x9e\x34\xfc\x21\xd2\x3a\x59\xa0\xfc\xec\xcc\x43\x7d\x7a\x26\x2d\xb9\x2d\xfe\x9f\x35\x29\x32\xde\xdd\x21\xed\x31\x7b\x98\x37\x3d\x95\xaf\x91\xd6\x8f\xe4\xb9\xb0\xa8\x02\x67\x4a\x0f\x5e\xbc\xd3\xcd\x68\xc7\xf3\x4b\x29\x4f\x95\x30\xdb\xf7\xfe\xfd\xeb\xbb\xa6\xc2\xfb\x91\x7c\x40\x30\x6e\xc4\x73\xf9\xc2\x29\xfb\x68\xf3\x89\x90\xbc\x75\x93\xf0\xe2\x1e\xe9\xd9\xa1\x4f\x1c\x55\x31\xee\x1b\x8d\x33\xcf\x4a\x76\x6f\xe3\x0a\x01\xda\x64\x74\xb4\x54\x5c\x71\x54\x14\x90\x58\x13\x09\x84\xf3\x34\xcb\x7d\xed\xb4\x68\xff\x47\xe3\x8a\xda\xaa\x20\x8e\xa9\x11\x1f\x7c\xd1\x2f\x4c\xaa\x60\x1c\xe5\x20\xd8\xeb\x17\x8e\x92\xaf\xe2\x97\xf8\x55\x4c\xc1\xe8\x54\x74\x86\xc1\x2e\x93\x8e\xe0\x5c\x62\xae\x6a\x4b\xa2\x03\x01\x91\xf9\xda\xea\x66\xfb\xb7\x1f\x3a\x10\xbd\x49\x7d\x83\x7b\x5c\xaa\xe5\x10\x65\xcc\x01\x3f\xa2\xf5\x4a\xf3\x21\x22\x3c\x0d\xc9\x7e\x78\xc5\x00\xff\xae\x31\x3c\x25\xa9\xfc\x52\x62\xc0\xfd\xcf\xc4\x37\xb0\x7e\x83\x2c\x2a\xb9\xb8\x4c\x50\xf6\x2e\x78\xa0\xe1\xe3\x69\x75\x47\x10\xde\x87\x9f\xfc\x07\xae\x69\xe2\x40\x64\x01\xf7\x8f\x2a\x07\xc5\x5f\xa9\x02\x03\xb4\x0d\x34\x1b\xb8\xf1\x13\x15\x10\xd8\xf8\x4d\x40\x0d\xde\x3d\x93\xe3\x2b\x0c\x8d\xba\xe5\x11\xd4\xc3\x76\x0b\xf2\xca\x51\xd3\xd6\x61\xae\x13\xb2\xee\xb4\xf8\x16\x1e\xe4\xad\xb3\x4f\xff\x4b\xb1\x93\x62\x40\xa5\x47\x84\x08\x02\x54\x4e\x18\xba\x69\x88\xd7\x85\x69\xe5\xc2\xe5\x3e\x11\x03\x65\x35\x40\x6c\xbc\x01\x9d\xc6\x80\x7c\x3a\x7a\xae\x5d\xf4\x42\xeb\x24\x2a\xa6\xf0\x9a\xfa\xf6\x93\x05\xa4\x3a\x38\xc8\xe4\x1f\x77\xb7\x37\xc9\x0d\x6e\xb6\x5b\x48\x02\xc6\xca\xbb\x88\xff\x18\xdc\xb0\x12\x27\x4e\xbe\x73\xce\xb7\xfe\x18\xe5\x95\xbd\xef\x4e\x01\xd7\xc1\xd7\x55\x4c\x25\x07\x76\xb9\x93\x7d\xce\x0e\x8f\xc5\xfd\xbf\xff\x02\x00\x00\xff\xff\x80\x9a\x21\x7d\xc5\x0b\x00\x00")

func templateHttpUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpUpdateTmpl,
		"template/http/update.tmpl",
	)
}

func templateHttpUpdateTmpl() (*asset, error) {
	bytes, err := templateHttpUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/update.tmpl", size: 3013, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/http/create.tmpl":    templateHttpCreateTmpl,
	"template/http/delete.tmpl":    templateHttpDeleteTmpl,
	"template/http/handler.tmpl":   templateHttpHandlerTmpl,
	"template/http/helpers.tmpl":   templateHttpHelpersTmpl,
	"template/http/import.tmpl":    templateHttpImportTmpl,
	"template/http/list.tmpl":      templateHttpListTmpl,
	"template/http/read.tmpl":      templateHttpReadTmpl,
	"template/http/relations.tmpl": templateHttpRelationsTmpl,
	"template/http/request.tmpl":   templateHttpRequestTmpl,
	"template/http/response.tmpl":  templateHttpResponseTmpl,
	"template/http/update.tmpl":    templateHttpUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"http": &bintree{nil, map[string]*bintree{
			"create.tmpl":    &bintree{templateHttpCreateTmpl, map[string]*bintree{}},
			"delete.tmpl":    &bintree{templateHttpDeleteTmpl, map[string]*bintree{}},
			"handler.tmpl":   &bintree{templateHttpHandlerTmpl, map[string]*bintree{}},
			"helpers.tmpl":   &bintree{templateHttpHelpersTmpl, map[string]*bintree{}},
			"import.tmpl":    &bintree{templateHttpImportTmpl, map[string]*bintree{}},
			"list.tmpl":      &bintree{templateHttpListTmpl, map[string]*bintree{}},
			"read.tmpl":      &bintree{templateHttpReadTmpl, map[string]*bintree{}},
			"relations.tmpl": &bintree{templateHttpRelationsTmpl, map[string]*bintree{}},
			"request.tmpl":   &bintree{templateHttpRequestTmpl, map[string]*bintree{}},
			"response.tmpl":  &bintree{templateHttpResponseTmpl, map[string]*bintree{}},
			"update.tmpl":    &bintree{templateHttpUpdateTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
