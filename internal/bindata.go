// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// template/http/create.tmpl
// template/http/delete.tmpl
// template/http/handler.tmpl
// template/http/helpers.tmpl
// template/http/import.tmpl
// template/http/list.tmpl
// template/http/read.tmpl
// template/http/relations.tmpl
// template/http/request.tmpl
// template/http/response.tmpl
// template/http/update.tmpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateHttpCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x6f\x6f\xdb\xc6\x0f\x7e\xfd\xcb\xa7\xe0\xef\xe0\x0e\x52\x10\x9f\x8b\xa1\x7b\x53\xa0\xc0\x8a\x24\x4d\x33\x74\x69\x16\x67\xeb\x8b\x76\x2f\xce\x3a\x4a\xbe\x46\xbe\x53\x78\x54\x9c\x4c\xf3\x77\x1f\x4e\x92\xff\x48\x56\xd2\x44\x40\x00\xc5\xc7\x7b\xc8\x87\x7c\x48\xaa\xaa\x26\x87\x90\x39\x7e\x28\xf0\x2d\xa0\xe5\xcc\x49\xe3\x26\x68\x39\xfc\x25\x93\x0c\xad\x3c\x23\x55\xcc\xe1\x70\xb2\x5a\x1d\x1c\x54\x15\x68\x4c\x8d\x45\x10\x73\xe6\x62\x92\x10\x2a\x46\x01\xab\xd5\x01\x00\x40\x55\x8d\x61\x69\x78\x0e\x78\xcf\x68\x35\x8c\x40\x5c\xaa\xe4\x46\x65\x28\x9a\x0b\x02\xc6\xad\x69\x63\x0e\x8c\x8b\x22\x57\x1c\xf0\x50\x69\x24\x01\x72\x0b\x06\x01\x63\xfb\xdf\xae\x6d\x5e\x20\x4d\xea\x10\xcc\xa2\x70\xc4\x02\x46\xc1\x72\x6d\x3a\x2a\x6e\x32\x78\xfb\x0e\x66\xca\x23\x8c\xe4\xb1\xb3\xa9\xc9\x64\x1b\xcb\x0e\x24\x29\x9b\x21\x8c\x6c\xb0\x1d\xc9\x0b\xa7\xd1\xc3\x4e\x80\x93\x09\xfc\x3a\x2d\x17\x0b\x45\x0f\x70\x5c\x53\x05\x55\xc3\x5b\x79\xa1\x16\xd8\x37\x3d\x41\x9f\x90\x29\xd8\x38\x0b\xc9\x8f\xcd\xcf\x4f\xd6\xa0\x16\x97\x4f\xd8\x5d\xab\xcc\xc3\xd7\xce\xf9\xdf\x1d\x83\xf7\x49\x82\x05\x03\x7c\xf7\xce\x76\x0e\x2e\xc9\xe9\x32\xc1\x81\x93\x69\x99\x24\xe8\x3d\xfc\xfc\xfa\x35\x54\x6e\xf6\x1d\x13\x5e\x6d\x12\xb7\x5a\xc9\xc7\xa3\xf9\xa0\x4c\x5e\x12\xc2\x9b\xdd\x9b\x0b\x65\xac\xfc\x78\x7d\x7d\x79\x4a\xe4\xe8\x11\xfb\x37\x2f\xb2\xff\xe5\x99\xf8\x57\xae\x64\x24\x98\xec\x44\xfc\x2f\xe4\x6e\x89\x04\xab\x15\x7c\x2d\x9c\xe7\x4e\xb6\xda\x94\x37\xf5\xf1\xa0\x36\xc9\x1f\x62\x0e\xca\x6a\xf0\xec\x08\x3d\x18\x06\x63\x81\xe7\x08\x5a\xb1\x0a\xca\x92\x1b\xdc\xb4\xb4\x09\x44\xf3\x6e\x11\x3f\x2a\xab\x73\xa4\xb8\x75\x19\x25\x70\x98\x9a\x19\x92\x3c\xe6\xfb\x18\x30\x30\x81\x6a\x03\x11\x9e\x3c\xe8\x70\x2e\x73\x97\xc9\x2f\x86\xe7\xd1\x3f\xaa\x90\x53\x26\x63\xb3\x48\x2c\x90\xe7\x4e\x8b\x23\x10\x0d\x9c\x88\xe3\xce\xdd\xc9\x04\xce\x90\xeb\xf8\x02\xe7\x3a\x48\xd9\xb1\xd0\x01\xdd\xe2\x32\xea\x44\xd9\xa0\x5d\xe1\x6d\x89\x9e\xbb\x90\x77\x8a\x80\x20\x74\x99\x6c\xcf\x0f\xfe\xb7\x61\xac\x3c\x87\x13\xa5\x55\xc1\x8e\x42\x8b\xdd\x21\x71\x6b\x17\x25\xe1\x07\xc6\x7b\x8e\xe2\x23\xf8\x89\x8e\x80\xa9\xc4\x2e\x7a\x18\x16\xc3\x2d\xad\x31\x71\x1a\xc7\xca\xea\xf1\x9d\xca\x8d\x56\x8c\x63\x6a\x80\x45\x68\xd6\xf1\xba\xd3\x77\xb8\x4f\xd5\x1d\x6e\x8a\xd3\xe5\x3d\x6b\xb2\x9a\xe4\x06\x2d\x77\xeb\x2b\xdb\xd2\xf4\x23\x5b\x0f\x86\xb4\x1e\x0c\x56\x7e\x30\x98\x6b\xdf\x19\x5e\xeb\xc7\xa4\xa0\x6b\xd0\x34\x94\xaa\x4c\xb8\xb6\x0d\xda\xf9\xff\x3b\xb0\x26\xef\x95\x78\x13\x94\x9c\x22\x0f\x5d\x8b\x0e\x87\xe1\xe2\x3d\x98\x55\x3f\xe8\x30\x2e\xfb\x21\x6e\xb9\x60\xcb\xe5\x54\x67\xf8\x03\x2a\xf8\x22\x2a\xa1\x90\x26\x0d\xb7\xfe\xb4\xe6\xb6\xec\x4c\x8c\x7d\xda\x0d\xfe\xef\x25\xab\x30\x27\xa7\xc8\x3b\x9c\xfb\x7e\xf7\x39\xaf\xfd\x61\xee\x5f\xe4\xe7\xbd\xae\x73\x3b\xec\x46\x4a\xf9\x84\xa7\xed\x0e\xda\x7d\x9e\x95\x7c\x3c\x0a\x6d\x5e\x2f\x22\x19\x04\x1a\xd1\xb6\x2d\xe2\x83\x67\x76\x43\x3d\x28\xc6\xf3\x30\x4c\x8c\xcd\x04\x68\x93\x30\x88\x13\x4c\x55\x99\xb3\x80\xa8\x20\x63\x19\x44\xe2\xca\x5c\x83\x75\xbc\x5e\x3d\x02\xa2\xed\x40\xbc\xc1\x99\x9a\xc5\xf1\x60\xeb\x5c\x61\xee\x94\x0e\xdb\x9f\x1e\xba\x9d\x73\xfb\x44\xe7\xfc\x51\x22\x3d\x44\xb1\xfc\x32\x47\xc2\x68\x70\xfa\xca\xf3\x93\x08\xdb\x6b\xe7\x27\xfd\xda\x0e\x24\xa0\xf9\x76\x08\xfa\xbc\x76\x9f\x42\x4c\x23\x0b\xa2\xf7\x8d\xd1\x0b\xfe\x54\x65\x48\xd0\x10\xa8\x85\xcd\x73\xc5\xa0\x08\x21\x4c\x0c\x43\xa8\x61\xbb\x8d\x5d\x81\x54\xcb\x41\xee\x41\xdd\x56\x15\xc8\x53\xcb\x35\xad\xbe\xaf\x47\x74\xd0\x96\xf7\x1d\xdc\xca\xcf\x36\x7f\x78\xba\xba\x7b\x1e\x9f\x5f\xed\xbd\xab\xa2\x5e\x83\x5e\x40\x94\x1b\xcf\x20\xac\xe3\x71\xea\x4a\xab\x45\xf3\xee\x8d\xcd\xca\x5c\x91\xd8\x97\xb5\xf8\xe4\xb2\xcd\xc5\x46\x3b\x29\x88\xb0\x68\xce\x2d\x47\xdf\xc4\x2b\xff\x4d\x1c\x01\xca\x57\x3e\x16\x6d\xdd\xea\xaa\xee\x95\x30\x1e\xc0\x7e\x42\x94\x84\x4a\x0f\x4b\x52\x80\x4a\xc3\x06\x2f\x8b\x30\xe8\x45\x07\x75\x4f\xae\xb9\x3c\xb7\xa9\x8b\x44\x47\x6f\x35\x52\x18\x53\x84\x56\x23\x61\xd8\x92\x6b\x46\x62\x23\xbf\x56\xb8\x35\xbb\xc7\x35\xb9\xeb\x8c\x90\x4b\xb2\x90\xc8\xdf\xa6\x9f\x2f\xa2\x0b\x5c\x56\x15\x44\x84\xbe\x70\xd6\xe3\x5f\x06\x97\x41\x9f\x23\x2b\xdf\x5b\xeb\x9a\x31\xe3\xe5\x69\x7e\xd3\x2e\x95\x33\x72\x65\xe1\x63\x19\x0c\x5b\xdf\x11\xee\x78\xe8\x7f\xe5\x6e\xde\xfe\x0b\x00\x00\xff\xff\xe3\xce\xcd\x3d\x94\x0b\x00\x00")

func templateHttpCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpCreateTmpl,
		"template/http/create.tmpl",
	)
}

func templateHttpCreateTmpl() (*asset, error) {
	bytes, err := templateHttpCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/create.tmpl", size: 2964, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x61\x6f\xdb\x36\x10\xfd\x3c\xff\x8a\x07\xc2\x1b\xa4\x20\xa6\x8a\xa1\xfb\x52\x60\xc0\x86\xba\x6b\x0c\x0c\x5d\xd0\x04\xd8\x87\x76\x1f\x68\xf2\x24\xb1\x91\x48\x8d\x3a\xa5\xc9\x34\xfd\xf7\x81\x96\xa2\x58\xa9\x03\x64\x04\x0c\x98\xe6\xbb\xc7\x77\x77\xef\xe8\xbe\xcf\xce\x50\x78\xbe\x6f\xe8\x0d\xc8\x71\xe1\xa5\xf5\x19\x39\x8e\x1f\x9d\x15\xe4\xe4\xfb\xa0\x9a\x12\x67\xd9\x30\xac\x56\x7d\x0f\x43\xb9\x75\x04\x51\x32\x37\x99\xa1\x8a\x98\x04\x86\x61\x05\x00\x7d\xbf\xc1\x57\xcb\x25\xe8\x8e\xc9\x19\xac\x21\x2e\x95\xbe\x51\x05\x89\x31\x40\x60\x33\x41\x47\x38\x98\xea\xa6\x52\x1c\xf9\x48\x19\x0a\x02\xf2\x91\x0c\x91\xe3\x71\x77\x8c\xad\x1a\x0a\xd9\x41\x82\xad\x1b\x1f\x58\x60\x1d\x91\x0f\xd0\x75\x73\x53\xe0\xcd\xcf\xd8\xab\x96\xb0\x96\x6f\xbd\xcb\x6d\x21\x27\x2d\x47\x94\x41\xb9\x82\xb0\x76\x11\xbb\x96\x1f\xbc\xa1\x16\x47\x02\xb3\x0c\xbf\x5c\x75\x75\xad\xc2\x3d\xb6\x87\x54\xa1\x0e\xf4\x4e\x7e\x50\x35\x3d\x85\x6e\xa9\xd5\xc1\x36\x6c\xbd\x7b\x09\x7c\xb7\x7d\x09\xea\x5a\x15\x2d\x3e\x2d\xce\xff\x5a\x00\x7e\xd5\x9a\x1a\x06\xbe\xb4\xde\x2d\x0e\x2e\x83\x37\x9d\xa6\x53\x27\x2a\xa8\x1a\xd6\xa0\x51\x5c\xc2\x3a\x06\x87\x8e\x20\x16\xb7\x60\xb7\x15\x4f\x2a\xa1\x35\xb5\x2d\x7e\x7c\xf5\x0a\xbd\xdf\x7f\x21\xcd\xc3\x5c\xec\x61\x90\xcf\xe7\xf0\x9b\xb2\x55\x17\x08\xaf\x8f\x23\x6b\x65\x9d\xbc\xb8\xbe\xbe\x7c\x17\x82\x0f\xcf\xe0\x5f\xff\x2f\xfc\x4f\x2f\xe4\xff\xe8\x3b\xa6\x80\xec\x48\xf1\xbf\xa8\xfc\x57\x0a\x18\x86\xac\xb7\x66\xc0\xa7\xd1\xda\x8b\x52\x4f\xdd\x0a\x54\xfb\x5b\x6a\xa7\xae\x9d\x4a\x1e\x79\xf0\x35\xb8\x24\x18\xc5\x2a\x9a\x50\xce\x3c\x79\xe7\x34\x92\x72\xd9\xf1\x0b\xe5\x4c\x45\x21\x9d\xae\x48\x34\xce\x72\xbb\xa7\x20\xdf\xf2\x5d\x0a\x8a\x09\xa0\x9f\x29\xe2\xaa\xa2\x65\x4b\x59\xf9\x42\xfe\x69\xb9\x4c\xfe\x51\x8d\xbc\xe2\x60\x5d\x91\x88\x9a\xb8\xf4\x46\x9c\x43\x8c\x74\x22\x4d\x17\xb1\x71\x4c\x9f\x19\x26\xb3\x89\xd2\x37\x5d\xa8\x44\x1c\x8b\xe3\x69\x8d\xeb\x56\x05\x04\x44\xa8\xfc\x48\x7f\x77\xd4\xf2\xea\xbb\x39\x31\xd5\x72\x3c\x51\x46\x35\xec\x43\x1c\xba\x5b\x0a\x3c\xe1\x12\x1d\x7f\x60\xba\xe3\x24\x3d\xc7\x0f\xe1\xfc\x60\xb9\xa5\x2e\x0a\x01\x31\x29\x5d\x59\x72\xbc\x2c\xa9\x1c\x53\xf9\xc3\xd1\x6e\x9b\xf4\x3d\x6c\x1e\x0f\x77\x5b\x79\xa1\xda\xf7\xfe\xfa\xbe\x89\xa0\x31\x62\xb7\x95\xd3\x3e\xb1\x26\x8d\xcf\x48\xd5\xc6\x9d\x35\xf3\x93\x92\xca\x77\x77\xa4\x93\xf0\xa8\x29\x5d\x3d\x2d\xd1\x62\x1f\xd7\xe9\x92\x1d\x9a\xb3\x29\x63\x03\xad\x2b\x04\x8c\xd5\xfc\x4d\xa8\x38\x78\xb0\x15\x48\x2a\xdb\x32\x84\xf3\xbc\xc9\x7d\xe7\x8c\x48\xbf\xc5\xfe\xee\x8b\x19\x99\x34\xc1\x3a\xce\x21\x62\x7f\x77\x8e\x93\xcf\xe2\xfb\xf6\xb3\x38\x87\x35\xa9\x98\x92\x8d\x15\x4a\x4f\xf0\x6c\x29\x57\x5d\xc5\x62\x22\x81\xd0\xbe\xab\x0c\x9c\x67\x8c\xe6\x86\x38\xb2\xff\x0d\xed\xd5\x7e\xc9\xb2\x79\x78\x51\x67\xd3\xc9\x9d\xcb\x7d\x22\x16\x73\x73\x08\x8c\xa6\x1f\x49\xa3\xef\x1e\xc4\x8a\xb9\x21\x53\x17\x47\xe1\xcb\x5b\x02\x71\x17\x1c\xb4\xbc\x22\x67\x1e\x2c\x3c\x8d\x5a\x3b\x3e\x39\x79\x57\x55\xf7\x47\xa5\x7a\xfa\x07\x31\x7f\xfb\x2f\x00\x00\xff\xff\x42\xd1\x4f\x6d\xcf\x06\x00\x00")

func templateHttpDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpDeleteTmpl,
		"template/http/delete.tmpl",
	)
}

func templateHttpDeleteTmpl() (*asset, error) {
	bytes, err := templateHttpDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/delete.tmpl", size: 1743, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHandlerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xc1\x6e\xe3\x36\x10\xbd\xfb\x2b\x5e\x05\x63\x21\x05\x0e\x95\x6d\x6f\x46\x7c\x69\x9a\x6e\x0f\xdb\x20\x48\x5b\xf4\xb0\xd8\x03\x23\x8d\x25\xc2\x32\x29\x90\x54\xb2\x5d\x45\xff\x5e\x90\xa2\x65\xc9\x91\xb3\xc8\x21\xb0\xa8\x79\xf3\x66\xf8\x66\xfc\xe2\xb6\x4d\x2f\x50\x28\xfb\x5f\x4d\x6b\x90\xb4\x85\x62\x42\xa5\x24\xad\xfb\xcb\xd2\x82\x24\xfb\xa4\x79\x5d\xe2\x22\xed\xba\xc5\xa2\x6d\x91\xd3\x56\x48\x42\x54\x5a\x5b\xa7\x25\x97\x79\x45\x3a\x42\xd7\x2d\x00\xa0\x6d\x2f\xf1\x2c\x6c\x09\xfa\x66\x49\xe6\x58\x22\xba\xe7\xd9\x8e\x17\x14\xf5\x19\x11\x2e\x03\xb4\x87\xc3\xd2\xbe\xae\xb8\x75\x84\xc4\x73\x47\xc5\x8e\x64\x70\x1c\xc7\xd3\x18\x5b\xd5\xa4\x53\xdf\x83\xd8\xd7\x4a\xdb\x08\x4b\x87\xf4\xd0\x34\x45\x68\x0c\x25\x37\x30\x6a\x4f\xc8\x94\x7c\x22\x29\x48\x66\x84\x3d\xd9\x52\xe5\x06\x8d\xa1\x1c\x4a\x42\xaa\x9c\x2e\x43\x86\x61\x9e\xc2\x09\x32\x90\x18\xab\x9b\xcc\xa2\x3d\xd2\xff\x2a\xec\x9e\x9b\x1d\xac\x72\xc4\x5b\x51\x34\x9a\xf0\x5c\x8a\xac\x84\x56\x8d\x25\xe3\x22\x9a\x0a\x61\x2c\xe9\x11\xe3\x43\x1f\x6c\x84\xb4\xbf\xfc\xdc\xb3\x6d\x1b\x99\x21\xd6\x26\xc4\x12\xd7\x72\xac\x87\xd3\xa3\x52\x15\x5a\x68\xb2\x8d\x96\xd0\xe6\x83\xc6\x4f\x1b\x5c\x21\xf4\xd2\xb6\x58\xd6\xbb\x02\xeb\x0d\x1e\xb9\x21\x2c\xd9\x8d\xef\x87\x05\xd9\x47\xea\x69\x2e\x0b\xc2\x52\x3a\xec\x92\xdd\xa9\x9c\x0c\x46\xb3\xc8\x94\x34\x16\xf1\x70\x3e\xb0\x4b\x76\xc7\xf7\x8e\xe7\x46\x93\xd3\x3e\x5c\x61\x83\x8f\xb8\xbe\x86\x50\x96\x9f\x4f\x79\x20\x9e\x9f\x8f\xfe\x53\xe7\xdc\xd2\xf9\xf8\x6f\x54\xd1\x5b\xf1\xcf\xc2\xd8\xd3\x68\xb8\x24\xf9\x4b\x4a\x76\x9b\x17\x64\x26\x2b\x37\xcb\xe4\x0e\xd4\x1f\x5e\x50\x73\x93\xf1\x0a\x27\x39\x61\x19\x4f\xa9\xa6\xd7\x1d\xa4\xb9\xbe\x76\xc2\xe0\x12\x1f\x07\x74\xb2\x18\x1e\xd3\x74\x9a\xf7\xc7\xb0\xac\xee\xd3\xc0\xad\x35\x32\xdd\xe4\x50\x35\x69\x6e\x85\x92\xc6\xed\xe9\x61\xd8\x5d\xc7\x26\xf9\x6c\x60\xf6\x4b\x36\xcb\x7d\xd8\xe1\x49\xf7\x61\xc1\x17\x93\x97\x59\x25\x48\x5a\xf7\x74\x41\xd2\xb2\x1b\x7f\x9c\x20\x2a\x55\x84\xa7\x8b\xef\xbc\x66\x9f\x55\x51\x90\x1e\x10\xdd\x91\xce\xef\xf6\x1d\x3d\xcf\x75\x14\x67\x63\xfe\x15\xaa\x31\x59\x82\x8b\xd9\x5b\x4c\xdb\x0f\x5f\x8a\x0f\x73\xd0\xf6\xd5\xc4\xfb\x7b\xad\x91\xad\x5e\x85\x2a\x55\xac\xfd\x27\xfb\x57\xd8\x32\x76\x7d\xfc\x65\xb5\x90\x45\x1c\x1d\x1c\x6e\x85\x68\xae\x4c\x94\x24\x53\xba\x6e\x4e\x87\x34\xc5\x43\x30\x83\x90\x67\x06\x77\x30\xb0\x25\xa1\x20\xe9\x26\x4d\xf9\x61\x26\x7e\xe0\x3e\x22\x9e\x48\x22\x2b\x45\xef\x2c\x9a\x4d\xd5\x8d\xcb\x79\xa9\x12\xfc\xa9\x1a\x69\x63\x8d\xad\x78\x24\xcd\xfc\x6e\xea\x15\x46\x46\x33\x95\x48\x6c\xa1\x0d\x73\xe6\x33\xf3\xad\x3f\x05\x7b\xf5\xd9\xbd\x32\x36\x8e\xd2\x68\x85\x92\x05\xdc\x19\x2d\xde\x28\xe0\x3c\x62\x9e\xfe\x13\x39\xf6\xb5\xc8\x7d\x01\x8f\x7b\x3f\x7d\x6f\x32\x67\xfa\xe7\x36\x2b\x47\x25\x02\xf6\xfd\x45\x7a\xa7\x9a\x2f\xd2\xc7\x46\x55\x02\xf8\xfd\x55\x9c\xdf\xbd\xa5\x94\x67\xf7\xa0\x37\xb8\xdf\xe3\x91\x67\xfa\x98\x77\xcb\xb9\xce\x30\x9d\x63\x3a\xca\xec\x3a\xdf\xee\x19\xae\x57\x4c\x3f\x34\xe3\xd3\x9f\x0c\xc7\xff\xad\xc6\x6a\x51\xdf\x4a\x7b\xab\xb5\xd2\x31\x69\x0d\x72\x4f\x89\x0f\xc8\x62\xd4\x76\xf0\x93\xfe\xbd\x61\x7f\x6b\xb1\xbf\xd7\xb4\x15\xdf\x5c\x16\xeb\xf3\x93\x15\x22\x6f\x23\x51\xdf\xe4\xb8\xd2\x77\x5e\xff\x2e\xa8\xca\x8d\xc3\x1b\xec\x79\xfd\xa5\xe7\xfa\xda\x7f\x24\xf8\xf2\xd5\x79\x8b\x07\x8d\xea\x8a\x2d\x7c\xc2\x66\x03\x29\x2a\xbc\xbc\xa0\x22\xe9\x39\x12\xf7\xee\x6a\xde\xf6\xa4\xa8\x16\xaf\xe5\xd1\x6e\xaa\x7b\xbe\xa3\x78\x54\x6b\x85\xab\xa3\xa4\x5b\xa5\xb1\x5b\xe1\xc9\x01\xfb\x55\xf0\xc5\x4f\x6a\x60\x03\x5e\xd7\x24\xf3\x58\xaf\x30\x32\x44\x97\x99\x24\x73\x85\xc3\x2f\x94\xa0\xca\x30\x89\xff\x03\x00\x00\xff\xff\x72\xed\xb6\xdb\x62\x0a\x00\x00")

func templateHttpHandlerTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHandlerTmpl,
		"template/http/handler.tmpl",
	)
}

func templateHttpHandlerTmpl() (*asset, error) {
	bytes, err := templateHttpHandlerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/handler.tmpl", size: 2658, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHelpersTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x61\x6f\xdb\x36\x10\xfd\x3c\xff\x8a\x9b\x60\xa0\x52\x10\x53\x29\xd6\x4f\x2e\x32\xa0\x5d\x52\xc0\x43\x90\x78\xf5\xb6\x2f\x45\x81\x32\xe2\x49\xe6\x22\x51\xca\x91\xca\x96\xaa\xfa\xef\x03\x29\xd9\x96\x64\xb9\x69\x92\x6e\x02\x5a\xc7\xe2\xe9\x78\xf7\x9e\xde\x3b\xba\xaa\x40\x60\x2c\x15\x82\xb7\xc6\xb4\x40\x0a\xd7\xc6\x14\xa1\xc0\x28\x17\x38\xe3\x4a\xcc\xee\x78\x2a\x05\x37\x38\x23\xbc\x2d\x51\x1b\x0f\x66\x75\x3d\x01\x00\xa8\xaa\xf0\x08\x92\xdc\xdc\x17\x38\x07\x54\x26\xc9\x99\xcc\x43\x54\xc6\xfe\x8b\xc2\x04\x15\xfb\xfd\xbe\x40\x38\x0a\xdb\x07\xdc\x7f\x32\x06\x24\x82\xf9\x29\x44\xec\x6d\x2e\xee\x97\x9c\x34\x92\x2f\x82\xd7\xee\xfe\x8f\xa7\xa0\x64\x0a\x95\x8b\xb5\x57\xca\xce\x89\x72\xf2\x3d\xb4\x1f\xe0\x2a\x93\x2a\x81\xbf\x74\xae\xbc\x63\xf8\xcc\x8b\x36\x00\x89\x82\x60\xfb\x18\xa1\x29\x49\x41\xc4\x56\x86\x9b\x52\xfb\xaf\x4e\x4e\x02\xb6\x42\x25\x56\x86\xa4\x4a\x7c\x4f\x2a\xd7\x99\xcb\x03\xda\xdd\xf4\x82\xc9\x0f\x9b\xd6\x6c\x9d\x0a\x51\xe8\x3f\x9b\xfe\x65\xae\x60\xba\x6d\xdd\x5e\x61\x08\xed\x1a\x82\x59\x23\x08\x6e\x38\xdb\xae\x22\x91\xb6\x4d\x66\xfc\x06\xfd\x8c\x17\x1f\x9a\x2d\x3e\x36\x1f\xbb\x3a\xab\x6a\x06\xc4\x55\x82\x30\x8d\x6d\xfc\x94\xbd\x93\x98\x0a\x0d\x9d\x9d\x36\x71\xd3\x68\x8d\xd1\xcd\x7b\xbc\x2d\x25\xa1\xb0\xd1\x5c\x09\xf0\x55\x6e\x60\x1a\xb3\xab\xc2\x16\xc9\xd3\x00\x7c\x65\xb3\xb1\x4b\x9e\x21\x4c\xd9\xe2\xcc\xfd\x15\x8c\x65\x94\xf1\x30\xe9\x20\xa8\x65\x4c\xb0\xaa\xb2\x29\x57\x86\xca\xc8\xb8\x0a\xa1\xae\xe1\x74\x48\x56\xf7\xb2\x08\x7c\xf0\x9a\xe7\x5c\x29\x75\xed\x7d\x84\x53\xf8\x94\x49\xad\x2d\x83\xb4\xd9\x33\xb6\xf9\xe6\x30\x88\xfd\xb4\x97\x75\xbf\x7e\x54\x7b\x15\xb7\x6d\xe5\x64\x73\xb5\x04\xe5\xa4\xed\xb7\x85\x3e\x57\x65\x36\xd6\xe2\x38\x16\xb3\x91\x48\xd7\x59\xaa\x71\xb8\xe0\xaa\x49\x35\x8e\x65\xff\x3a\x88\x7b\x6f\xfc\x03\x0d\x76\x32\xb6\x42\xb2\x69\xd9\x92\x47\x37\x3c\xb1\xfb\xb7\xdb\x6c\x7b\x87\xba\xf6\xab\x6a\x1a\xb3\xb7\x5c\xcb\xc8\x49\xd2\x2f\x48\x2a\x03\xde\x91\x60\xde\xa0\x24\xfb\x9e\x1c\xd2\xe2\x1e\x10\x07\x28\x46\xa2\x56\x94\xc1\xe8\xb3\x23\x0d\xb5\x0c\xb8\x77\xb9\xc7\x42\x5d\xd7\x55\x75\x88\xe8\xc1\xed\x03\xb7\x5a\x7d\x61\xa3\xaf\x73\x91\xe0\xa8\xbc\x36\xdb\xe3\x56\x4a\x5f\x55\x03\x3e\x51\x0d\xf8\x80\x1a\x50\x24\x08\x83\xc8\x27\x68\x61\xe4\x96\x8c\x21\x45\x65\x8d\x52\x07\xf0\x33\x9c\x0c\x4a\x4d\xd9\x42\xc5\xb9\xef\xdd\xed\x1c\x2f\xe6\x32\x45\xd1\xd8\x6c\xe3\x4b\xcd\xd3\x8c\xb1\x3e\xb3\xa3\x76\xfb\xeb\xea\xea\xb2\x89\xef\xc5\x4e\xfa\x3d\xb4\xec\x5a\xb1\xed\x88\x9e\x1c\x18\x4c\x52\xcc\x62\xca\xb3\x59\x49\xa9\xb7\x69\x2d\x0c\x61\x71\x06\x52\xc3\x1f\xef\x2f\xa0\xe0\xc4\x33\x34\x48\x6c\xd2\xe1\xd5\xb9\xe0\x42\x2f\x94\xe9\xe1\x21\x8e\x37\x12\xd2\x86\xa2\x5c\xdd\xb1\x37\x26\x97\x7e\xc4\x96\x36\x8b\xf6\x3d\x29\xbc\xce\x4c\x69\x15\x37\x2a\x8b\xc1\x98\x4a\xd0\x18\xcb\xaa\x14\x60\xeb\x85\x92\xd2\x5d\x69\xed\xd8\xda\x4e\x22\x0b\xf0\x60\xcf\xc3\x83\xed\x20\xda\xbd\xe1\x26\x20\x2b\xb5\x81\x6b\x04\xae\x40\x2a\x83\x09\x12\x24\x84\xdc\x20\xc1\x67\xa4\xdc\x0b\x46\x68\x18\xf8\x97\x14\xcd\x98\xee\x56\xf6\x78\xca\x1c\x20\xb3\x35\x57\x22\xb5\x33\x76\xb3\xc1\x21\x30\xf5\xdf\xd2\x44\xeb\xce\x8d\xae\x82\x1b\xb2\xa6\x0d\x30\x87\x44\x8c\xb7\x4d\xa4\xa7\x72\x33\x8b\xf3\x52\x09\x6f\x4c\xc8\x11\xd7\x68\x8f\x2d\x6c\xa1\x2f\x73\xf3\xce\xc6\x39\xa8\xe7\xa3\xfa\xcd\x74\xd2\xbe\x27\xb2\x38\x57\x66\xc7\xcc\x68\x74\x2b\xa5\x4c\x27\x43\x22\xab\x6a\xd3\x0c\xbb\xc8\x13\xdb\xc2\xb1\x85\x93\x41\xc7\xe6\xc6\x73\x76\xd8\x7e\xd5\x63\x3b\xd3\x49\xb0\xef\x06\x96\xcb\x21\x18\xd6\x68\xca\x94\xd3\x37\xe0\xb1\x6a\x43\xbf\x23\x24\x4d\xc0\x7f\x85\xc9\xc9\x13\x30\x29\x48\xde\xf1\xe8\x7e\x14\x8e\x30\x84\x65\xb3\xec\x90\x79\x82\xdd\x0a\x8c\x79\x99\x9a\xf9\xb8\x4f\xb8\xa1\x7d\xd6\x84\x58\x8b\x7f\x3e\x28\x5b\x30\x62\x79\x8d\xd4\x7e\x59\x28\x83\xa4\x78\xba\x42\xba\x43\x72\xe9\xfb\x56\xe1\x16\xc0\x2d\xec\x79\x02\xec\xbc\x46\xc9\x74\xd2\x2c\x3c\xac\xf8\x82\x27\x52\xb9\x01\xf2\x8c\x1f\x0b\x85\x3d\xcc\xcc\x4f\xe1\xe5\xc6\x2d\x5a\x33\xfa\xad\x44\xba\xf7\x3d\xbb\xec\x05\xaf\x41\x58\x07\xf1\xbc\x8e\x5f\xd8\x95\xc6\xd7\x07\xb6\x2e\xbe\xd5\xc9\x9b\x31\xd8\x18\x79\xc1\xc9\x8d\xe7\x5b\xbb\xed\xce\xc2\xe1\x85\xdd\xe6\xc5\xc0\xc9\x5d\x51\xc7\x20\x9e\x6b\xdf\xae\xf7\xc7\x1a\x78\x6b\xab\x06\x33\xbd\x44\x5a\xb6\xf0\xfd\x74\x32\x8e\x5f\x37\x6e\x1c\xc7\x6e\xc4\xff\x80\x67\x77\xbb\x21\xae\xbd\x62\xbf\x03\xbe\x3d\x90\x9e\x86\x33\xea\xed\xd9\xe1\x96\x5d\xc8\x4c\x1a\xbf\x9b\x35\x60\x57\x71\xac\xd1\xf8\xbe\xe3\x72\x06\x2f\x03\x38\x82\x7e\xc4\x9b\x34\xf5\x89\xfd\x92\x2b\x83\xff\x18\xbf\xed\xe1\x10\x92\x83\xf3\x45\x8c\x26\x5a\x5b\x1c\x9d\x8d\xb8\x63\xe2\x17\xb8\xc1\x6b\x7e\x0d\x5f\xa0\x48\x4b\xe2\x69\x5d\x37\x47\x0f\x71\xfd\x88\x9f\xc9\xcf\xb4\x8e\x8e\x3b\xfc\x1b\x00\x00\xff\xff\x7b\xa1\x8f\xa7\x5a\x10\x00\x00")

func templateHttpHelpersTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHelpersTmpl,
		"template/http/helpers.tmpl",
	)
}

func templateHttpHelpersTmpl() (*asset, error) {
	bytes, err := templateHttpHelpersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/helpers.tmpl", size: 4186, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpImportTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xcf\x6a\xc3\x30\x0c\xc6\xcf\xcb\x53\x08\xd3\xc3\x56\x58\x04\x83\x5d\x0a\x3b\xef\xb6\x77\x50\x13\xc5\xf6\x70\x2c\x63\xab\x81\x60\xf2\xee\x23\xcd\xca\xc2\x68\x0d\x9f\xf1\x67\x7e\xfa\x5b\x2b\x1e\xc1\x8a\xce\x89\x4f\xc0\x51\xad\xb4\x5e\x90\xa3\xae\xea\xd0\x72\x6c\x3f\x33\x25\x07\x47\x5c\x96\xa6\xa9\x15\x7a\x1e\x7c\x64\x30\x8e\x43\xe2\x8c\x4e\x35\xa1\x1f\x93\x64\x35\xb0\x2c\x0d\x00\xc0\x66\xe1\xf9\x6a\xd6\x53\x2b\x64\x8a\x96\xe1\x10\xe1\xf4\x01\x87\xf6\x4b\x7a\x2e\x37\x7c\x47\x29\x8f\x29\x90\x32\x98\x2d\x07\xae\x8d\x15\xb3\xc6\xed\xe0\x5a\x81\x63\xbf\xff\x31\xd6\xab\xbb\x9c\xdb\x4e\x46\xb4\xf2\xda\x39\x8f\xab\xa6\x77\x73\x17\x19\xa9\x14\xe6\xd0\x39\xcc\x1c\x7b\xce\x8f\x28\x1f\xf2\x05\x99\xca\xfc\x5d\x24\xde\x87\xac\x0c\xfe\xcc\x19\xb7\x7b\x7a\x33\xcd\xd3\x7f\x64\xa2\x30\x53\x20\x1c\xa8\xe8\x75\x5d\xb7\x07\xf5\x94\x54\x7e\xab\xbf\x34\x7f\x63\xfd\x04\x00\x00\xff\xff\x22\xc1\xf8\xe5\x96\x01\x00\x00")

func templateHttpImportTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpImportTmpl,
		"template/http/import.tmpl",
	)
}

func templateHttpImportTmpl() (*asset, error) {
	bytes, err := templateHttpImportTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/import.tmpl", size: 406, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpListTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xd1\x6f\xdb\x36\x10\xc6\x9f\x97\xbf\xe2\x83\x60\x0c\x72\x90\x50\xc5\xd0\xbd\x14\x18\xb0\xa2\x4d\xdb\x0c\x45\x96\x25\xc1\xf6\x50\xec\xe1\x2c\x9d\x25\x36\x12\xc9\x1c\x4f\x49\x3c\x55\xff\xfb\x40\xdb\x75\xac\xb4\x01\x52\x02\x06\x6c\xf3\x77\xdf\x7d\xe4\x1d\x6f\x18\x8a\x43\xd4\x5e\x57\x81\x5f\x81\x9d\xd6\xde\x58\x5f\xb0\xd3\xf4\x29\x8b\x9a\x9d\x79\x2f\x14\x1a\x1c\x16\xe3\x78\x70\x30\x0c\xa8\x78\x69\x1d\x23\x6b\x54\x43\xd1\xda\xa8\x19\xc6\xf1\x00\x00\x86\xe1\x18\x77\x56\x1b\xf0\xbd\xb2\xab\x30\x43\x76\x4e\xe5\x35\xd5\x9c\x6d\xf0\x0c\xc7\x5b\x74\x83\x43\xb9\x0b\x2d\x69\x52\x63\xaa\x58\x32\x98\x07\x31\x24\x8d\x87\x5f\xfb\x6c\x1b\x58\x8a\xb5\x01\xdb\x05\x2f\x9a\x61\x96\xc8\xaf\xe8\x2c\x5c\xd7\x78\xf5\x1b\x16\x14\x19\x33\xf3\xc6\xbb\xa5\xad\xcd\xd6\xcb\x9e\xa4\x90\xab\x19\x33\x97\xd8\x99\x39\xf3\x15\x47\xec\x19\x2c\x0a\xfc\x7e\xd9\x77\x1d\xc9\x0a\xef\x58\xcb\x86\xe3\x5a\xdd\x99\x33\xea\xf8\x31\xf9\x96\x63\x29\x36\xa8\xf5\xee\x19\xf4\xe9\xdb\x67\x40\x57\x54\x47\x7c\x9a\xec\xff\x3b\x01\x5e\x97\x25\x07\x05\x3e\x47\xef\x26\x1b\xe7\xe2\xab\xbe\xe4\xef\xec\x5c\xf6\x65\xc9\x31\xe2\x97\x17\x2f\x30\x90\x08\xad\xc6\xdd\x95\x8d\xa3\x79\xda\xcc\x3b\xb2\x6d\x2f\x8c\x97\x29\xd0\x2f\x3e\x73\xa9\x23\x3a\xb2\xce\x7c\xb8\xba\x3a\x3f\x11\xf1\xf2\x04\xff\xf2\x87\xf8\x5f\x9f\xa9\x7f\xe1\x7b\x65\x41\xb1\xe7\xf8\x0b\x5a\x7f\xc7\x82\x71\xc4\xa7\x9a\x75\x72\x57\x17\x4c\x15\x96\xdb\x2b\xd7\x86\x9f\x3c\x34\x6c\xc5\x4e\xed\xd2\x72\x85\xc5\x0a\x84\xda\xde\xb2\x43\x2f\xed\x71\x20\xa1\x8e\x53\xd6\xa5\xf8\x2e\xa9\xec\x67\xa8\x48\x69\xdd\x71\xe4\x2a\x08\x6b\x2f\x2e\xc2\x2a\xd4\xaf\xf3\x95\xad\x65\xa7\x66\x17\xb1\xec\x5d\x89\xbc\xc1\xe1\x24\xfb\x07\x72\x55\xcb\x32\xc7\x47\x1b\x35\x2f\x71\xb8\xb4\x0b\x16\xf3\x46\xef\xe7\xe0\x74\x07\x18\x76\x0a\x69\xb5\xa9\x77\x1b\xd3\xfa\xda\xfc\x63\xb5\xc9\xff\xa3\x60\x2e\x55\xac\xab\xf3\xac\x63\x6d\x7c\x95\x1d\x21\x4b\x62\xd9\x7c\x3e\x89\xbc\xd9\x44\x6e\x6d\x4d\x4c\x98\xbf\x7a\x96\x55\x3e\xe5\x6f\x49\x20\x48\x8f\xce\x5c\xf0\x4d\xcf\x51\x0f\x7e\xda\x9d\x85\xa2\xa6\x1d\xaa\x28\xa8\x97\xf4\xe2\x6e\x59\x74\xcb\xe5\x65\xfa\x43\xf9\x5e\xf3\xf9\x11\x7e\x96\x23\xa8\xf4\x3c\x55\x7f\x98\x1d\x55\xcd\xf1\xca\x7f\xf4\x54\xa5\x97\x99\x4d\x26\xcc\xfe\x2a\x0a\x9c\x50\xcd\x82\x36\xa1\xeb\x30\x68\x43\x0a\x12\x86\xf0\x4d\x6f\x85\x2b\x78\x87\xa4\x00\x1f\x58\x28\xbd\x4d\xf3\x8d\xd0\xcd\x30\xc0\x9c\x38\x5d\x1f\xfa\x71\xa6\xe4\x6b\x6f\x0e\xed\x5f\x06\x8b\x6c\x4a\xf2\x4d\xc0\xf7\x47\x55\xa0\xda\xba\xb5\x87\x2c\x9d\xec\xf8\xeb\xc0\xda\x95\xd2\x9c\xba\xa5\xcf\xb3\x49\x43\x5f\xf3\x82\x16\xf8\x82\xd0\xf6\x42\x6d\x6a\x4f\x61\x57\xb1\x70\xaa\x6b\x2a\xf6\xa9\xd3\x3c\xa3\xce\xf7\x4e\xb3\x23\xb4\xec\x72\x8e\xf3\x47\xa5\xde\x34\x23\x4a\xf3\xc7\xe5\x9f\x67\xf9\x19\xdf\x0d\x03\x72\xe1\x18\xbc\x8b\xfc\xb7\xe5\xbb\xe4\x67\xe6\xcc\x6b\xe7\xbc\xae\x1d\x46\x73\xd2\x5e\x9b\xd4\x36\xef\xc5\xf7\x21\xce\x4d\xc2\xb6\xed\x11\xd7\x29\x76\x19\x1e\xcf\xeb\xdd\xb7\xff\x03\x00\x00\xff\xff\x8a\xb7\x4b\xe3\x5c\x06\x00\x00")

func templateHttpListTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpListTmpl,
		"template/http/list.tmpl",
	)
}

func templateHttpListTmpl() (*asset, error) {
	bytes, err := templateHttpListTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/list.tmpl", size: 1628, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpReadTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x51\x6f\xdb\x36\x10\x7e\x5e\x7e\xc5\x81\xf0\x06\x29\x88\xa9\x62\xe8\x5e\x0a\x0c\x58\x11\x67\x89\x87\x22\xcd\x92\x60\x7d\x68\xf7\x40\x8b\x27\x89\x8d\x4c\xca\xc7\x53\x12\x4f\xf3\x7f\x1f\x4e\x76\x1c\xcb\x4e\xd0\x95\x80\x01\xc9\xfc\xee\xbb\xe3\xc7\xef\x4e\x5d\x97\x1d\x43\x19\x78\xd9\xe0\x3b\x40\xcf\x65\xd0\x2e\x64\xe8\x59\x7e\x79\x56\xa2\xd7\xe7\x64\x9a\x0a\x8e\xb3\xd5\xea\xe8\xa8\xeb\xc0\x62\xe1\x3c\x82\xaa\x98\x9b\x8c\xd0\x58\x05\xab\xd5\x11\x00\x40\xd7\x8d\xe1\xc1\x71\x05\xf8\xc8\xe8\x2d\x8c\x40\x5d\x99\xfc\xce\x94\xa8\xd6\x70\x05\xe3\x0d\x74\x0d\x07\xc6\x79\x53\x1b\x16\x36\x34\x16\x49\x81\x7e\x26\x03\xe1\x78\x7e\xdb\xc5\xd6\x0d\x52\xd6\x17\xe0\xe6\x4d\x20\x56\x30\x12\xe4\x13\x74\xd4\xdc\x95\xf0\xee\x57\x98\x99\x88\x30\xd2\xa7\xc1\x17\xae\xd4\x9b\x5a\x76\x28\xc9\xf8\x12\x61\xe4\x05\x3b\xd2\x97\xc1\x62\x84\x9d\x02\xb3\x0c\x7e\xbb\x69\xe7\x73\x43\x4b\xb8\x46\x63\xc1\xf4\xe4\x5e\x5f\x9a\x39\xee\x03\x27\x18\x73\x72\x0d\xbb\xe0\xbf\x0d\x9e\x4e\xbe\x8d\xb9\x35\x65\x84\xcf\x83\xfd\xbf\x07\x80\xf7\x79\x8e\x0d\x03\x7c\x8d\xc1\x0f\x36\xae\x28\xd8\x36\xc7\x97\x76\x0c\x99\x39\x38\x0b\x8d\xe1\x0a\x9c\x67\x60\x6a\x11\xd4\x20\x0b\x4c\x27\x6a\x4f\x83\x3c\xc7\x18\xe1\xe7\x37\x6f\xa0\x0b\xb3\xaf\x98\xf3\x6a\x2b\xf3\x6a\xa5\x5f\x3f\xc3\xef\xc6\xd5\x2d\x21\xbc\xdd\x8d\x9c\x1b\xe7\xf5\xc5\xed\xed\xd5\x19\x51\xa0\x57\xf0\x6f\xbf\x0b\xff\xcb\xff\xe4\xbf\x0e\x2d\x23\x41\xb6\x53\xf1\xbf\x50\x87\x07\x24\x58\xad\xb2\xce\xd9\x15\x7c\x2e\x91\x07\x3a\xf7\x17\x55\x20\xe7\x15\x46\xe0\x0a\x5f\x3d\x39\x38\x8b\x9e\x5d\xe1\xd0\xc2\x6c\x09\x06\x4a\x77\x8f\x1e\x5a\xaa\xc7\x8d\xe8\x8e\x92\xba\xa0\x30\x17\x96\xdd\x0c\xd6\xb0\xe9\xad\x6a\xbc\x05\x42\x6f\x91\x22\x38\x06\x0e\x7d\xbe\xbc\x76\xe8\x59\x6f\x23\x8a\xd6\xe7\x90\x54\x70\x3c\xc8\x7e\x61\xbc\xad\x91\xd2\xbe\xde\x24\x87\xe3\xc2\xcd\x90\xf4\x29\x3f\xa6\x80\x22\x04\x74\x5b\x06\x59\xb5\x98\xbe\xd2\x75\x28\xf5\x27\xc7\x55\xf2\x8f\x69\xf4\x0d\x93\xf3\x65\xa2\xe6\xc8\x55\xb0\xea\x04\x94\x90\xa9\x34\x1d\x44\x4a\x9b\xbf\xd2\x8c\x76\x2c\xe7\x1b\xb7\x54\x2b\x69\xab\xdd\x6e\x97\x75\x6f\x08\x08\x04\xaa\xaf\x71\xd1\x62\xe4\xa3\x1f\xb6\xa7\x32\x91\x65\xc7\x58\xd3\x70\x20\x69\xda\x7b\x24\xde\xe0\x92\x5c\xfe\x60\x7c\xe4\x24\x3d\x81\x9f\xe8\xa4\x37\xee\xb0\xae\x2c\x83\x53\x42\x29\x4a\x54\x5b\xb4\x48\x4b\x91\xb0\xbf\xba\xed\xc5\x1d\xfa\x54\xd6\x62\x2d\xc6\x46\xe9\x01\x4e\xff\x29\x44\x49\xaa\x3f\x55\x48\x98\xbc\xe8\x1c\x3d\x9d\xc8\x86\x2b\x64\x6f\x3a\xd1\x17\x26\x9e\x87\xdb\x65\x23\xf1\xeb\x80\xe9\x44\x6f\xde\x13\x67\x53\x99\x6d\x75\x94\x37\x67\xb7\x73\x2e\x4d\x8f\x0e\x64\x5e\x4f\x53\x5b\x62\xbc\x0d\x1f\x82\xb1\x22\xaa\x1a\xcc\xdc\x3d\x01\xce\x4c\x89\x04\xb5\x40\xfb\x30\xe0\xca\x30\x18\x42\x20\x5c\xb4\x8e\xd0\x42\xf0\x20\x0c\x10\x1a\x24\x23\xe3\x4a\x1f\x10\x2d\xba\x0e\xf4\x99\xe7\xfe\xe8\xfb\x99\xa4\xae\x9d\xc9\xfc\xb4\xf0\x44\x6c\x26\x3a\x2e\xf4\x47\x5f\x2f\x13\x7a\xbe\xb1\xc3\x93\x1d\xa4\x7c\xd9\x50\xbd\x71\xc7\x95\x58\xdb\xf9\x52\x81\x75\x39\x1f\x84\xaa\xbe\xcf\xa3\x82\xa4\x76\x91\x41\xf9\xc0\xe3\x22\xb4\xde\xaa\xf5\x73\x74\xbe\x6c\x6b\x43\x2a\x3d\x0c\xfd\x10\xca\x6d\x60\xd2\x90\xf3\x5c\x80\x92\x56\x98\x7a\x4e\xbe\xa8\x1f\xe3\x17\x75\x02\xce\xa6\x6a\x73\x89\x72\xf1\xe9\x0b\x3c\x13\x2c\x4c\x5b\xb3\xda\x90\x80\xca\x43\x5b\x5b\xf0\x81\xd7\x62\x2b\x48\x9e\x6d\x73\x87\x33\x33\xdb\x63\x19\x3f\x7d\xbe\x9e\x56\xad\xa7\xbe\x08\x89\x1a\x18\xae\x8f\x94\x51\xb3\x9e\x12\x28\x3d\xfa\x54\xad\xda\x3a\x6d\xe3\xdc\x75\xe5\xc3\x34\x84\xdc\x92\x87\x5c\xff\x71\xf3\xf1\x32\xb9\xc4\x87\xae\x83\x84\x30\x36\xc1\x47\xfc\xcb\xe1\x83\x38\x6c\xe4\xf5\x7b\xef\x03\xf7\xee\x88\xfa\xac\xbe\xd3\x32\x07\xce\x29\xb4\x4d\x4c\xb5\xc0\x36\x29\x92\x5d\x31\xf6\xbf\xdb\xdb\xa7\xff\x02\x00\x00\xff\xff\x85\x95\xeb\x10\x64\x08\x00\x00")

func templateHttpReadTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpReadTmpl,
		"template/http/read.tmpl",
	)
}

func templateHttpReadTmpl() (*asset, error) {
	bytes, err := templateHttpReadTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/read.tmpl", size: 2148, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRelationsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x6f\xaf\xd3\xb6\x17\x7e\xfd\xbb\x9f\xe2\xc8\xea\x6f\x4a\x50\xeb\xa0\x89\xbd\x41\x9a\x34\x44\x2f\xd0\x09\x5d\x18\xdc\x8d\x17\xb0\x17\x6e\x7c\x92\x98\xeb\xda\xa9\x7d\xc2\xa5\x0b\xf9\xee\x93\x93\xb4\xb7\x21\x09\x12\xb0\x2d\x52\xa5\x26\x7e\xce\xe3\xf3\xe7\x39\xc7\xae\xeb\xe4\x1e\xe4\x96\x0e\x25\x3e\x04\x34\x94\x5b\xae\x6c\x82\x86\xc2\x2f\x4d\x72\x34\xfc\xa9\x13\x65\x01\xf7\x92\xa6\xb9\xb8\xa8\x6b\x90\x98\x29\x83\xc0\x0a\xa2\x32\x71\xa8\x05\x29\x6b\x3c\x83\xa6\xb9\x00\x00\xa8\xeb\x15\xdc\x2a\x2a\x00\x3f\x12\x1a\x09\x0b\x60\x2f\x45\x7a\x23\x72\x64\x9d\x0d\x83\x55\x0f\xed\xe0\x40\xb8\x2b\xb5\xa0\x40\x89\x42\xa2\x63\xc0\xef\xc8\x20\x70\xdc\xbd\x9d\x63\x75\x89\x2e\x69\xbd\x50\xbb\xd2\x3a\x62\xb0\x08\xc8\x23\x74\x51\xde\xe4\xf0\xf0\x67\xd8\x0a\x8f\xb0\xe0\x8f\xad\xc9\x54\xce\x7b\x5f\xce\x28\x9d\x30\x39\xc2\xc2\x04\xec\x82\x5f\x59\x89\x1e\x86\x0e\xf6\x08\x6c\x11\x86\x5f\xca\x7c\x08\x09\x4f\x92\xc0\x2f\xaf\xab\xdd\x4e\xb8\x03\x3c\x45\x6a\x1d\x30\xfc\x4a\xec\xc2\x56\x5d\x42\xc2\x27\xec\x3e\x7d\x82\x52\xf8\x54\xe8\xb0\x36\xa2\x59\xa3\x4f\x9d\x2a\x43\x5a\xbf\x97\x6a\xb3\xfe\x5e\x86\x6b\x91\x7b\x78\x3b\x20\xf8\x73\x04\x7a\x94\xa6\x58\x12\xc0\x7b\x6f\xcd\x68\xf1\xa5\xb3\xb2\x4a\x71\x6e\x55\x38\xb1\x03\x25\xa1\x14\x54\x80\x32\x04\xe4\x2a\x04\x36\x74\x79\xb3\x66\x13\xd9\x4e\x53\xf4\x1e\x7e\xbc\x7f\x1f\x6a\xbb\x7d\x8f\x29\x35\xa7\xba\x37\x0d\x1f\x30\x8c\xac\x9f\x08\xa5\x2b\x87\xf0\xe0\xdc\x7a\x27\x94\xe1\xcf\xae\xaf\x5f\x5e\x3a\x67\xdd\x17\x6c\x1e\x7c\xb5\xcd\x4f\x5f\xb1\xcf\x2b\x5b\x11\x3a\x48\xce\x22\xf8\x04\xda\xde\xa2\x83\xa6\x49\x6a\x25\x9b\xe4\xac\x7c\x4d\x03\x6f\x73\xa4\x51\x55\x66\x2a\x9c\x21\xa5\x05\x7a\xa0\x02\x3f\xcf\xd6\x1d\xa1\x20\x12\x69\x81\x12\xc8\x4e\x01\x67\xd3\xaa\x24\x1a\x52\x99\x42\x09\xdb\x03\x08\xc8\xd5\x07\x34\x50\x39\xbd\x2a\x43\x9d\x31\x84\x95\x39\xbb\x6b\x49\xa5\x20\xd1\x36\xa7\x30\x12\x1c\x1a\x89\xce\x83\xa2\xe3\x9e\xa9\x56\x68\x88\x0f\xb6\xc8\x2a\x93\x42\x54\x0c\x05\xfd\x4c\x18\xa9\xd1\xc5\x33\x11\x47\x29\xdc\xcb\xd4\x16\x1d\x7f\x4c\x1f\x63\xc0\x90\x72\xa8\x07\xb4\xe1\xd1\xa1\xbb\x0b\xae\x6d\xce\xdf\x28\x2a\xa2\xbf\x44\xc9\x5f\x93\x53\x26\x8f\xd8\x0e\xa9\xb0\x92\x2d\x3b\x59\x8e\xb7\x60\x71\x3c\xe2\x0b\x73\x70\x66\x5a\xc9\x55\xc8\xc1\xaa\x72\x9a\x85\xb9\xb3\xfa\x2c\x8f\xe1\xf9\x20\x1c\x38\x08\x70\xfe\x0a\xf7\x15\x7a\xba\xf8\xdf\x20\x11\xc2\x53\x58\x15\x52\x94\x64\x5d\x98\x6e\x1f\xd0\x51\x8f\x8d\xd2\xf0\x81\xf0\x23\x45\xf1\x12\x7e\x70\xcb\xb6\xa9\xc6\x3e\x26\x09\x3c\x76\x18\x1c\x0c\x09\xdf\x57\xe8\x0e\x21\xfb\xad\x44\x4e\x75\x3f\x85\x7b\x83\x5b\xb1\x1d\xab\x43\x79\x18\x08\xf5\x08\x1b\xed\xb6\xef\x32\xdc\xd7\x75\x50\x42\xfe\x5b\xd8\x3b\x8a\xf9\x9b\x02\x1d\x46\x93\xc2\xe7\x9b\x75\xa4\x64\x1c\x77\xd8\x99\x5a\x4f\xd7\x41\x65\x01\xfc\xbb\x51\xfb\x6a\xa4\xda\x73\x5c\x77\x6e\x85\xf1\x7e\x6d\x9f\x5b\x21\x83\xd5\xf5\xa1\x44\x60\x0e\x85\x64\x73\xa6\x7d\x2a\x2f\x45\x8e\x0e\x74\xb0\x6b\x39\x80\x0a\x41\x20\x1c\x82\xc3\x7d\xa5\x1c\x4a\xb0\x06\x02\x13\xd8\x12\x5d\x7b\x6e\xf2\x59\xc2\x7d\x5d\x03\xbf\x34\xd4\x46\xfb\x25\xa7\xfb\x03\x72\x72\x1d\x97\x41\xef\x21\xef\x7b\xfe\xc2\xe8\x43\xe4\xee\x84\x11\x4f\x9b\xd4\xf5\x6a\xd6\xa7\x69\x3d\xb7\x1d\xb5\x2a\x42\x17\x2a\x93\x33\x90\x2a\xa5\x59\x0a\xd6\x8e\x3c\xcf\x20\xd2\xca\x13\x30\x63\x69\x95\xd9\xca\x48\xd6\xfd\xf7\xca\xe4\x95\x16\x8e\x8d\x2b\x79\xa2\x78\x6e\xf3\x13\x41\x54\x3a\x65\x28\x03\x16\xfa\x75\x63\x28\x7a\xc7\xfe\xef\xdf\xb1\x25\x28\x19\x87\xee\xe2\x9b\x75\xab\x92\x89\x0e\x3d\xf1\xad\x31\x13\x95\x26\xd6\x93\x01\x4b\x6d\xa5\x25\x18\x4b\x5d\xb5\xd8\xe7\xea\x9e\xe6\x5a\xcd\x55\x41\xf3\x8d\xc9\x6c\xd4\x0f\x8f\x20\xa8\x51\x4b\x75\xe3\x0f\xc3\x8c\x39\x06\xd2\x1f\x81\xbd\xff\x61\xca\x2c\x01\xf9\x19\xc7\x66\x1d\x06\x54\x95\xd2\x13\x85\x3a\x68\x60\x26\x46\x87\x54\x39\x03\x29\xff\xf5\xf5\x8b\xab\xe8\x0a\x6f\xeb\x1a\x22\x87\xbe\xb4\xc6\xe3\x1f\x0a\x6f\x4f\x32\x3f\x32\x3f\x32\xc6\x52\x77\xaf\xe3\x97\xfa\x86\xbf\x42\x21\x9f\x3a\x5b\x95\x3e\xe6\xc1\xa0\x77\x28\x9a\xca\x6a\x2b\x49\xed\xbf\xb1\xcf\x42\x4d\xff\x99\x3e\x6b\xd5\xf1\x5f\xf5\xd9\xfc\xb0\x2f\x45\xae\x4c\xeb\x02\x3b\x45\xf9\xcd\x42\xf9\x04\xa5\xae\x5c\x77\x8e\x4f\x29\x46\xec\x6c\x65\x88\x2d\x41\xa3\x89\xd0\xc7\xff\x9a\x20\x9e\x2b\x4f\x13\x82\xf0\xed\xa6\xd3\x92\xb8\xbb\xc6\x1f\x9f\xc1\x1d\x7b\x78\xcd\xef\xdf\x4e\xff\xfe\x0e\x00\x00\xff\xff\x0d\x57\x3e\xe0\xa6\x0c\x00\x00")

func templateHttpRelationsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRelationsTmpl,
		"template/http/relations.tmpl",
	)
}

func templateHttpRelationsTmpl() (*asset, error) {
	bytes, err := templateHttpRelationsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/relations.tmpl", size: 3238, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRequestTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x4f\x6f\xd4\x30\x10\xc5\xef\xfd\x14\x4f\x56\x0e\xbb\x2b\xea\x70\x5e\x89\x03\xa2\xfc\xa9\x04\xb4\xa2\xe5\x84\x90\xea\x4d\x26\x89\x69\x62\xbb\xf6\x84\x76\x15\xf2\xdd\x91\x93\xdd\x4d\xd8\x16\xa9\x88\x43\xa4\x78\x34\xf3\x3c\xbf\x37\xe3\xae\x43\x4e\x85\x36\x04\x51\x31\xbb\xd4\xd3\x5d\x4b\x81\x05\x4e\xfb\xfe\x04\x00\xba\x2e\x5d\xa1\xb4\xbc\x75\xb4\x06\x19\x2e\xad\xd4\x36\x25\xc3\xf1\xcb\xd2\x92\x8c\x7c\xef\x95\xab\xb0\x4a\x0f\x15\xa7\xb8\xd7\x5c\x81\x1e\x98\x4c\x8e\x04\xe2\x52\x65\xb7\xaa\x24\x31\x5e\x32\x89\x8f\xe9\x60\x6a\x5c\xad\x38\xf6\x40\x2a\x27\x2f\x20\x71\x10\x43\xd4\x98\x4e\xf3\xdc\xda\x91\x4f\x87\xb6\x75\xe3\xac\x67\x81\x24\x66\xee\x53\xbd\x32\x25\x21\x31\x58\xbf\x42\x22\x3f\xdb\x9c\x02\xfe\x7e\xf1\x24\x76\xf0\x60\x0f\x60\x20\x5e\x67\xac\xad\x11\x10\x99\x27\xc5\x24\xfe\x5f\xa8\x75\xf9\x5c\x28\xba\xb6\x23\x9d\x98\x4f\xe6\xe3\x79\x4a\xf8\xf9\x43\xba\xde\x3a\x9a\x66\x94\xa6\xb8\x54\xdb\xda\xaa\x1c\xb6\x80\x8a\x08\x1b\x15\x08\x89\x7c\x63\x4d\xa1\x4b\xb9\x9b\x18\xfa\x5e\x76\x5d\x74\x4f\x35\xf1\x80\xe1\x70\x95\x59\x47\x72\x24\x89\xc1\x5d\x3b\x72\x90\x8e\x4d\x60\x5e\xf3\xb8\xe4\x17\x9c\x0a\x99\xaa\xd1\xf7\x5f\xc6\x52\x04\xf6\x6d\xc6\xe8\x66\xa6\xa6\x2b\x5c\x5f\x9c\x5d\xac\xf1\x41\xfd\xd4\xa6\x84\xaa\x6b\x38\xab\x0d\x93\x0f\xa8\xc8\x13\x02\x51\x13\x60\x2c\xc3\xeb\xb2\x62\x89\x4f\x6a\xbb\x21\x70\xa5\x03\x32\x65\xb0\x21\xe4\xd6\x10\xb4\x81\x32\x96\x2b\xf2\xb8\x57\x5b\x48\x29\x27\x27\xf6\xde\xef\x96\xa5\x18\x97\xe5\x9d\xa6\x3a\xff\x63\x5b\xf6\x79\xba\x80\xf5\x58\x18\x3a\x86\xda\x0f\x74\x89\x45\xec\x28\x29\xe4\x79\xd3\xb4\xac\x36\x35\x2d\x8f\x85\x76\x5b\x93\x14\xf2\x6a\xe0\x1e\xae\x8b\x4e\xae\xc6\xe8\x30\xac\xbe\xc7\xcd\x8f\x60\xcd\x5a\x74\x1d\xb4\xc9\xe9\x01\x8b\xe0\x6a\xcd\x58\xb0\x2a\x3f\x5a\x7b\xdb\xba\x49\xe2\x5a\x95\x10\x31\x5d\x2c\x21\x5e\x88\x25\x5e\xa2\xef\xc5\xcd\xa3\xfe\x67\xaf\x69\x1e\x3a\x7d\xda\x0e\x1a\xed\x78\x9b\x97\xf4\x84\x1b\x48\xe8\x08\x20\x76\x5a\xc4\xf0\x57\xa3\xef\xda\xc8\x10\x89\xa8\x0e\xf1\xf7\xdb\xf7\xc3\x66\x8f\xb5\x11\x53\x9e\x9f\xfd\x0b\x2e\x3d\x13\xf7\x08\x75\xfe\xa8\x7e\x07\x00\x00\xff\xff\xf1\x8b\x38\x6b\xf3\x04\x00\x00")

func templateHttpRequestTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRequestTmpl,
		"template/http/request.tmpl",
	)
}

func templateHttpRequestTmpl() (*asset, error) {
	bytes, err := templateHttpRequestTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/request.tmpl", size: 1267, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpResponseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x8b\xdb\x30\x14\xbc\xe7\x57\x0c\xc6\x14\x3b\x64\xe5\x9e\x03\x39\x95\xb6\x97\x12\x0a\xdd\xee\x65\x59\x58\x6d\xfc\xec\xa8\x71\x24\x57\x92\x93\x16\xe3\xff\x5e\xe4\x6f\x07\x27\x6c\x0f\xbb\x87\x80\x65\xbd\x37\xf3\x66\xde\x38\x65\x89\x98\x12\x21\x09\xde\xde\xda\x3c\xd2\x64\x72\x25\x0d\x79\xb8\xab\xaa\x05\x00\x94\x65\xb4\x44\xaa\xec\xdf\x9c\xd6\x20\x69\x53\xc5\x84\x8a\x48\x5a\xf7\xdb\x45\x29\x49\xf6\x55\xf3\x7c\x8f\x65\xd4\x77\xdc\xe1\x2c\xec\x1e\xf4\xc7\x92\x8c\xe1\xc3\xfb\xce\x77\x07\x9e\x92\xd7\xb0\x0c\xe0\x4d\x39\x2c\x1d\xf3\x8c\x5b\x37\x04\xf1\x98\xb4\x07\x86\x1e\x0c\x0e\x63\x38\x8d\x6b\xb3\x9c\x74\x54\xcf\x2d\x8e\xb9\xd2\xd6\x83\xef\x2a\xfb\x29\x34\x97\x29\xc1\x97\x2b\xf8\x27\xac\x37\xe8\xd4\x3d\x08\x3a\x9b\xa6\xb6\x9b\xc2\xe9\x43\xd0\x1f\x5b\x32\x5f\xa2\xaa\x60\xac\x2e\x76\x16\xe5\xe4\xf6\x82\x23\x71\xf8\xfe\x89\x7d\x11\x94\xc5\x66\x8c\x7c\x09\x99\xb0\x1f\x35\x5e\x5d\xe9\xe0\xcb\x12\x22\x71\xef\xb7\x22\xcb\xf8\x4b\x46\x0f\x3c\x2b\x08\x55\xb5\xec\xc5\x37\x7d\xf7\x6e\xc6\xab\xc8\xad\xe9\x96\xa7\xdf\x94\x3a\x14\xf9\xc0\x74\xcf\x53\x78\xbf\x8c\x92\x9e\xa3\x7b\x76\x4f\x6b\xaf\x2c\x6b\x93\xbd\x9e\xe3\x79\x56\xde\xc8\xfc\x2b\xca\xa9\x55\xfe\x39\x4e\xe9\xa6\x70\xba\x22\x9c\xd8\x4f\x29\x7e\xcf\x28\x26\xe6\x16\xb5\xe5\x47\x6a\x5e\x88\x04\x52\xd9\x49\x83\x99\xe6\xe3\x35\xae\xd0\xdb\xb8\x52\xcd\x66\xc7\xe0\xf1\x69\xd9\x1d\xfa\x8a\x70\xb1\x18\xa3\xf9\xf9\x21\x75\x26\xbe\x70\x43\xf0\xd9\x27\x25\x13\x91\xb2\xf6\x9b\x19\xf7\x25\x85\xdc\x61\x4b\xe7\x0e\x30\x20\xd4\xe0\xae\xbf\xaa\x98\x7b\x3c\xb1\xad\x8a\x89\xb5\xa6\x85\xe8\xc9\x2f\xe2\xab\xc9\x16\x5a\xe2\x43\x77\xfd\x46\xe1\x5e\x83\xd8\xdc\xfb\xd5\x7b\x87\x6d\xdd\xf9\xf6\x5f\xa1\x0a\xa8\x61\x62\x73\x90\xe1\xab\x45\x0c\xa7\x6a\x71\x75\x99\x26\xa0\x3e\x2d\x37\x16\x3a\x24\x6b\xba\x32\x91\x20\x23\x19\x90\x09\xb1\xd9\xe0\xe3\xcc\xbf\x55\xbb\x72\x29\xb2\x1b\xc1\xd5\xce\xe0\x23\x3f\x50\xd0\x13\xad\x3a\xe0\x70\x52\x99\x28\x0d\xb1\x42\xbd\x91\x66\x3b\x74\x39\x53\x0d\xf8\x28\x9e\xb0\x99\xa6\x36\xbc\x35\x40\x33\xa5\x5e\x4c\xaf\x47\xce\x0e\x9f\xfc\xbf\x00\x00\x00\xff\xff\xdb\x60\xe7\xd1\xbe\x06\x00\x00")

func templateHttpResponseTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpResponseTmpl,
		"template/http/response.tmpl",
	)
}

func templateHttpResponseTmpl() (*asset, error) {
	bytes, err := templateHttpResponseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/response.tmpl", size: 1726, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4f\x6f\xdc\xb6\x13\x3d\xff\xfc\x29\xe6\x47\x6c\x0b\xc9\xf0\x72\x83\x22\xbd\x04\x08\xda\x20\xeb\x38\x5b\xa4\x4e\x1a\x3b\xcd\x21\xe9\x81\x2b\x8e\x24\xc6\x14\x29\x93\x23\x3b\xae\xba\xdf\xbd\xa0\x24\x2b\x92\x56\x1b\xd8\xf7\x0a\x30\x60\x89\xc3\xf9\xf3\xe6\xcd\x23\xb7\xae\x57\xc7\x90\x59\xba\x2b\xf1\x19\xa0\xa1\xcc\x72\x65\x57\x68\x28\xfc\x25\xab\x0c\x0d\x3f\x73\xa2\xcc\xe1\x78\xb5\xdb\x1d\x1d\xd5\x35\x48\x4c\x95\x41\x60\x39\x51\xb9\xaa\x4a\x29\x08\x19\xec\x76\x47\x00\x00\x75\xbd\x84\x5b\x45\x39\xe0\x57\x42\x23\x61\x01\xec\x9d\x48\xae\x44\x86\xac\xdd\xc0\x60\xd9\x99\xb6\xe6\x40\x58\x94\x5a\x50\xf0\x87\x42\xa2\x63\xc0\xbf\x39\x83\xe0\xe3\xdb\xdb\xd0\x56\x97\xe8\x56\x4d\x0a\xaa\x28\xad\x23\x06\x8b\x60\x79\x6f\xba\x28\xaf\x32\x78\xf6\x1c\xb6\xc2\x23\x2c\xf8\x4b\x6b\x52\x95\xf1\x2e\x97\x81\x4b\x27\x4c\x86\xb0\x30\xc1\x76\xc1\xcf\xad\x44\x0f\x83\x04\x57\x2b\xf8\xf5\xa2\x2a\x0a\xe1\xee\xe0\x43\x53\x2a\x88\xc6\xbd\xe1\xe7\xa2\xc0\xa9\xe9\x1a\x7d\xe2\x54\x49\xca\x9a\x87\x98\x6f\xd6\x0f\xb1\xba\x14\x99\x87\x4f\xa3\xf5\xbf\x46\x06\x2f\x92\x04\x4b\x02\xf8\xe2\xad\x19\x2d\xbc\x73\x56\x56\x09\xce\xad\x08\x27\x0a\x50\x12\x4a\x41\x39\x28\x43\x40\xae\x42\x60\xa3\x28\xb0\x59\xb3\x09\x12\x49\x82\xde\xc3\x4f\x4f\x9e\x40\x6d\xb7\x5f\x30\xa1\x5d\x0f\xf6\x6e\xc7\x0f\xd7\xf0\x4a\x28\x5d\x39\x84\xa7\xc3\x9d\x85\x50\x86\xbf\xbe\xbc\x7c\x77\xea\x9c\x75\x07\xec\x9f\x3e\xca\xfe\xe7\x07\xfa\x7f\x6f\x2b\x42\x07\xab\x41\xc6\xff\x80\xb6\xb7\xe8\x60\xb7\x5b\xd5\x4a\xee\xe0\x53\x29\x28\xc9\x47\x48\x77\xcd\x6a\x39\xef\x41\x40\xa6\x6e\xd0\x1c\x44\x00\x84\x91\xe0\xc5\x0d\x7a\xa0\x1c\x21\xc9\x03\xd7\x3c\x90\x6d\x5e\xa5\x20\x11\xd8\xc9\xfb\x08\x69\x65\x12\x88\xf2\x31\x15\x5e\x0b\x23\x35\xba\xb8\x0b\x1e\x25\x70\x9c\xaa\x2d\x3a\xfe\x92\xbe\xc6\x80\xa1\x32\xa8\x7b\x17\xe1\xd1\x81\xcb\x39\xd7\x36\xe3\x1f\x15\xe5\xd1\xdf\xa2\xe4\x17\xe4\x94\xc9\x22\x56\x20\xe5\x56\xb2\x13\x60\xad\x3b\x16\xc7\xa3\xbd\x61\x7e\x0f\x4c\x99\x5c\xa6\xce\x16\xcb\xca\x69\x16\xe6\x65\x38\xc6\x1d\x3c\x67\x48\x4d\x65\xa5\xf5\xd4\x94\xc7\x47\x16\x32\xe4\x65\xf0\x36\x1a\xd5\xd7\xe6\xf1\x1e\xaf\x2b\xf4\x34\x4e\xe6\x46\x38\x70\x10\xa2\xf3\x6e\xfd\xe8\x7f\x3d\x56\xc2\x53\x58\x11\x52\x94\x64\x5d\x18\xf0\x1b\x74\xd4\xd9\x45\x49\xf8\x40\xf8\x95\xa2\xf8\x04\x7e\x74\x27\x0d\xbd\xc7\xde\x1f\x58\xb7\xc4\xc4\x4a\x5c\x0a\x23\x97\x37\x42\xab\x90\xec\xd2\xb5\x51\x7a\x1c\xa6\x40\x5c\x88\x1b\xec\x7b\x3c\x06\x61\xdb\x36\x27\xd1\x0a\x0d\x8d\xe9\xc2\x5b\x28\xde\x1a\xdc\xac\x03\x46\x2a\x0d\x8b\x9b\x35\x7f\x2d\xfc\x99\xbd\xbc\x2b\x83\x51\xbb\x63\xb3\xe6\xdd\x7b\xa4\x64\x1c\x74\x52\xfb\xf0\xa6\x64\xaf\x99\xd3\xbe\xde\x2b\x5d\xda\x28\x9d\xe1\xaf\x14\x6a\xe9\xf7\xda\xd8\x19\xab\x14\x8c\x25\x58\xa4\x7c\x53\x14\x15\x89\xad\xc6\x59\xd3\xf0\xa8\x14\x64\x53\x49\x1a\x68\x56\x25\xd4\xb8\x0e\xfc\xff\xff\x73\x30\x4a\x4f\xe8\x39\x42\x83\x5f\x20\xcd\x6d\x8d\x8e\xe7\x5d\xc6\xd0\x9c\x57\x64\xa5\x85\x25\xdc\xe6\x82\x40\x6c\x6d\x45\xe0\xb5\x4a\x10\xd2\xb6\x28\x0a\xdf\xf3\xd0\x84\xa4\xf2\x64\x0b\x28\x84\xf3\xb9\xd0\x1a\x9d\xff\xa5\x3d\xc8\xe6\xb2\x99\x45\x22\xa0\x39\xad\xfc\xf0\xe7\x0e\x64\xec\x40\x3e\x95\x61\xe0\xe7\x80\xeb\x41\xc3\x47\x81\xd6\xd1\x02\xf9\x07\xa3\xae\xab\xc3\x3d\x69\xc1\x6d\xfd\xff\x5e\x91\x08\x27\xd2\x05\xd2\x00\xd9\x69\xdc\xf8\x50\xbc\x86\x5a\x8f\x89\xf3\x52\xa3\x08\x32\x1a\xc5\x93\x85\x17\xb2\x69\xed\x7c\x7c\xce\xf9\xa1\x14\x96\xc3\x6b\xc0\xf0\x79\x50\x57\xc2\x3c\x92\x75\x08\xca\xcc\x68\x6e\x78\xf0\x24\xe8\x68\x73\x5b\xe0\x61\x74\x23\xf7\x4d\x3d\xe2\xa3\xa9\x4e\xec\x65\x31\xaf\x1b\x8d\x32\x2f\xf3\xa0\xde\xca\x64\x0c\xa4\x4a\x68\x6f\x2b\x6b\x4e\x26\xcf\x20\xd2\xca\x13\x30\x63\x69\x99\xda\xca\x48\xd6\xfe\xef\x95\xc9\x2a\x2d\x1c\xdb\x87\x86\xbd\xb1\x59\xbf\x31\x2a\x9d\x32\x94\x02\x0b\x5a\xbf\x31\x14\x7d\x66\x3f\xf8\xcf\xec\x04\x94\x8c\x59\x27\x18\x41\x65\xe2\x19\x3f\x6b\x4c\x45\xa5\x89\x75\x4e\x80\x25\xb6\xd2\xb2\x19\xff\xf6\xa0\x03\x36\x38\x23\xaf\x70\x2b\xb6\x63\x2f\x73\x0a\xf8\x1e\xb5\x15\x32\xdc\x27\xdd\xdd\x18\xec\xeb\xef\x08\xe0\x1f\x15\xba\xbb\x28\xe6\x1f\x73\x74\x18\xcd\x9e\xcd\x7c\xb3\x8e\x90\xf7\x2a\x38\xe1\xf0\x7e\xb7\xba\xdb\x68\x98\xc3\x4b\xfb\x26\xe4\xb4\x30\xc0\x12\x87\xc3\x5b\xeb\x24\xf9\x53\x91\xa1\x83\xb6\x80\x66\x80\x1b\x3d\x11\x0e\x21\x08\xbf\x72\x28\xc1\x9a\x7b\x70\x6c\x89\xae\x61\x37\xdf\x73\x75\x5d\xd7\xc0\x4f\x0d\x35\x65\x4d\x63\x1d\xa0\x75\xc7\xc5\xe7\x70\xcd\xdf\x1a\x7d\xf7\x1f\x15\x3b\x2a\x3a\x14\x72\x86\x88\xc0\x40\xa4\xe1\x26\xd7\xfd\x0e\xf9\x3e\x31\x35\xdf\x98\xd4\x46\x6c\xc4\xac\xc6\x51\x10\x5e\x87\x46\xa2\xc3\x70\x3b\xba\xcf\x9d\xf5\x44\xeb\x28\xca\x4e\xe0\x7b\xec\x1b\x06\x73\x48\x95\x33\x90\xf0\xdf\x2e\xde\x9e\x47\xe7\x78\x5b\xd7\x10\x39\xf4\xa5\x35\x1e\xff\x54\x78\x1b\x98\xb8\x30\xfc\x85\x31\xb6\xd5\x47\xcf\x4f\xf5\x55\x77\x0b\x38\x73\xb6\x2a\x7d\xcc\x83\x61\x17\x3b\x1a\x62\x36\xfd\x85\xd4\xff\xf7\x6f\x00\x00\x00\xff\xff\xa5\xce\x70\x98\xd0\x0d\x00\x00")

func templateHttpUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpUpdateTmpl,
		"template/http/update.tmpl",
	)
}

func templateHttpUpdateTmpl() (*asset, error) {
	bytes, err := templateHttpUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/update.tmpl", size: 3536, mode: os.FileMode(511), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/http/create.tmpl":    templateHttpCreateTmpl,
	"template/http/delete.tmpl":    templateHttpDeleteTmpl,
	"template/http/handler.tmpl":   templateHttpHandlerTmpl,
	"template/http/helpers.tmpl":   templateHttpHelpersTmpl,
	"template/http/import.tmpl":    templateHttpImportTmpl,
	"template/http/list.tmpl":      templateHttpListTmpl,
	"template/http/read.tmpl":      templateHttpReadTmpl,
	"template/http/relations.tmpl": templateHttpRelationsTmpl,
	"template/http/request.tmpl":   templateHttpRequestTmpl,
	"template/http/response.tmpl":  templateHttpResponseTmpl,
	"template/http/update.tmpl":    templateHttpUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"http": &bintree{nil, map[string]*bintree{
			"create.tmpl":    &bintree{templateHttpCreateTmpl, map[string]*bintree{}},
			"delete.tmpl":    &bintree{templateHttpDeleteTmpl, map[string]*bintree{}},
			"handler.tmpl":   &bintree{templateHttpHandlerTmpl, map[string]*bintree{}},
			"helpers.tmpl":   &bintree{templateHttpHelpersTmpl, map[string]*bintree{}},
			"import.tmpl":    &bintree{templateHttpImportTmpl, map[string]*bintree{}},
			"list.tmpl":      &bintree{templateHttpListTmpl, map[string]*bintree{}},
			"read.tmpl":      &bintree{templateHttpReadTmpl, map[string]*bintree{}},
			"relations.tmpl": &bintree{templateHttpRelationsTmpl, map[string]*bintree{}},
			"request.tmpl":   &bintree{templateHttpRequestTmpl, map[string]*bintree{}},
			"response.tmpl":  &bintree{templateHttpResponseTmpl, map[string]*bintree{}},
			"update.tmpl":    &bintree{templateHttpUpdateTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
